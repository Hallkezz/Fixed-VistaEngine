Version = 0;
Dictionary = {
	untranslated = {
		29;
		{
			first = "&Виды оружия";
			second = "";
		},
		{
			first = "&Игнорировать контекст условия";
			second = "";
		},
		{
			first = "&Типы зданий";
			second = "";
		},
		{
			first = "&Типы объектов";
			second = "";
		},
		{
			first = "&Типы юнитов";
			second = "";
		},
		{
			first = "&Типы юнитов (после апгрейда)";
			second = "";
		},
		{
			first = "АИ\\Заказать здание на зоне";
			second = "";
		},
		{
			first = "Герой (для статистики)";
			second = "";
		},
		{
			first = "Добавить оружие";
			second = "";
		},
		{
			first = "Добавить параметр в группу";
			second = "";
		},
		{
			first = "Добавить цепочку";
			second = "";
		},
		{
			first = "Имя расы";
			second = "";
		},
		{
			first = "Контекстные действия\\Заказать здание";
			second = "";
		},
		{
			first = "Контекстные условия\\Здание строится";
			second = "";
		},
		{
			first = "Контекстные условия\\Количество юнитов в радиусе меньше указанного";
			second = "";
		},
		{
			first = "Копировать все цепочки";
			second = "";
		},
		{
			first = "Коэффициенты для статистики ресурсов (умножаются на соответствующие параметры и складываются)";
			second = "";
		},
		{
			first = "Общие тексты для локализации";
			second = "";
		},
		{
			first = "Переименновать группу";
			second = "";
		},
		{
			first = "Радиус поиска";
			second = "";
		},
		{
			first = "Стратегическая точка (для статистики)";
			second = "";
		},
		{
			first = "Типы искомых объектов";
			second = "";
		},
		{
			first = "Удалить группу с параметрами";
			second = "";
		},
		{
			first = "Удалить параметр";
			second = "";
		},
		{
			first = "Удалить только группу";
			second = "";
		},
		{
			first = "Удалить юнит";
			second = "";
		},
		{
			first = "Цвет текста второстепенных задач";
			second = "";
		},
		{
			first = "насыщенность";
			second = "";
		},
		{
			first = "стволы";
			second = "";
		},
		{
			first = "стреляет очередями";
			second = "";
		}
	};
	dictionary = {
		3465;
		{
			first = "";
			second = "";
		},
		{
			first = " [Survivors(S)]";
			second = "";
		},
		{
			first = "&Type";
			second = "";
		},
		{
			first = "&Unit";
			second = "";
		},
		{
			first = "&a";
			second = "";
		},
		{
			first = "&b";
			second = "";
		},
		{
			first = "&g";
			second = "";
		},
		{
			first = "&r";
			second = "";
		},
		{
			first = "&s";
			second = "";
		},
		{
			first = "&source";
			second = "";
		},
		{
			first = "&weapon name";
			second = "";
		},
		{
			first = "&x";
			second = "";
		},
		{
			first = "&y";
			second = "";
		},
		{
			first = "&z";
			second = "";
		},
		{
			first = "&Автоматический";
			second = "&Automatical";
		},
		{
			first = "&Апгрейд";
			second = "&Upgrade";
		},
		{
			first = "&Вид оружия";
			second = "&Weapon Appearance";
		},
		{
			first = "&Владелец объекта";
			second = "&Object's owner";
		},
		{
			first = "&Владелец объектов";
			second = "&Objects owner";
		},
		{
			first = "&Время, секунды";
			second = "&Time, seconds";
		},
		{
			first = "&Выполнять во время паузы";
			second = "&Perform during pause";
		},
		{
			first = "&Высота";
			second = "&Height";
		},
		{
			first = "&Движение";
			second = "&Movement";
		},
		{
			first = "&Должно быть построено";
			second = "&Must be constructed";
		},
		{
			first = "&Звук";
			second = "&Sound";
		},
		{
			first = "&Здание";
			second = "&Building";
		},
		{
			first = "&Здоровье";
			second = "&Health";
		},
		{
			first = "&Значение";
			second = "&Value";
		},
		{
			first = "&ИЛИ";
			second = "&OR";
		},
		{
			first = "&Игрок";
			second = "&Player";
		},
		{
			first = "&Игрок атакуемый";
			second = "&Player under attack";
		},
		{
			first = "&Идентификатор кнопки";
			second = "&Button Identifier";
		},
		{
			first = "&Идентификатор цепочки";
			second = "&Chain Identifier";
		},
		{
			first = "&Имя";
			second = "&Name";
		},
		{
			first = "&Имя анимационной группы";
			second = "&Animation group name";
		},
		{
			first = "&Имя группы видимости";
			second = "&Visibility group name";
		},
		{
			first = "&Имя переменной";
			second = "&Variable name";
		},
		{
			first = "&Имя сигнальной переменной";
			second = "&Signal variable name";
		},
		{
			first = "&Имя сигнальной переменной параметра";
			second = "&Parameter signal variable";
		},
		{
			first = "&Имя цепочки";
			second = "&Chain Name";
		},
		{
			first = "&Имя цепочки в модели";
			second = "&Chain number in the model";
		},
		{
			first = "&Ключ";
			second = "&Key";
		},
		{
			first = "&Кнопка";
			second = "&Button";
		},
		{
			first = "&Количество";
			second = "&Amount";
		},
		{
			first = "&Количество кликов";
			second = "&Click quantity";
		},
		{
			first = "&Количество общее";
			second = "&Common amount";
		},
		{
			first = "&Критерий сравнения";
			second = "&Comparison rule";
		},
		{
			first = "&Максимальное количество";
			second = "&Maximal amount";
		},
		{
			first = "&Максимальное расстояние";
			second = "&maximum distance";
		},
		{
			first = "&Масштаб";
			second = "&Scale";
		},
		{
			first = "&Метка объекта";
			second = "&Object mark";
		},
		{
			first = "&Метка(на якоре)";
			second = "&Label (for anchors)";
		},
		{
			first = "&Модель";
			second = "&Model";
		},
		{
			first = "&Название";
			second = "&Title";
		},
		{
			first = "&Номер";
			second = "&Number";
		},
		{
			first = "&Номер апгрейда";
			second = "&Upgrade number";
		},
		{
			first = "&Номер производства";
			second = "&Production number";
		},
		{
			first = "&Область действия переменной";
			second = "&Variable scope";
		},
		{
			first = "&Объект";
			second = "&Object";
		},
		{
			first = "&Объект 1";
			second = "&Object 1";
		},
		{
			first = "&Объект 2";
			second = "&Object 2";
		},
		{
			first = "&Объект1";
			second = "&Object1";
		},
		{
			first = "&Объект2";
			second = "&Object2";
		},
		{
			first = "&ОбъектЫ";
			second = "&Objects";
		},
		{
			first = "&Объекты";
			second = "&Objects";
		},
		{
			first = "&Операция";
			second = "&Operation";
		},
		{
			first = "&Операция сравнения";
			second = "&Comparison operation";
		},
		{
			first = "&Параметр";
			second = "&Parameter";
		},
		{
			first = "&Перезапускать в игровом сейве";
			second = "&Restart in saved games";
		},
		{
			first = "&Показывать взлетающий текст";
			second = "&Show pop-up text";
		},
		{
			first = "&Положение";
			second = "&Position";
		},
		{
			first = "&При наведении";
			second = "&On mouse over";
		},
		{
			first = "&Производство";
			second = "&Production";
		},
		{
			first = "&Процент от максимального кол-ва";
			second = "&Percentage of maximum amount";
		},
		{
			first = "&Процент урона";
			second = "&Damage percentage";
		},
		{
			first = "&Радиус";
			second = "&Radius";
		},
		{
			first = "&Раса";
			second = "&Race";
		},
		{
			first = "&Расстояние";
			second = "&Distance";
		},
		{
			first = "&Сверху";
			second = "&On the top";
		},
		{
			first = "&Слева";
			second = "&On the left";
		},
		{
			first = "&Сообщение";
			second = "&Message";
		},
		{
			first = "&Состояние";
			second = "&State";
		},
		{
			first = "&Текст (Лок)";
			second = "&Text (Loc)";
		},
		{
			first = "&Текстура";
			second = "&Texture";
		},
		{
			first = "&Тертулзер";
			second = "&Tertoolser";
		},
		{
			first = "&Тертулзер для неразрушаемой поверхности";
			second = "&Tertoolser for indestructible terrain";
		},
		{
			first = "&Тертулзер для обычной поверхности";
			second = "&Tertoolser for common terrain";
		},
		{
			first = "&Тип";
			second = "&Type";
		},
		{
			first = "&Тип атакуемого объекта";
			second = "&Type of the object under attack";
		},
		{
			first = "&Тип атакующего объекта";
			second = "&Attacking weapon type";
		},
		{
			first = "&Тип атакующих юнитов";
			second = "&Type of attacking units";
		},
		{
			first = "&Тип воздействия";
			second = "&Influence type";
		},
		{
			first = "&Тип объекта(не выбран все объекты)";
			second = "&Object type (all objects are selected on default)";
		},
		{
			first = "&Тип оружия";
			second = "&Weapon type";
		},
		{
			first = "&Тип параметра";
			second = "&Parameter type";
		},
		{
			first = "&Тип поверхности";
			second = "&Landscape type";
		},
		{
			first = "&Тип сквада";
			second = "&squad type";
		},
		{
			first = "&Тип юнита";
			second = "&Unit Type";
		},
		{
			first = "&Тип юнита(если не указан, то берутся все юниты)";
			second = "&Unit type (all units selected on default)";
		},
		{
			first = "&Типы воздействия";
			second = "&Influence types";
		},
		{
			first = "&Только один объект в селекте";
			second = "&Single object in selection";
		},
		{
			first = "&Только один тип объекта в селекте";
			second = "&Only one object type in selection";
		},
		{
			first = "&Указанный объект";
			second = "&Defined object";
		},
		{
			first = "&Уровень";
			second = "&Level";
		},
		{
			first = "&Условие сравнения";
			second = "&Comparison rule";
		},
		{
			first = "&Фаза";
			second = "&Phase";
		},
		{
			first = "&Формула здоровья";
			second = "&Health formula";
		},
		{
			first = "&Формула харизмы";
			second = "&Charisma formula";
		},
		{
			first = "&Харизма";
			second = "&Charisma";
		},
		{
			first = "&Хотя бы один";
			second = "&At least one";
		},
		{
			first = "&Цвет";
			second = "&Colour";
		},
		{
			first = "&Ширина";
			second = "&Width";
		},
		{
			first = "&Юнит";
			second = "&Unit";
		},
		{
			first = "&Юнит или здание";
			second = "&Unit or building";
		},
		{
			first = "&атакуемый класс юнитов";
			second = "&unit class under attack";
		},
		{
			first = "&атакующий класс юнитов";
			second = "&attacking unit class";
		},
		{
			first = "&включено";
			second = "&enabled";
		},
		{
			first = "&звук из библиотеки";
			second = "&sound from a library";
		},
		{
			first = "&имя";
			second = "&name";
		},
		{
			first = "&имя логического узла для управления поворотом";
			second = "&logical node title for ratation control";
		},
		{
			first = "&имя узла для управления поворотом";
			second = "&node title for rotation control";
		},
		{
			first = "&использовать собственные ограничения камеры";
			second = "&Use custom camera limitations";
		},
		{
			first = "&источник";
			second = "&source";
		},
		{
			first = "&количество юнитов";
			second = "&amount of units";
		},
		{
			first = "&место вылета снаряда";
			second = "&Point of shell projection";
		},
		{
			first = "&место спецэффекта выстрела";
			second = "&point of the shot special effect";
		},
		{
			first = "&название оружия";
			second = "&weapon name";
		},
		{
			first = "&оружие";
			second = "&weapon";
		},
		{
			first = "&раса";
			second = "&race";
		},
		{
			first = "&текстура";
			second = "&texture";
		},
		{
			first = "&тип";
			second = "&type";
		},
		{
			first = "&эфект молнии";
			second = "&lightning effect";
		},
		{
			first = "&эффект";
			second = "&effect";
		},
		{
			first = "* Для выбора объектов нажмите и удерживайте <LMB>\n* <G> - перемещение выдел. объектов\n* <R> - поворот выдел. объектов\n* <V> - сравнять с уровнем поверхности\n* <N> - к нормали поверхности\n";
			second = "* For object selection press and hold <LMB>\n* <G> - move selected objects\n* <R> - rotate selected object\n* <V> - level with the ground\n* <N> - to normal to the ground\n";
		},
		{
			first = "+";
			second = "+";
		},
		{
			first = "+%";
			second = "+%";
		},
		{
			first = "-";
			second = "";
		},
		{
			first = "-%";
			second = "";
		},
		{
			first = "--------------------------";
			second = "--------------------------";
		},
		{
			first = "1 рода";
			second = "1 class";
		},
		{
			first = "100% скорость игры";
			second = "100% game speed";
		},
		{
			first = "1024";
			second = "1024";
		},
		{
			first = "128";
			second = "128";
		},
		{
			first = "150% скорость игры";
			second = "150% game speed";
		},
		{
			first = "2 рода";
			second = "2 class";
		},
		{
			first = "2048";
			second = "2048";
		},
		{
			first = "256";
			second = "256";
		},
		{
			first = "2D звук";
			second = "2D sound";
		},
		{
			first = "3 рода";
			second = "3 class";
		},
		{
			first = "3D звук";
			second = "3D sound";
		},
		{
			first = "4 рода";
			second = "4 class";
		},
		{
			first = "4096";
			second = "4096";
		},
		{
			first = "50% скорость игры";
			second = "50% game speed";
		},
		{
			first = "512";
			second = "512";
		},
		{
			first = "8192";
			second = "8192";
		},
		{
			first = "=";
			second = "=";
		},
		{
			first = "@";
			second = "";
		},
		{
			first = "A-BIOCREEP";
			second = "";
		},
		{
			first = "A-BIOCREEP2";
			second = "";
		},
		{
			first = "A-BIOMASS GENERATOR";
			second = "";
		},
		{
			first = "A-BIOMASS GENERATOR2";
			second = "";
		},
		{
			first = "A-BIRD BASIC";
			second = "";
		},
		{
			first = "A-BIRD HEAVY";
			second = "";
		},
		{
			first = "A-BIRD LIGHT";
			second = "";
		},
		{
			first = "A-BIRD MEDIUM";
			second = "";
		},
		{
			first = "A-CRUSHER";
			second = "";
		},
		{
			first = "A-DEVOURER";
			second = "";
		},
		{
			first = "A-EGG  SPAWN PACK SUPER";
			second = "";
		},
		{
			first = "A-EGG BIRD BASIC";
			second = "";
		},
		{
			first = "A-EGG BIRD HEAVY";
			second = "";
		},
		{
			first = "A-EGG BIRD LIGHT";
			second = "";
		},
		{
			first = "A-EGG BIRD MEDIUM";
			second = "";
		},
		{
			first = "A-EGG FAR SPIT CREATURE BASIC";
			second = "";
		},
		{
			first = "A-EGG FAR SPIT CREATURE HEAVY";
			second = "";
		},
		{
			first = "A-EGG FAR SPIT CREATURE MEDIUM";
			second = "";
		},
		{
			first = "A-EGG LAND CREATURE HEAVY";
			second = "";
		},
		{
			first = "A-EGG LAND CREATURE MEDIUM";
			second = "";
		},
		{
			first = "A-EGG PROPAGATOR BASIC";
			second = "";
		},
		{
			first = "A-EGG PROPAGATOR HEAVY";
			second = "";
		},
		{
			first = "A-EGG PROPAGATOR LIGHT";
			second = "";
		},
		{
			first = "A-EGG PROPAGATOR MEDIUM";
			second = "";
		},
		{
			first = "A-EGG PROPAGATOR SUPER";
			second = "";
		},
		{
			first = "A-EGG PRORACTOR";
			second = "";
		},
		{
			first = "A-EGG SPAWN PACK BASIC";
			second = "";
		},
		{
			first = "A-EGG SPAWN PACK HEAVY";
			second = "";
		},
		{
			first = "A-EGG SPAWN PACK LIGHT";
			second = "";
		},
		{
			first = "A-EGG SPAWN PACK MEDIUM";
			second = "";
		},
		{
			first = "A-EGG1";
			second = "";
		},
		{
			first = "A-EGG1-3";
			second = "";
		},
		{
			first = "A-EGG1-5";
			second = "";
		},
		{
			first = "A-EGG2";
			second = "";
		},
		{
			first = "A-EGG2-3";
			second = "";
		},
		{
			first = "A-EGG2-5";
			second = "";
		},
		{
			first = "A-EGG3";
			second = "";
		},
		{
			first = "A-EGG3-3";
			second = "";
		},
		{
			first = "A-EGG3-5";
			second = "";
		},
		{
			first = "A-FAR SPIT CREATURE BASIC";
			second = "";
		},
		{
			first = "A-FAR SPIT CREATURE HEAVY";
			second = "";
		},
		{
			first = "A-FAR SPIT CREATURE MEDIUM";
			second = "";
		},
		{
			first = "A-GIANT METEOR";
			second = "";
		},
		{
			first = "A-GIANT WORM";
			second = "";
		},
		{
			first = "A-GIANT WORM1";
			second = "";
		},
		{
			first = "A-INCEPTION SPORE";
			second = "";
		},
		{
			first = "A-INCEPTION SPORE2";
			second = "";
		},
		{
			first = "A-INCEPTION SPORE3";
			second = "";
		},
		{
			first = "A-INCEPTION SPORE4";
			second = "";
		},
		{
			first = "A-INCEPTION SPORE5";
			second = "";
		},
		{
			first = "A-LAND CREATURE HEAVY";
			second = "";
		},
		{
			first = "A-LAND CREATURE MEDIUM";
			second = "";
		},
		{
			first = "A-LAND DRAGON";
			second = "";
		},
		{
			first = "A-LEECH";
			second = "";
		},
		{
			first = "A-PROPAGATOR";
			second = "";
		},
		{
			first = "A-PROPAGATOR BASIC";
			second = "";
		},
		{
			first = "A-PROPAGATOR HEAVY";
			second = "";
		},
		{
			first = "A-PROPAGATOR LIGHT";
			second = "";
		},
		{
			first = "A-PROPAGATOR MEDIUM";
			second = "";
		},
		{
			first = "A-PROPAGATOR SUPER";
			second = "";
		},
		{
			first = "A-PRORACTOR MINA";
			second = "";
		},
		{
			first = "A-RIPPER";
			second = "";
		},
		{
			first = "A-SCOOPER";
			second = "";
		},
		{
			first = "A-SCORPION";
			second = "";
		},
		{
			first = "A-SCUTTLER";
			second = "";
		},
		{
			first = "A-SIREN";
			second = "";
		},
		{
			first = "A-SPAWN";
			second = "";
		},
		{
			first = "A-SPAWN PACK BASIC";
			second = "";
		},
		{
			first = "A-SPAWN PACK HEAVY";
			second = "";
		},
		{
			first = "A-SPAWN PACK LIGHT";
			second = "";
		},
		{
			first = "A-SPAWN PACK MEDIUM";
			second = "";
		},
		{
			first = "A-SPAWN PACK SUPER";
			second = "";
		},
		{
			first = "A-TOCHKA";
			second = "";
		},
		{
			first = "A-TRUP1";
			second = "";
		},
		{
			first = "A-TUNNELER";
			second = "";
		},
		{
			first = "A-TVARЕ";
			second = "A-TVARЕ";
		},
		{
			first = "A-TVARЕ1";
			second = "A-TVARЕ1";
		},
		{
			first = "A-Здание-медведь";
			second = "A-Building-bear";
		},
		{
			first = "A-Здание-птица";
			second = "A-building-bird";
		},
		{
			first = "A-Здание-собака";
			second = "A-building-dog";
		},
		{
			first = "A-Здание-строитель";
			second = "A-building-builder";
		},
		{
			first = "A-Ключевая точка";
			second = "A-key point";
		},
		{
			first = "A-Медведь";
			second = "A-bear";
		},
		{
			first = "A-Птица";
			second = "A-bird";
		},
		{
			first = "A-Собака";
			second = "A-dog";
		},
		{
			first = "A-Строитель";
			second = "A-builder";
		},
		{
			first = "A-Штаб";
			second = "A-headquarters";
		},
		{
			first = "ANIMALS";
			second = "";
		},
		{
			first = "ANTONOVA";
			second = "";
		},
		{
			first = "ATTACK_CLASS_CORPSE_DYNAMIC";
			second = "";
		},
		{
			first = "AURIGA";
			second = "";
		},
		{
			first = "Accomplished";
			second = "";
		},
		{
			first = "Ambient максиум";
			second = "Ambient maximum";
		},
		{
			first = "Ambient умножение";
			second = "Ambient multiplication";
		},
		{
			first = "Anchor";
			second = "";
		},
		{
			first = "Attack";
			second = "";
		},
		{
			first = "BUILDING";
			second = "";
		},
		{
			first = "BUILDING ZIMA";
			second = "";
		},
		{
			first = "BasementInscribedRadius";
			second = "";
		},
		{
			first = "BasementMax";
			second = "";
		},
		{
			first = "BasementMin";
			second = "";
		},
		{
			first = "BasementPoints";
			second = "";
		},
		{
			first = "Bump текстура";
			second = "Bump texture";
		},
		{
			first = "CHAIN_NONE";
			second = "";
		},
		{
			first = "COLLISION_GROUP_ACTIVE_COLLIDER";
			second = "";
		},
		{
			first = "COLLISION_GROUP_COLLIDER";
			second = "";
		},
		{
			first = "COLLISION_GROUP_REAL";
			second = "";
		},
		{
			first = "Camera Restriction";
			second = "";
		},
		{
			first = "Camera border color on the map";
			second = "";
		},
		{
			first = "Camera border color on the minimap";
			second = "";
		},
		{
			first = "Change time";
			second = "";
		},
		{
			first = "Chaos: Bump texture";
			second = "";
		},
		{
			first = "Chaos: Texture 1";
			second = "";
		},
		{
			first = "Chaos: Texture 2";
			second = "";
		},
		{
			first = "Circle color";
			second = "";
		},
		{
			first = "Click on a Map";
			second = "";
		},
		{
			first = "Closed";
			second = "";
		},
		{
			first = "Cloud's shadows texture";
			second = "";
		},
		{
			first = "Color 1";
			second = "";
		},
		{
			first = "Color 2";
			second = "";
		},
		{
			first = "Computer";
			second = "";
		},
		{
			first = "Condition";
			second = "";
		},
		{
			first = "Created zone";
			second = "";
		},
		{
			first = "Custom game";
			second = "";
		},
		{
			first = "Cтроит что-то";
			second = "Builds something";
		},
		{
			first = "DOF эффект";
			second = "DOF effect";
		},
		{
			first = "DRON";
			second = "";
		},
		{
			first = "Defined";
			second = "";
		},
		{
			first = "Diffuse умножение";
			second = "Diffuse muliplication";
		},
		{
			first = "Direct control - back";
			second = "";
		},
		{
			first = "Direct control - forward";
			second = "";
		},
		{
			first = "Direct control - left";
			second = "";
		},
		{
			first = "Direct control - right";
			second = "";
		},
		{
			first = "Direct control - strafe left";
			second = "";
		},
		{
			first = "Direct control - strafe right";
			second = "";
		},
		{
			first = "Distortion texture";
			second = "";
		},
		{
			first = "Dome color";
			second = "";
		},
		{
			first = "Dome model";
			second = "";
		},
		{
			first = "E-AIRSHIP-HOWITZERTANK";
			second = "";
		},
		{
			first = "E-AIRTRANSPORT-HOWITZERTURRET";
			second = "";
		},
		{
			first = "E-BARRACKS";
			second = "";
		},
		{
			first = "E-BARRACKS2";
			second = "";
		},
		{
			first = "E-BARRACKS3";
			second = "";
		},
		{
			first = "E-COMMAND POST";
			second = "";
		},
		{
			first = "E-COMMAND POST2";
			second = "";
		},
		{
			first = "E-COMMAND POST3";
			second = "";
		},
		{
			first = "E-CONSTRUCTOR BOT";
			second = "";
		},
		{
			first = "E-DETAIL";
			second = "";
		},
		{
			first = "E-DETAIL1";
			second = "";
		},
		{
			first = "E-FREEZER";
			second = "";
		},
		{
			first = "E-GRUNT";
			second = "";
		},
		{
			first = "E-HEAVYROBOT-HELICOPTER";
			second = "";
		},
		{
			first = "E-HELICOPTER-HEAVYROBOT";
			second = "";
		},
		{
			first = "E-HOWITZERTANK-AIRSHIP";
			second = "";
		},
		{
			first = "E-HOWITZERTURRET-AIRTRANSPORT";
			second = "";
		},
		{
			first = "E-HYDRO GENERATOR";
			second = "";
		},
		{
			first = "E-HYDRO GENERATOR2";
			second = "";
		},
		{
			first = "E-LIGHTTANK-ROBOT";
			second = "";
		},
		{
			first = "E-LIGHTTANK-ROBOT2";
			second = "";
		},
		{
			first = "E-MOBILE CP";
			second = "";
		},
		{
			first = "E-MOBILE CP2";
			second = "";
		},
		{
			first = "E-MOBILE CP3";
			second = "";
		},
		{
			first = "E-RESEARCH LAB";
			second = "";
		},
		{
			first = "E-RESEARCH LAB2";
			second = "";
		},
		{
			first = "E-RESEARCH LAB3";
			second = "";
		},
		{
			first = "E-ROBO-GIANT";
			second = "";
		},
		{
			first = "E-ROBOT-LIGHTTANK";
			second = "";
		},
		{
			first = "E-ROBOT-LIGHTTANK2";
			second = "";
		},
		{
			first = "E-SCOUTBAGGY-TURRET";
			second = "";
		},
		{
			first = "E-SCOUTBAGGY-TURRET2";
			second = "";
		},
		{
			first = "E-SNIPER";
			second = "";
		},
		{
			first = "E-SPECIAL PLANT";
			second = "";
		},
		{
			first = "E-TOCHKA";
			second = "";
		},
		{
			first = "E-TRUP1";
			second = "";
		},
		{
			first = "E-TURRET-SCOUTBAGGY";
			second = "";
		},
		{
			first = "E-TURRET-SCOUTBAGGY2";
			second = "";
		},
		{
			first = "E-VEHECLE PLANT";
			second = "";
		},
		{
			first = "E-VEHECLE PLANT2";
			second = "";
		},
		{
			first = "E-Багги-пушка";
			second = "E-buggy-gun";
		},
		{
			first = "E-Барак";
			second = "A-barrack";
		},
		{
			first = "E-Вертолет-робот";
			second = "E-helicopter-robot";
		},
		{
			first = "E-Грузовик";
			second = "E-truck";
		},
		{
			first = "E-Завод техники";
			second = "E-vehicle factory";
		},
		{
			first = "E-Ключевая точка";
			second = "E-key point";
		},
		{
			first = "E-Пушка-багги";
			second = "E-gun-buggy";
		},
		{
			first = "E-Пушка-транспорт";
			second = "E-gun-transformer";
		},
		{
			first = "E-Ресурсодобытчик";
			second = "E-resource gatherer";
		},
		{
			first = "E-Робот-вертолет";
			second = "E-robot helicopter";
		},
		{
			first = "E-Робот-танк";
			second = "E-robot tank";
		},
		{
			first = "E-Склад ресурса";
			second = "E-resource depository";
		},
		{
			first = "E-Солдат";
			second = "E-soldier";
		},
		{
			first = "E-Танк-робот";
			second = "E-tank-robot";
		},
		{
			first = "E-Транспорт-пушка";
			second = "E-transformer-gun";
		},
		{
			first = "E-Штаб";
			second = "E-headquarters";
		},
		{
			first = "EXCLUDE_COLLISION_BULLET";
			second = "";
		},
		{
			first = "EXCLUDE_COLLISION_ENVIRONMENT";
			second = "";
		},
		{
			first = "EnablePointLight";
			second = "";
		},
		{
			first = "FLAG";
			second = "";
		},
		{
			first = "Factory type";
			second = "";
		},
		{
			first = "FadeIn (милисекунд)";
			second = "FadeIn (milliseconds)";
		},
		{
			first = "FadeOut (милисекунд)";
			second = "FadeOut (milliseconds)";
		},
		{
			first = "Failed";
			second = "";
		},
		{
			first = "FarDistanceLOD";
			second = "";
		},
		{
			first = "File name";
			second = "";
		},
		{
			first = "Flash color";
			second = "";
		},
		{
			first = "Formula";
			second = "";
		},
		{
			first = "GRASS";
			second = "";
		},
		{
			first = "Game Scenario";
			second = "";
		},
		{
			first = "Geo Texture";
			second = "";
		},
		{
			first = "Geo текстуры";
			second = "Geo textures";
		},
		{
			first = "Grass";
			second = "";
		},
		{
			first = "Halt production";
			second = "";
		},
		{
			first = "Highlight";
			second = "";
		},
		{
			first = "Highlight all";
			second = "";
		},
		{
			first = "ICE ON WATER: Bump texture";
			second = "";
		},
		{
			first = "ICE ON WATER: snow texture";
			second = "";
		},
		{
			first = "ICE: bump texture";
			second = "";
		},
		{
			first = "ICE: snow texture";
			second = "";
		},
		{
			first = "ID";
			second = "";
		},
		{
			first = "Influence type";
			second = "";
		},
		{
			first = "Installation zone";
			second = "";
		},
		{
			first = "Items";
			second = "";
		},
		{
			first = "JB";
			second = "";
		},
		{
			first = "JB factory";
			second = "";
		},
		{
			first = "Kill selected units";
			second = "";
		},
		{
			first = "LEIKOSHO";
			second = "";
		},
		{
			first = "Lava: Texture";
			second = "";
		},
		{
			first = "LevelUp Эффект";
			second = "LevelUp Effect";
		},
		{
			first = "MAMMON";
			second = "";
		},
		{
			first = "MAMMON CLON";
			second = "";
		},
		{
			first = "METKA";
			second = "";
		},
		{
			first = "Map Scenario";
			second = "";
		},
		{
			first = "MapLevelLOD";
			second = "";
		},
		{
			first = "Max начальное количество";
			second = "Maximum initial amount";
		},
		{
			first = "Maximilian";
			second = "";
		},
		{
			first = "MeshShadow";
			second = "";
		},
		{
			first = "Min начальное количество";
			second = "Minimal initial amount";
		},
		{
			first = "MipMapLevel";
			second = "";
		},
		{
			first = "Missile";
			second = "";
		},
		{
			first = "Mission name";
			second = "";
		},
		{
			first = "Model name";
			second = "";
		},
		{
			first = "Moon texture";
			second = "";
		},
		{
			first = "Move camera";
			second = "";
		},
		{
			first = "Move camera down";
			second = "";
		},
		{
			first = "Move camera left";
			second = "";
		},
		{
			first = "Move camera right";
			second = "";
		},
		{
			first = "Move camera up";
			second = "";
		},
		{
			first = "Move camera via mouse";
			second = "";
		},
		{
			first = "Music on/off";
			second = "";
		},
		{
			first = "NearDistanceLOD";
			second = "";
		},
		{
			first = "Normal game speed";
			second = "";
		},
		{
			first = "ONiel";
			second = "";
		},
		{
			first = "Object";
			second = "";
		},
		{
			first = "Open";
			second = "";
		},
		{
			first = "PSYCHIC";
			second = "";
		},
		{
			first = "PathTracking";
			second = "";
		},
		{
			first = "PathTracking:Большые юниты игнорируют меньших";
			second = "PathTracking: bigger units ignore smaller units";
		},
		{
			first = "PathTracking:Враги игнорируют меньших";
			second = "PathTracking:Enemies ignore smaller ones";
		},
		{
			first = "PathTracking:Минимальный игнорируемый радиус";
			second = "PathTracking:Minimal ignore radius";
		},
		{
			first = "PathTracking:Радиус остановки";
			second = "PathTracking: Stop radius";
		},
		{
			first = "PathTracking:Уступать дорогу";
			second = "PathTracking:Clear the way";
		},
		{
			first = "PathTracking:Уступать дорогу врагу";
			second = "PathTracking: step aside of the enemy";
		},
		{
			first = "Pause";
			second = "";
		},
		{
			first = "Play";
			second = "";
		},
		{
			first = "Player";
			second = "";
		},
		{
			first = "Player0 [Aliens(A)]";
			second = "";
		},
		{
			first = "Player0 [Ascension(E)]";
			second = "";
		},
		{
			first = "Player0 [Survivors(S)]";
			second = "";
		},
		{
			first = "Player0 [Империя(E)]";
			second = "Player0 [Empire(E)]";
		},
		{
			first = "Player0 [Пришельцы_(Aliens)]";
			second = "Player0 [Aliens_(Aliens)]";
		},
		{
			first = "Player1 [Ascension(E)]";
			second = "";
		},
		{
			first = "Player1 [Remnants(R)]";
			second = "";
		},
		{
			first = "Player1 [Империя(E)]";
			second = "Player1 [Empire(E)]";
		},
		{
			first = "Player1 [Империя_(Ascension)]";
			second = "Player1 [Empire_(Ascension)]";
		},
		{
			first = "Player1 [Пришельцы_(Aliens)]";
			second = "Player1 [Aliens_(Aliens)]";
		},
		{
			first = "Player2 [Aliens(A)]";
			second = "";
		},
		{
			first = "Player2 [Remnants(R)]";
			second = "";
		},
		{
			first = "Player2 [Повстанцы_(The Remnants)]";
			second = "Player2 [Survivor_(The Remrants)]";
		},
		{
			first = "Player3 [Survivors(S)]";
			second = "";
		},
		{
			first = "Player3 [Пришельцы_(Aliens)]";
			second = "Player3 [Aliens_(Aliens)]";
		},
		{
			first = "Player4 [Империя_(Ascension)]";
			second = "Player4 [Empire_(Ascension)]";
		},
		{
			first = "Player5 [Повстанцы_(The Remnants)]";
			second = "Player5 [Survivor_(The Remrants)]";
		},
		{
			first = "Predefine game";
			second = "";
		},
		{
			first = "R-CHEMICAL HELI";
			second = "";
		},
		{
			first = "R-CONSTRACTOR SUIT";
			second = "";
		},
		{
			first = "R-DEMOLITION FLY";
			second = "";
		},
		{
			first = "R-DETAIL";
			second = "";
		},
		{
			first = "R-DETAIL1";
			second = "";
		},
		{
			first = "R-FIRE GRUNT";
			second = "";
		},
		{
			first = "R-FRESH WATER EXTRACTOR";
			second = "";
		},
		{
			first = "R-FRESH WATER EXTRACTOR2";
			second = "";
		},
		{
			first = "R-GRUNT";
			second = "";
		},
		{
			first = "R-GRUNT TACTICAL1";
			second = "";
		},
		{
			first = "R-GRUNT TACTICAL2";
			second = "";
		},
		{
			first = "R-GRUNT TACTICAL3";
			second = "";
		},
		{
			first = "R-GRUNT WAGON";
			second = "";
		},
		{
			first = "R-GUARD TOWER";
			second = "";
		},
		{
			first = "R-GUARD TOWER1";
			second = "";
		},
		{
			first = "R-GUARD TOWER2";
			second = "";
		},
		{
			first = "R-GUARD TOWER3";
			second = "";
		},
		{
			first = "R-HAVEN";
			second = "";
		},
		{
			first = "R-HAVEN2";
			second = "";
		},
		{
			first = "R-HAVEN3";
			second = "";
		},
		{
			first = "R-HEAVY -GRUNT";
			second = "";
		},
		{
			first = "R-HERO";
			second = "";
		},
		{
			first = "R-HOWITZER";
			second = "";
		},
		{
			first = "R-HOWITZER UNIT";
			second = "";
		},
		{
			first = "R-INVADER";
			second = "";
		},
		{
			first = "R-JEEP-KAMIK 2";
			second = "";
		},
		{
			first = "R-JEEP-KAMIKAZE";
			second = "";
		},
		{
			first = "R-KAMIKAZE";
			second = "";
		},
		{
			first = "R-ROCKET JEEP";
			second = "";
		},
		{
			first = "R-ROCKET JEEP2";
			second = "";
		},
		{
			first = "R-SCRUMBLER";
			second = "";
		},
		{
			first = "R-SCRUMBLER2";
			second = "";
		},
		{
			first = "R-SHELTERED SANCTUARY";
			second = "";
		},
		{
			first = "R-SNIPER GRUNT";
			second = "";
		},
		{
			first = "R-SOLAR GENERATOR";
			second = "";
		},
		{
			first = "R-SOLAR GENERATOR2";
			second = "";
		},
		{
			first = "R-SPECIAL FACTORY";
			second = "";
		},
		{
			first = "R-STOCKPILE";
			second = "";
		},
		{
			first = "R-TANK middle";
			second = "";
		},
		{
			first = "R-TANK middle2";
			second = "";
		},
		{
			first = "R-TOCHKA";
			second = "";
		},
		{
			first = "R-TRUP1";
			second = "";
		},
		{
			first = "R-VENICLE FACTORY";
			second = "";
		},
		{
			first = "R-Барак";
			second = "R-Barrack";
		},
		{
			first = "R-Вертолет";
			second = "R-Helicopter";
		},
		{
			first = "R-Герой";
			second = "R-Hero";
		},
		{
			first = "R-Джип";
			second = "R-Jeep";
		},
		{
			first = "R-Завод техники";
			second = "R-Vehicle factory";
		},
		{
			first = "R-Ключевая точка";
			second = "R-key point";
		},
		{
			first = "R-Пушка";
			second = "R-gun";
		},
		{
			first = "R-Разведчик";
			second = "R-scout";
		},
		{
			first = "R-Солдат";
			second = "R-soldier";
		},
		{
			first = "R-Строитель";
			second = "R-builder";
		},
		{
			first = "R-Транспорт";
			second = "R-transport";
		},
		{
			first = "R-Фермы";
			second = "R-Farms";
		},
		{
			first = "R-Штаб";
			second = "R-Headquarters";
		},
		{
			first = "R-Энергодобытчик";
			second = "R-Energy gatherer";
		},
		{
			first = "R1-DETAIL";
			second = "";
		},
		{
			first = "REAL_PLAYER_TYPE_AI";
			second = "";
		},
		{
			first = "REAL_PLAYER_TYPE_CLOSE";
			second = "";
		},
		{
			first = "REAL_PLAYER_TYPE_OPEN";
			second = "";
		},
		{
			first = "REAL_PLAYER_TYPE_PLAYER";
			second = "";
		},
		{
			first = "REAL_PLAYER_TYPE_WORLD";
			second = "";
		},
		{
			first = "Resource type";
			second = "";
		},
		{
			first = "Restart";
			second = "";
		},
		{
			first = "Road";
			second = "";
		},
		{
			first = "Rotate camera with the mouse";
			second = "";
		},
		{
			first = "STRATEGY_COLOR_0";
			second = "";
		},
		{
			first = "STRATEGY_COLOR_1";
			second = "";
		},
		{
			first = "STRATEGY_COLOR_2";
			second = "";
		},
		{
			first = "STRATEGY_COLOR_3";
			second = "";
		},
		{
			first = "STRATEGY_COLOR_4";
			second = "";
		},
		{
			first = "STRATEGY_COLOR_5";
			second = "";
		},
		{
			first = "STRATEGY_COLOR_MAX";
			second = "";
		},
		{
			first = "Save screen";
			second = "";
		},
		{
			first = "Scroll camera down";
			second = "";
		},
		{
			first = "Scroll camera left";
			second = "";
		},
		{
			first = "Scroll camera right";
			second = "";
		},
		{
			first = "Scroll camera up";
			second = "";
		},
		{
			first = "SelectionDistance";
			second = "";
		},
		{
			first = "SelectionSize";
			second = "";
		},
		{
			first = "Selfdimming surface";
			second = "";
		},
		{
			first = "ShowCircles";
			second = "";
		},
		{
			first = "Slower the game";
			second = "";
		},
		{
			first = "Sound effects on/off";
			second = "";
		},
		{
			first = "Source";
			second = "";
		},
		{
			first = "Speed up the game";
			second = "";
		},
		{
			first = "Start Point";
			second = "";
		},
		{
			first = "Stop";
			second = "";
		},
		{
			first = "Sun model";
			second = "";
		},
		{
			first = "Sun texture";
			second = "";
		},
		{
			first = "Surrounding surface texture";
			second = "";
		},
		{
			first = "TELEPORT";
			second = "";
		},
		{
			first = "TELEPORT ZIMA";
			second = "";
		},
		{
			first = "TOCHKA";
			second = "";
		},
		{
			first = "TOCHKA ZIMA";
			second = "";
		},
		{
			first = "TREE";
			second = "";
		},
		{
			first = "TREE_FALLING";
			second = "";
		},
		{
			first = "TREE_FLOATING";
			second = "";
		},
		{
			first = "TREE_GROWING";
			second = "";
		},
		{
			first = "TREE_NORMAL";
			second = "";
		},
		{
			first = "Text Color";
			second = "";
		},
		{
			first = "Texture";
			second = "";
		},
		{
			first = "Train: circles texture";
			second = "";
		},
		{
			first = "UNIT_CLASS_BUILDING";
			second = "";
		},
		{
			first = "UNIT_CLASS_EFFECT";
			second = "";
		},
		{
			first = "UNIT_CLASS_ENVIRONMENT";
			second = "";
		},
		{
			first = "UNIT_CLASS_ENVIRONMENT_SIMPLE";
			second = "";
		},
		{
			first = "UNIT_CLASS_FLOCK";
			second = "";
		},
		{
			first = "UNIT_CLASS_ITEM";
			second = "";
		},
		{
			first = "UNIT_CLASS_ITEM_INVENTORY";
			second = "";
		},
		{
			first = "UNIT_CLASS_ITEM_LIVE";
			second = "";
		},
		{
			first = "UNIT_CLASS_ITEM_RESOURCE";
			second = "";
		},
		{
			first = "UNIT_CLASS_LEGIONARY";
			second = "";
		},
		{
			first = "UNIT_CLASS_MAX";
			second = "";
		},
		{
			first = "UNIT_CLASS_NONE";
			second = "";
		},
		{
			first = "UNIT_CLASS_PROJECTILE";
			second = "";
		},
		{
			first = "UNIT_CLASS_PROJECTILE_BULLET";
			second = "";
		},
		{
			first = "UNIT_CLASS_PROJECTILE_MISSILE";
			second = "";
		},
		{
			first = "UNIT_CLASS_REAL";
			second = "";
		},
		{
			first = "UNIT_CLASS_SQUAD";
			second = "";
		},
		{
			first = "UNIT_CLASS_ZONE";
			second = "";
		},
		{
			first = "Underwater effect's color";
			second = "";
		},
		{
			first = "Unit";
			second = "";
		},
		{
			first = "Unit Identifier";
			second = "";
		},
		{
			first = "Unit type";
			second = "";
		},
		{
			first = "Unit type in formation";
			second = "";
		},
		{
			first = "Unit type in formation for creation of a maximum amount of units";
			second = "";
		},
		{
			first = "V-PEOPLE";
			second = "";
		},
		{
			first = "WATERZONA";
			second = "";
		},
		{
			first = "Walk";
			second = "";
		},
		{
			first = "Water";
			second = "";
		},
		{
			first = "Waves";
			second = "";
		},
		{
			first = "Weapon";
			second = "";
		},
		{
			first = "World";
			second = "";
		},
		{
			first = "World [Пришельцы_(Aliens)]";
			second = "World [Aliens_(Aliens)]";
		},
		{
			first = "XVOST";
			second = "";
		},
		{
			first = "Zoom camera in";
			second = "";
		},
		{
			first = "activationTimer_";
			second = "";
		},
		{
			first = "activation_started_";
			second = "";
		},
		{
			first = "activePlayerID_";
			second = "";
		},
		{
			first = "active_";
			second = "";
		},
		{
			first = "affectMode_";
			second = "";
		},
		{
			first = "anbormalStates";
			second = "";
		},
		{
			first = "animationChains";
			second = "";
		},
		{
			first = "animationGroup";
			second = "";
		},
		{
			first = "arithmetics";
			second = "";
		},
		{
			first = "arithmeticsInv";
			second = "";
		},
		{
			first = "attribute";
			second = "";
		},
		{
			first = "auxPlayersAmount";
			second = "";
		},
		{
			first = "bottom";
			second = "";
		},
		{
			first = "boundBoxMax";
			second = "";
		},
		{
			first = "boundBoxMin";
			second = "";
		},
		{
			first = "boundRadius";
			second = "";
		},
		{
			first = "boundScale";
			second = "";
		},
		{
			first = "boundingRect";
			second = "";
		},
		{
			first = "buildingStatus";
			second = "";
		},
		{
			first = "cellIndex";
			second = "";
		},
		{
			first = "chainIndex";
			second = "";
		},
		{
			first = "childOffset";
			second = "";
		},
		{
			first = "collisionGroup";
			second = "";
		},
		{
			first = "color";
			second = "";
		},
		{
			first = "colorIndex";
			second = "";
		},
		{
			first = "colour";
			second = "";
		},
		{
			first = "comboList_";
			second = "";
		},
		{
			first = "compAndUserID";
			second = "";
		},
		{
			first = "condition";
			second = "";
		},
		{
			first = "copy";
			second = "";
		},
		{
			first = "currentTrans";
			second = "";
		},
		{
			first = "damage";
			second = "";
		},
		{
			first = "data";
			second = "";
		},
		{
			first = "deadQuant_";
			second = "";
		},
		{
			first = "delayTimer";
			second = "";
		},
		{
			first = "delayTimer_";
			second = "";
		},
		{
			first = "diggingMode";
			second = "";
		},
		{
			first = "distance";
			second = "";
		},
		{
			first = "dlgBarState";
			second = "";
		},
		{
			first = "dock";
			second = "";
		},
		{
			first = "dockingController";
			second = "";
		},
		{
			first = "durationTimer";
			second = "";
		},
		{
			first = "durationTimer_";
			second = "";
		},
		{
			first = "editType";
			second = "";
		},
		{
			first = "enableFallingLeaves";
			second = "";
		},
		{
			first = "enemyWorld (Оъекты, принадлежащие миру, будут атаковаться. Скверна.)";
			second = "enemyWorld (Objects that belong to the world, will be attacked. Scourge.)";
		},
		{
			first = "eventContextUnit";
			second = "";
		},
		{
			first = "excludeCollision";
			second = "";
		},
		{
			first = "file name";
			second = "";
		},
		{
			first = "filter";
			second = "";
		},
		{
			first = "filter_";
			second = "";
		},
		{
			first = "flag_playerGameReady";
			second = "";
		},
		{
			first = "flag_playerStartReady";
			second = "";
		},
		{
			first = "flyingByImpulse";
			second = "";
		},
		{
			first = "flyingMode";
			second = "";
		},
		{
			first = "forwardVelocity";
			second = "";
		},
		{
			first = "freeSourceBubbleTexture";
			second = "";
		},
		{
			first = "fullKey";
			second = "";
		},
		{
			first = "fullName";
			second = "";
		},
		{
			first = "gamePaused";
			second = "";
		},
		{
			first = "gameSpeed";
			second = "";
		},
		{
			first = "gameVersion";
			second = "";
		},
		{
			first = "generationTime";
			second = "";
		},
		{
			first = "globalTime";
			second = "";
		},
		{
			first = "glowSprite";
			second = "";
		},
		{
			first = "group";
			second = "";
		},
		{
			first = "handicap";
			second = "";
		},
		{
			first = "iconDistanceFactor";
			second = "";
		},
		{
			first = "id";
			second = "";
		},
		{
			first = "inSquad";
			second = "";
		},
		{
			first = "increase_";
			second = "";
		},
		{
			first = "index";
			second = "";
		},
		{
			first = "initialDir";
			second = "";
		},
		{
			first = "initialDir_";
			second = "";
		},
		{
			first = "internal";
			second = "";
		},
		{
			first = "internalColor";
			second = "";
		},
		{
			first = "internalColor_";
			second = "";
		},
		{
			first = "interruptable";
			second = "";
		},
		{
			first = "inventory";
			second = "";
		},
		{
			first = "inventoryIndex";
			second = "";
		},
		{
			first = "invert";
			second = "";
		},
		{
			first = "isActive";
			second = "";
		},
		{
			first = "items";
			second = "";
		},
		{
			first = "killTimer_";
			second = "";
		},
		{
			first = "lastToolzerForm";
			second = "";
		},
		{
			first = "lastToolzerRadius";
			second = "";
		},
		{
			first = "lastTransp";
			second = "";
		},
		{
			first = "last_dirs_";
			second = "";
		},
		{
			first = "left";
			second = "";
		},
		{
			first = "length";
			second = "";
		},
		{
			first = "libraryKey";
			second = "";
		},
		{
			first = "listWaves_";
			second = "";
		},
		{
			first = "missionNumber";
			second = "";
		},
		{
			first = "model name";
			second = "";
		},
		{
			first = "name";
			second = "";
		},
		{
			first = "nameAlt";
			second = "";
		},
		{
			first = "nodeEffectIndex";
			second = "";
		},
		{
			first = "nodeEffectIndexGraphic";
			second = "";
		},
		{
			first = "onlyInitialDir_";
			second = "";
		},
		{
			first = "options_";
			second = "";
		},
		{
			first = "originalSaveName";
			second = "";
		},
		{
			first = "owner";
			second = "";
		},
		{
			first = "parameters";
			second = "";
		},
		{
			first = "parentOffset";
			second = "";
		},
		{
			first = "pauseTimer_";
			second = "";
		},
		{
			first = "period";
			second = "";
		},
		{
			first = "playerAmountScenarioMax";
			second = "";
		},
		{
			first = "playerID";
			second = "";
		},
		{
			first = "playersAmountMax";
			second = "";
		},
		{
			first = "playersData_";
			second = "";
		},
		{
			first = "points";
			second = "";
		},
		{
			first = "pose";
			second = "";
		},
		{
			first = "position";
			second = "";
		},
		{
			first = "producedQueue";
			second = "";
		},
		{
			first = "producedThisFactories";
			second = "";
		},
		{
			first = "psi";
			second = "";
		},
		{
			first = "radius";
			second = "";
		},
		{
			first = "realPlayerType";
			second = "";
		},
		{
			first = "ref";
			second = "";
		},
		{
			first = "ref2";
			second = "";
		},
		{
			first = "resourcePickingTime";
			second = "";
		},
		{
			first = "right";
			second = "";
		},
		{
			first = "rigidBodyPrm";
			second = "";
		},
		{
			first = "saveAsCommonObject (Записывать объект (нельзя ставить для объектов, которые уже пишутся в составе общей иерархии)";
			second = "saveAsCommonObject (Save Object (unavailable for objects already included in the general hierarchy))";
		},
		{
			first = "selectRadius";
			second = "";
		},
		{
			first = "showSources";
			second = "";
		},
		{
			first = "showSrc";
			second = "";
		},
		{
			first = "showTimer_";
			second = "";
		},
		{
			first = "shuffleIndex";
			second = "";
		},
		{
			first = "sizeMax";
			second = "";
		},
		{
			first = "sizeMin";
			second = "";
		},
		{
			first = "sizeX";
			second = "";
		},
		{
			first = "sizeY";
			second = "";
		},
		{
			first = "soundAttributes";
			second = "";
		},
		{
			first = "sources_";
			second = "";
		},
		{
			first = "speedWave";
			second = "";
		},
		{
			first = "spline";
			second = "";
		},
		{
			first = "squad";
			second = "";
		},
		{
			first = "startLocations_";
			second = "";
		},
		{
			first = "supportedByLogic";
			second = "";
		},
		{
			first = "takenItem";
			second = "";
		},
		{
			first = "takenItemPosition";
			second = "";
		},
		{
			first = "textureName";
			second = "";
		},
		{
			first = "theta";
			second = "";
		},
		{
			first = "tileIndex";
			second = "";
		},
		{
			first = "time";
			second = "";
		},
		{
			first = "timer";
			second = "";
		},
		{
			first = "title";
			second = "";
		},
		{
			first = "title_";
			second = "";
		},
		{
			first = "top";
			second = "";
		},
		{
			first = "transport";
			second = "";
		},
		{
			first = "transportSlot";
			second = "";
		},
		{
			first = "treeMode";
			second = "";
		},
		{
			first = "trigger";
			second = "";
		},
		{
			first = "triggerName";
			second = "";
		},
		{
			first = "type";
			second = "";
		},
		{
			first = "unVisibleTimer";
			second = "";
		},
		{
			first = "unitClass";
			second = "";
		},
		{
			first = "unitID";
			second = "";
		},
		{
			first = "useArithmetics";
			second = "";
		},
		{
			first = "useMapSettings";
			second = "";
		},
		{
			first = "userSave";
			second = "";
		},
		{
			first = "velocity_";
			second = "";
		},
		{
			first = "version";
			second = "";
		},
		{
			first = "visibilityChangePhase";
			second = "";
		},
		{
			first = "visibilityGroup";
			second = "";
		},
		{
			first = "visibleTimer";
			second = "";
		},
		{
			first = "voiceDuration";
			second = "";
		},
		{
			first = "wayPoints";
			second = "";
		},
		{
			first = "worldName";
			second = "";
		},
		{
			first = "x";
			second = "";
		},
		{
			first = "x›<y•";
			second = "";
		},
		{
			first = "x›<y• [Survivors(S)]";
			second = "";
		},
		{
			first = "y";
			second = "";
		},
		{
			first = "АИ - атаковать всеми сквадами";
			second = "AI - attack with all squads";
		},
		{
			first = "АИ - атаковать всеми сквадами(контекстн.)";
			second = "AI - attack with all aquads (context)";
		},
		{
			first = "АИ - послать контекстную команду";
			second = "AI - send contextual command";
		},
		{
			first = "АИ - строить здание";
			second = "AI - construct building";
		},
		{
			first = "АИ ли Игрок";
			second = "AI or Player";
		},
		{
			first = "АИ\\Арифметика параметров";
			second = "AI\\parameter arithmetics";
		},
		{
			first = "АИ\\Заказать здание";
			second = "AI\\Order building";
		},
		{
			first = "АИ\\Заказать юнитов на заводе";
			second = "AI\\Order units at a fectory";
		},
		{
			first = "АИ\\Производство параметров";
			second = "AI\\Parameter production";
		},
		{
			first = "Абсолютно";
			second = "Absolute";
		},
		{
			first = "Автоактивация";
			second = "Autoactivation";
		},
		{
			first = "Автоматически присоединять юнитов";
			second = "Automatically add units";
		},
		{
			first = "Автоматически производимые юниты";
			second = "Automaticly manufactored units";
		},
		{
			first = "Автоматическое производство юнитов";
			second = "Automatical unit production";
		},
		{
			first = "Автоматическое производство юнитов (количество запусков нулевого производства)";
			second = "Automatic unit production (number of zero-production launches)";
		},
		{
			first = "Автоудаление";
			second = "Autoremoving";
		},
		{
			first = "Автоудаление(не по таймеру)";
			second = "Auto-deletion (not using timer)";
		},
		{
			first = "Агрессивный (оффенсив)";
			second = "Aggressive (offensive)";
		},
		{
			first = "Адитивный блендинг";
			second = "Additional blending";
		},
		{
			first = "Активировать источники";
			second = "Activate origins";
		},
		{
			first = "Активировать объект по метке";
			second = "Activate object on label";
		},
		{
			first = "Активироваться при враге в зоне";
			second = "Activate when enemy enters the area";
		},
		{
			first = "Активироваться при попадании ракеты";
			second = "Activate on missile impact";
		},
		{
			first = "Активироваться при цели в зоне";
			second = "Activate when target enters area";
		},
		{
			first = "Активироваться только детонатором";
			second = "Activate via detonator only";
		},
		{
			first = "Активный";
			second = "Active";
		},
		{
			first = "Активный игрок";
			second = "Active Player";
		},
		{
			first = "Альфа";
			second = "Alpha";
		},
		{
			first = "Альфа портал";
			second = "Alpha portal";
		},
		{
			first = "Амплитуда";
			second = "Amplitude";
		},
		{
			first = "Амплитуда волны";
			second = "Wave amplitude";
		},
		{
			first = "Анализировать изменения поверхности под зданием и наклоняться";
			second = "Analize lanscape changes under the building and bend";
		},
		{
			first = "Анализировать изменения поверхности под зданием каждый квант";
			second = "Analize ground changes under the building every quant";
		},
		{
			first = "Анализировать поверхность каждый квант";
			second = "Analize the surface every quant";
		},
		{
			first = "Англоязычная версия";
			second = "English version";
		},
		{
			first = "Анимационная цепочка";
			second = "Animation chain";
		},
		{
			first = "Анимационная цепочка горения";
			second = "Burning animation chain";
		},
		{
			first = "Анимация";
			second = "Animation";
		},
		{
			first = "Анимация для ТВ";
			second = "CS animation";
		},
		{
			first = "Анимация камеры";
			second = "Camera animation";
		},
		{
			first = "Анимация паузы";
			second = "Pause animation";
		},
		{
			first = "Антигравитационная лаборатория";
			second = "Antigravity Laboratory";
		},
		{
			first = "Апгрейд";
			second = "Upgrade";
		},
		{
			first = "Апгрейд завершен";
			second = "Upgrade complete";
		},
		{
			first = "Апгрейд из здания";
			second = "Upgrade from a building";
		},
		{
			first = "Апгрейд из юнита";
			second = "Upgrade from a unit";
		},
		{
			first = "Апгрейд юнитов определенного типа(контекстн.)";
			second = "Upgrade units of the defined type (context)";
		},
		{
			first = "Апгрейд1";
			second = "Upgrade1";
		},
		{
			first = "Апгрейд2";
			second = "Upgrade2";
		},
		{
			first = "Апгрейдится";
			second = "Upgrading";
		},
		{
			first = "Апгрейдится в данный момент";
			second = "Is Being Upgraded Now";
		},
		{
			first = "Апгрейдить в достроенное здание";
			second = "Upgrade into a finished building";
		},
		{
			first = "Апгрейды";
			second = "Upgrades";
		},
		{
			first = "Арифметика";
			second = "Arithmetics";
		},
		{
			first = "Арифметика для максимальных параметров";
			second = "Arithmetic for maximum parameters";
		},
		{
			first = "Арифметика для параметров";
			second = "Arithmetic for parameters";
		},
		{
			first = "Арифметика за гибель";
			second = "Death Arithmetics";
		},
		{
			first = "Арифметика параметров";
			second = "Parameter arithmetic";
		},
		{
			first = "Арифметика, срабатывающая по достижении уровня";
			second = "Level-up arithmetics";
		},
		{
			first = "Арифметика, срабатывающая после достижения уровня";
			second = "Level-up Arithmetics";
		},
		{
			first = "Арифметики за гибель";
			second = "Death arithmetics";
		},
		{
			first = "Атаковать";
			second = "Attack";
		},
		{
			first = "Атаковать всех";
			second = "Attack everything";
		},
		{
			first = "Атаковать любым оружием";
			second = "Attack with any weapon";
		},
		{
			first = "Атаковать на указанном радиусе";
			second = "Attack from defined distance";
		},
		{
			first = "Атаковать на ходу";
			second = "Nonstop attack";
		},
		{
			first = "Атаковать поверхность";
			second = "Attack the ground";
		},
		{
			first = "Атаковать поверхность рядом с юнитом врага";
			second = "Attack landscape near enemy unit";
		},
		{
			first = "Атаковать своих поврежденных юнитов";
			second = "Attack own damaged units";
		},
		{
			first = "Атаковать сквадами определенного типа";
			second = "Attack with squads of the defined type";
		},
		{
			first = "Атаковать специальным оружием(контекстн.)";
			second = "Attack with the defined weapon (context)";
		},
		{
			first = "Атаковать только вражеских юнитов";
			second = "Attack enemy units only";
		},
		{
			first = "Атаковать только здания";
			second = "Attack buildings only";
		},
		{
			first = "Атаковать только оружием ближнего боя";
			second = "Attack with melee weapon only";
		},
		{
			first = "Атаковать только оружием дальнего боя";
			second = "Attack with ranged weapon only";
		},
		{
			first = "Атаковать только юнитов";
			second = "Attack units only";
		},
		{
			first = "Атаковать юнитов врага(с учетом здоровья)";
			second = "Attack enemy units (considering health level)";
		},
		{
			first = "Атакуемые классы юнитов";
			second = "Attackable unit classes";
		},
		{
			first = "Атакует";
			second = "Attacking";
		},
		{
			first = "Атакущий сквад";
			second = "Attacking squad";
		},
		{
			first = "Атакующий объект";
			second = "Attacking object";
		},
		{
			first = "Базовые";
			second = "Basic";
		},
		{
			first = "Базовые свойства";
			second = "Basic properties";
		},
		{
			first = "Базовый";
			second = "Basic";
		},
		{
			first = "Базовый офицер";
			second = "Basic officer";
		},
		{
			first = "Базовый солдат";
			second = "Basic soldier";
		},
		{
			first = "Базовый техник";
			second = "Basic technician";
		},
		{
			first = "Баллистическая ракета";
			second = "Ballistic missile";
		},
		{
			first = "Бамп";
			second = "Bump";
		},
		{
			first = "Бежать";
			second = "Run";
		},
		{
			first = "Бежать (юниты - по параметру)";
			second = "Run (units - according to parameter)";
		},
		{
			first = "Бежать влево (Прямое управление)";
			second = "Run to the left (direct control)";
		},
		{
			first = "Бежать вправо (Прямое управление)";
			second = "Run to the right (direct control)";
		},
		{
			first = "Бежать назад (Прямое управление)";
			second = "Run back (direct control)";
		},
		{
			first = "Бездействие";
			second = "Idle";
		},
		{
			first = "Берётся в инвентарь";
			second = "Can be included in the inventory";
		},
		{
			first = "Библиотека";
			second = "Library";
		},
		{
			first = "Ближайший апгрейд";
			second = "Closest upgraid";
		},
		{
			first = "Ближний бой";
			second = "Close combat";
		},
		{
			first = "Ближняя граница";
			second = "Close border";
		},
		{
			first = "Ближняя граница камеры";
			second = "Close camera border";
		},
		{
			first = "Ближняя граница тумана";
			second = "Closest fog border";
		},
		{
			first = "Ближняя дистанция";
			second = "Close distance";
		},
		{
			first = "Блик камеры";
			second = "Camera highlight";
		},
		{
			first = "Блок";
			second = "Block";
		},
		{
			first = "Блоки";
			second = "Blocks";
		},
		{
			first = "Боковой ветер";
			second = "Side wind";
		},
		{
			first = "Больше";
			second = "More";
		},
		{
			first = "Больше либо равно";
			second = "Equal or more";
		},
		{
			first = "Большие декорации";
			second = "Large decorations";
		},
		{
			first = "Большое здание";
			second = "Large Building";
		},
		{
			first = "Бомба";
			second = "Bomb";
		},
		{
			first = "Бомбер";
			second = "Bomber";
		},
		{
			first = "Бомбовая лаборатория";
			second = "Bomb laboratory";
		},
		{
			first = "Бригадир";
			second = "Brigadier";
		},
		{
			first = "Броня";
			second = "Armour";
		},
		{
			first = "В любой обстановке";
			second = "Anywhere";
		},
		{
			first = "В сквадах определенного типа всего юнитов в количестве";
			second = "UNit cap in squads of the defined type";
		},
		{
			first = "В центр зоны";
			second = "To the center of area";
		},
		{
			first = "ВОДА: Высота воды";
			second = "WATER: water level";
		},
		{
			first = "ВОДА: Глубина глубокой воды";
			second = "WATER: depth of the deep water";
		},
		{
			first = "ВОДА: Параметр высыхания";
			second = "WATER: drying up parameter";
		},
		{
			first = "ВОДА: Проздрачность на средней глубине";
			second = "WATER: Transparecy on average depth";
		},
		{
			first = "ВОДА: Прозрачность глубокой воды";
			second = "WATER: transparency of the deep water";
		},
		{
			first = "ВОДА: Прозрачность на максимальной глубине";
			second = "WATER: Transparecy on maximum depth";
		},
		{
			first = "ВОДА: Прозрачность на нулевой глубине";
			second = "WATER: Transparecy on zero depth";
		},
		{
			first = "ВОДА: Прозрачность неглубокой воды";
			second = "WATER: transparency of the shallow water";
		},
		{
			first = "ВОДА: Скорость течения";
			second = "WATER: speed of flow";
		},
		{
			first = "ВОДА: Средняя глубина воды";
			second = "WATER: average water depth";
		},
		{
			first = "ВОДА: Средняя прозрачность воды";
			second = "WATER: average water transparency";
		},
		{
			first = "ВОДА: Цвет 1";
			second = "WATER: Color 1";
		},
		{
			first = "ВОДА: Цвет 2";
			second = "WATER: Color 2";
		},
		{
			first = "Варгон";
			second = "Wargon tank";
		},
		{
			first = "Ведомый сквад";
			second = "Driven Squad";
		},
		{
			first = "Ведущий сквад";
			second = "Leading squad";
		},
		{
			first = "Вертикальный импульс";
			second = "Vertical impulse";
		},
		{
			first = "Ветвистось";
			second = "Tree-structure";
		},
		{
			first = "Ветер";
			second = "Wind";
		},
		{
			first = "Ветер направлен к центру мира";
			second = "Wind is directed towards the center of the map";
		},
		{
			first = "Ветер направлен от центра мира";
			second = "Wind is directed from the center of the map";
		},
		{
			first = "Ветер направлен через весь мир";
			second = "Wind is directed across the whole map";
		},
		{
			first = "Взаимодействие";
			second = "Interaction";
		},
		{
			first = "Взаимодействие со средой";
			second = "Interaction with environment";
		},
		{
			first = "Взрывная волна";
			second = "Shockwave";
		},
		{
			first = "Виден в видимой зоне";
			second = "Is  visible in a visible area";
		},
		{
			first = "Виден как в последний раз";
			second = "Keep the latest visibility settings";
		},
		{
			first = "Видима";
			second = "Visible";
		},
		{
			first = "Видимость для врагов";
			second = "Visibility for enemies";
		},
		{
			first = "Видимость для своих";
			second = "Visibility for allies";
		},
		{
			first = "Видимый";
			second = "Visible";
		},
		{
			first = "Визуализация апгрейда оружия";
			second = "Weapon Upgrade Visualization";
		},
		{
			first = "Визуализация изменения";
			second = "Visualization of Changes";
		},
		{
			first = "Визуализация изменения общих параметров";
			second = "Visualization of General Parameter's Changes";
		},
		{
			first = "Визуализация максимального радиуса объеденения сквадов";
			second = "Visualization for maximum squad banding radius";
		},
		{
			first = "Визуализация отдачи приказов";
			second = "Visualisation of given orders";
		},
		{
			first = "Визуализация событий и юнитов на миникарте";
			second = "Visualization of events and unit on minimap";
		},
		{
			first = "Визуализация транспортных слотов";
			second = "Visualization of transport slots";
		},
		{
			first = "Вкл.";
			second = "On";
		},
		{
			first = "Вкл./выкл. анимацию объекта";
			second = "Enable/disable object animation";
		},
		{
			first = "Вкл/Выкл звуковые эффекты";
			second = "Sound effects on/off";
		},
		{
			first = "Вкл/Выкл музыку";
			second = "Music on/off";
		},
		{
			first = "Включен в интерфейсе";
			second = "Is Included into Interface";
		},
		{
			first = "Включено";
			second = "Enabled";
		},
		{
			first = "Включить";
			second = "Enable";
		},
		{
			first = "Включить АИ триггера для текущего игрока";
			second = "Enable trigger AI for the current player";
		},
		{
			first = "Включить автоматическую генерацию зон непроходимости";
			second = "Enable automatic generation of solid areas";
		},
		{
			first = "Включить анимацию головы";
			second = "Enable head animation";
		},
		{
			first = "Включить анимацию объекта";
			second = "Enable object animation";
		},
		{
			first = "Включить воду";
			second = "Enable water";
		},
		{
			first = "Включить замерзание жидкости";
			second = "Enable liquids freezing";
		},
		{
			first = "Включить звуки";
			second = "Enable sounds";
		},
		{
			first = "Включить интерфейс";
			second = "Enable Interface";
		},
		{
			first = "Включить лаву";
			second = "Enable lava";
		},
		{
			first = "Включить музыкальный трек";
			second = "Enable music track";
		},
		{
			first = "Включить музыку";
			second = "Enable music";
		},
		{
			first = "Включить объезд юнитами";
			second = "Enable detour for units";
		},
		{
			first = "Включить объезд юнитов";
			second = "Enable units detour";
		},
		{
			first = "Включить падающие листья";
			second = "Enable falling leaves";
		},
		{
			first = "Включить поддержку силуэтов";
			second = "Enable silhouette support";
		},
		{
			first = "Включить прозрачность объектов";
			second = "Enable object transparency";
		},
		{
			first = "Включить прозрачьность объектов";
			second = "Enable object transparency";
		},
		{
			first = "Включить прямое управление";
			second = "Enable Direct Control";
		},
		{
			first = "Включить режим атаки юнита";
			second = "Enable unit attack mode";
		},
		{
			first = "Включить режим установки здания";
			second = "Enable building construction mode";
		},
		{
			first = "Включить тени";
			second = "Enable Shadows";
		},
		{
			first = "Включить туман";
			second = "Enable fog";
		},
		{
			first = "Включить туман войны";
			second = "Enable fog of war";
		},
		{
			first = "Включить экран интерфейса";
			second = "Enable interface screen";
		},
		{
			first = "Включить эффект";
			second = "Enable effect";
		},
		{
			first = "Включить/Выключить триггера";
			second = "Enale/disable triggers";
		},
		{
			first = "Включить/выключить интерфейс";
			second = "Enable/disable interface";
		},
		{
			first = "Включить/выключить эффект";
			second = "Enale/disable effect";
		},
		{
			first = "Владелец";
			second = "Owner";
		},
		{
			first = "Владелец объекта";
			second = "Object owner";
		},
		{
			first = "Владение";
			second = "Ownership";
		},
		{
			first = "Влево";
			second = "To the left";
		},
		{
			first = "Влияние на оружие";
			second = "Weapon influence";
		},
		{
			first = "Влияние уровня сложности";
			second = "Difficulty level effect";
		},
		{
			first = "Влючить замедление/ускорение на горах";
			second = "Enable deceleration/acceleration on the mountains";
		},
		{
			first = "Влючить объезд зон непроходимости";
			second = "Enable non-movement zones detour";
		},
		{
			first = "Влючить поиск пути";
			second = "Enable path finding";
		},
		{
			first = "Внешняя среда";
			second = "Environment";
		},
		{
			first = "Вновь создаваемые";
			second = "New-built";
		},
		{
			first = "Вновь создаваемые даннога типа";
			second = "Re-created of this type";
		},
		{
			first = "Внутреннее имя, обязательно латинскими буквами";
			second = "Internal name, Latin required";
		},
		{
			first = "Во все стороны";
			second = "In all directions";
		},
		{
			first = "Во всех сквадах всего юнитов в количестве";
			second = "Unit cap in all squads";
		},
		{
			first = "Вода";
			second = "Water";
		},
		{
			first = "Вода относительная";
			second = "Relative water";
		},
		{
			first = "Военное здание";
			second = "Military building";
		},
		{
			first = "Военные здания";
			second = "Military buildings";
		},
		{
			first = "Возвращаемое от недостроенного здания";
			second = "Refund from unfinished building";
		},
		{
			first = "Возвращаемое после деинсталляции";
			second = "Retrieved after deinstallation";
		},
		{
			first = "Возвращаться на базу";
			second = "Return to base";
		},
		{
			first = "Воздействовать на летные юниты";
			second = "Affect air units";
		},
		{
			first = "Воздушные";
			second = "Air";
		},
		{
			first = "Воздушные тяжелые";
			second = "Heavy Air";
		},
		{
			first = "Воздушный";
			second = "Air";
		},
		{
			first = "Воздушный средний";
			second = "Medium air";
		},
		{
			first = "Воздушный тяжелый";
			second = "Air heavy";
		},
		{
			first = "Возле объекта по метке находится объект указанного типа";
			second = "Next to the object on the label is an object of the defined type";
		},
		{
			first = "Возможность пропуска ролика";
			second = "Skip video";
		},
		{
			first = "Волны";
			second = "Waves";
		},
		{
			first = "Восстановление (в секунду)";
			second = "Regeneration (per seconds)";
		},
		{
			first = "Восстановление брони";
			second = "Armour Restoration";
		},
		{
			first = "Восстановление владения";
			second = "Ownership Restoration";
		},
		{
			first = "Восстановление владения после захвата";
			second = "Ownership Restoration after Capture";
		},
		{
			first = "Восстановление вычисленное (в секунду)";
			second = "Calculated regeneration (per second)";
		},
		{
			first = "Восстановление захвата здания";
			second = "Restore building capture";
		},
		{
			first = "Восстановление здоровья";
			second = "Health Restoration";
		},
		{
			first = "Воюющая сторона";
			second = "Fighting side";
		},
		{
			first = "Вперед";
			second = "Forward";
		},
		{
			first = "Вправо";
			second = "To the right";
		},
		{
			first = "Враг";
			second = "Enemy";
		},
		{
			first = "Враг атакует юнитами";
			second = "Enemy is attacking with units";
		},
		{
			first = "Вращающий импульс (для камней)";
			second = "Rotating impuls (for boulders)";
		},
		{
			first = "Вращающий импульс (не действует на людей)";
			second = "Revolving Impulse (Does not Affect People)";
		},
		{
			first = "Времена цепочек анимаций";
			second = "Animation cycles times";
		},
		{
			first = "Время";
			second = "Time";
		},
		{
			first = "Время апгрейда";
			second = "Upgrade time";
		},
		{
			first = "Время атаки";
			second = "Attack time";
		},
		{
			first = "Время атаки, секунды";
			second = "Attack period, seconds";
		},
		{
			first = "Время видимости при выстреле";
			second = "Visibility time on shot";
		},
		{
			first = "Время жизни";
			second = "Lifetime";
		},
		{
			first = "Время жизни осколков";
			second = "Debris lifetime";
		},
		{
			first = "Время жизни, секунды";
			second = "Lifetime, seconds";
		},
		{
			first = "Время затихания звука (сек.)";
			second = "Fade out period (sec.)";
		},
		{
			first = "Время затихания звука(сек.)";
			second = "Sound fading period (sec.)";
		},
		{
			first = "Время затухания после обнаружения";
			second = "Fading period after disclosure";
		},
		{
			first = "Время захвата (0 - захват навсегда), секунды";
			second = "Capture time (0 - complete capture), seconds";
		},
		{
			first = "Время звука, секунды";
			second = "Sound time, seconds";
		},
		{
			first = "Время кругов";
			second = "Circles time";
		},
		{
			first = "Время между контрольными точками сплайна, секунды";
			second = "Time between spline control points, seconds";
		},
		{
			first = "Время остановки при патрулировании, сек";
			second = "Pause length in patrol mode";
		},
		{
			first = "Время паузы между сообщениями (сек.)";
			second = "Pause between messages (sec.)";
		},
		{
			first = "Время пены";
			second = "Foam time";
		},
		{
			first = "Время перезарядки";
			second = "Recharging Period";
		},
		{
			first = "Время перехода";
			second = "Passage time";
		},
		{
			first = "Время перехода, секунды";
			second = "Crossover time, seconds";
		},
		{
			first = "Время поворота";
			second = "Turning time";
		},
		{
			first = "Время показа параметра (мс) (работает при увеличении или уменьшении)";
			second = "Display parameter time (milliseconds) (works on increase/discrease)";
		},
		{
			first = "Время показа, сек";
			second = "Display Period, sec";
		},
		{
			first = "Время показа, секунды";
			second = "Time of display, seconds";
		},
		{
			first = "Время производства, секунды";
			second = "Production time, seconds";
		},
		{
			first = "Время работы";
			second = "Working time";
		},
		{
			first = "Время расширения (кванты)";
			second = "Amplification period (quants)";
		},
		{
			first = "Время сбора ресурса";
			second = "Resource Gathering Period";
		},
		{
			first = "Время сборки ресурса";
			second = "resource gathering time";
		},
		{
			first = "Время смены режима";
			second = "Period of mode changing";
		},
		{
			first = "Время стрельбы";
			second = "Shooting Period";
		},
		{
			first = "Время суток";
			second = "Day or night time";
		},
		{
			first = "Время телепортации, секунды";
			second = "Teleportation Period, sec";
		},
		{
			first = "Время тряски камеры";
			second = "Period of camera shaking";
		},
		{
			first = "Время удержания события, секунды";
			second = "Event hold time, seconds";
		},
		{
			first = "Время цикла";
			second = "Cycle time";
		},
		{
			first = "Время, которое деревья лежат после падения";
			second = "Period when trees stay on the ground after falling";
		},
		{
			first = "Время, секунды";
			second = "Time, seconds";
		},
		{
			first = "Все";
			second = "All";
		},
		{
			first = "Все всех типов";
			second = "All of any types";
		},
		{
			first = "Все данного типа";
			second = "All of this type";
		},
		{
			first = "Все оружие ближнего боя";
			second = "All mellee weaponry";
		},
		{
			first = "Все оружие дальнего боя";
			second = "All ranged weaponry";
		},
		{
			first = "Все типы поверхности";
			second = "All surface types";
		},
		{
			first = "Все юниты взявшего типа";
			second = "All units of this type";
		},
		{
			first = "Все ядра";
			second = "All Cores";
		},
		{
			first = "Всегда видим";
			second = "Visible anytime";
		},
		{
			first = "Всегда включенный";
			second = "Always enabled";
		},
		{
			first = "Вспышка экрана";
			second = "Screen flash";
		},
		{
			first = "Вставать";
			second = "Get up";
		},
		{
			first = "Вставить";
			second = "Insert";
		},
		{
			first = "Входит в базу";
			second = "Entering base";
		},
		{
			first = "Выбор мира для загрузки";
			second = "Selecting word to load";
		},
		{
			first = "Выбранные типы оружия";
			second = "Chosen weapon types";
		},
		{
			first = "Выбранные типы юнитов";
			second = "Chosen unit types";
		},
		{
			first = "Выброс из центра";
			second = "Emission out of the center";
		},
		{
			first = "Вывод эффекта на поверхности воды";
			second = "Effect display on the water surface";
		},
		{
			first = "Выводимые параметры";
			second = "Shown parameters";
		},
		{
			first = "Выводить пену";
			second = "Show foam";
		},
		{
			first = "Выводить силуэт";
			second = "Display Silhouette";
		},
		{
			first = "Выводить сообщение";
			second = "Show message";
		},
		{
			first = "Выгнать юнита из транспорта";
			second = "Drive unit out of transport";
		},
		{
			first = "Выгнать юнитов из транспорта";
			second = "Drive units out of transport";
		},
		{
			first = "Выделенеие";
			second = "Selection";
		},
		{
			first = "Выделить";
			second = "Highlight";
		},
		{
			first = "Выделить всех";
			second = "Highlight all";
		},
		{
			first = "Выключать музыку";
			second = "Disable music";
		},
		{
			first = "Выключить";
			second = "Disable";
		},
		{
			first = "Выключить АИ триггера для всех игроков";
			second = "Disable AI triggers for all players";
		},
		{
			first = "Выключить АИ триггера для текущего игрока";
			second = "Disable AI triggers for the current player";
		},
		{
			first = "Выключить для текущего игрока все триггера";
			second = "Disable all triggers for the current player";
		},
		{
			first = "Выключить стрельбу";
			second = "Disable firing";
		},
		{
			first = "Выключить экран интерфейса";
			second = "Disable interface screen";
		},
		{
			first = "Выполнен";
			second = "Accomplished";
		},
		{
			first = "Выполнена";
			second = "Accomplished";
		},
		{
			first = "Выполняется";
			second = "Executing";
		},
		{
			first = "Выполняется всегда";
			second = "Is always implemented";
		},
		{
			first = "Вырабатываемый ресурс";
			second = "Extracted resource";
		},
		{
			first = "Выравнивание";
			second = "Levelling";
		},
		{
			first = "Выравнивание текста";
			second = "Text Alignment";
		},
		{
			first = "Выравниватель";
			second = "Level";
		},
		{
			first = "Высота";
			second = "Height";
		},
		{
			first = "Высота воды";
			second = "Water level";
		},
		{
			first = "Высота для летающих юнитов";
			second = "Height for Flying Units";
		},
		{
			first = "Высота зеропласта";
			second = "Zero-layer level";
		},
		{
			first = "Высота модели (по баунду)";
			second = "Model height (on bound)";
		},
		{
			first = "Высота над водой";
			second = "Height over the water";
		},
		{
			first = "Высота над землей";
			second = "Height over the ground";
		},
		{
			first = "Высота перехода к туману (0..2000)";
			second = "Height of transition to fog (0..2000)";
		},
		{
			first = "Высота полета";
			second = "Flying height";
		},
		{
			first = "Высота спецэффекта над землей";
			second = "Special effect height over the ground";
		},
		{
			first = "Высота/глубина";
			second = "Height/depth";
		},
		{
			first = "Выставлять юнитам минимальную скорость";
			second = "Define minimal velocity for units";
		},
		{
			first = "Выстрелить";
			second = "Fire";
		},
		{
			first = "Выход из игры";
			second = "Exit the game";
		},
		{
			first = "Выход из миссии";
			second = "Exit the mission";
		},
		{
			first = "Вычисленное значение";
			second = "Calculated value";
		},
		{
			first = "Гандикап";
			second = "Handicap";
		},
		{
			first = "Гаубица";
			second = "Howitzer gun";
		},
		{
			first = "Генератор невидимости";
			second = "Invisibility generator";
		},
		{
			first = "Генератор скверны";
			second = "Scourge generator";
		},
		{
			first = "Герой (для центра строительства)";
			second = "hero (for ceneter construction)";
		},
		{
			first = "Гибель";
			second = "Death";
		},
		{
			first = "Гироид";
			second = "Gyroid";
		},
		{
			first = "Главное строение";
			second = "Main Building";
		},
		{
			first = "Глобальная переменная (сохраняется между миссиями, но не записывается)";
			second = "Global Variable (is Preserved during Missions but will not be Saved)";
		},
		{
			first = "Глобальные действия\\Активировать источники";
			second = "Global actions\\Activate sources";
		},
		{
			first = "Глобальные действия\\Активировать пометку на миникарте";
			second = "Global actions\\Activate mark on minimap";
		},
		{
			first = "Глобальные действия\\Включить/Выключить триггера";
			second = "Global actions\\Enable/disable triggers";
		},
		{
			first = "Глобальные действия\\Включить/выключить эффект";
			second = "Global actions\\Enable/disable effect";
		},
		{
			first = "Глобальные действия\\Выход из игры";
			second = "Global actions\\Exit the game";
		},
		{
			first = "Глобальные действия\\Выход из миссии";
			second = "Global actions\\Exit the mission";
		},
		{
			first = "Глобальные действия\\Деактивировать источники";
			second = "Global actions\\Deactivate sources";
		},
		{
			first = "Глобальные действия\\Деактивировать пометку на миникарте";
			second = "Global actions\\Deactivate mark on minimap";
		},
		{
			first = "Глобальные действия\\Задержка времени";
			second = "Global actions\\Time delay";
		},
		{
			first = "Глобальные действия\\Запустить миссию";
			second = "Global actions\\Start mission";
		},
		{
			first = "Глобальные действия\\Очистить текущую миссию";
			second = "Global actions\\Clear the current mission";
		},
		{
			first = "Глобальные действия\\Показать ролик";
			second = "Global actions\\Play video";
		},
		{
			first = "Глобальные действия\\Пустое действие";
			second = "Global actions\\Empty action";
		},
		{
			first = "Глобальные действия\\Сделать неактивными все стрелки триггера";
			second = "Global actions\\Make all trigger arrows inactive";
		},
		{
			first = "Глобальные действия\\Считать игрока проигравшим";
			second = "Global actions\\Regard player as defeated";
		},
		{
			first = "Глобальные действия\\Установить текущую миссию";
			second = "Global actions\\Set current mission";
		},
		{
			first = "Глобальные действия\\Установка целочисленной переменной";
			second = "Global actions\\Setting an integral variable";
		},
		{
			first = "Глобальные условия\\АИ ли Игрок";
			second = "Global conditions\\AI player";
		},
		{
			first = "Глобальные условия\\Игрок активный";
			second = "Global conditions\\Active player";
		},
		{
			first = "Глобальные условия\\Игрок выиграл";
			second = "Global conditions\\Victorious player";
		},
		{
			first = "Глобальные условия\\Осталось времени меньше, чем указано";
			second = "Global conditions\\Time left less then estimated time";
		},
		{
			first = "Глобальные условия\\Остался только мой клан";
			second = "Global conditions\\Only my clan left";
		},
		{
			first = "Глобальные условия\\Проверка внешней среды";
			second = "Global conditions\\Envinronment verification";
		},
		{
			first = "Глобальные условия\\Проверка расы";
			second = "Global conditions\\Race verification";
		},
		{
			first = "Глобальные условия\\Проверка целочисленной переменной";
			second = "Global conditions\\Integral variable verification";
		},
		{
			first = "Глобальные условия\\Реплей завершен";
			second = "Global conditions\\Replay complete";
		},
		{
			first = "Глобальные условия\\Уровень сложности";
			second = "Global conditions\\Difficulty level";
		},
		{
			first = "Глубина воды в месте установки";
			second = "Water depth at the placement spot";
		},
		{
			first = "Глубина для плавующих юнитов";
			second = "Depth for Swimming Units";
		},
		{
			first = "Головы";
			second = "Heads";
		},
		{
			first = "Голограмма здания";
			second = "Building hologramm";
		},
		{
			first = "Голосовое сообщение";
			second = "Speech message";
		},
		{
			first = "Горелый";
			second = "Burnt";
		},
		{
			first = "Горизонтальный импульс";
			second = "Horizontal impulse";
		},
		{
			first = "Горы";
			second = "Mountains";
		},
		{
			first = "Горячая клавиша";
			second = "Hot Key";
		},
		{
			first = "Графические параметры (устарело)";
			second = "Graphic settings (old)";
		},
		{
			first = "Грелка";
			second = "Warmer";
		},
		{
			first = "Груз погружен";
			second = "Cargo loaded";
		},
		{
			first = "Группы";
			second = "Groups";
		},
		{
			first = "Дальний бой";
			second = "Ranged combat";
		},
		{
			first = "Дальность стрельбы";
			second = "Shooting Range";
		},
		{
			first = "Дальняя граница";
			second = "Far border";
		},
		{
			first = "Дальняя граница камеры";
			second = "Far camera border";
		},
		{
			first = "Дальняя граница тумана";
			second = "Far fog border";
		},
		{
			first = "Дальняя дистанция";
			second = "Far distance";
		},
		{
			first = "Даунгрейды для сканирования, в _обратном_ порядке";
			second = "Downgrades for scanning, in _reverse_ order";
		},
		{
			first = "Двигается куда-то";
			second = "Moving somewhere";
		},
		{
			first = "Двигатся боком/задом при прямом управлении";
			second = "Move sideways/backwards via direct control";
		},
		{
			first = "Двигать камеру мышью";
			second = "Move camera via mouse";
		},
		{
			first = "Движение";
			second = "Movement";
		},
		{
			first = "Движение влево (Прямое управление)";
			second = "Move left (direct control)";
		},
		{
			first = "Движение вправо (Прямое управление)";
			second = "Move right (direct control)";
		},
		{
			first = "Движение назад (Прямое управление)";
			second = "Move back (direct control)";
		},
		{
			first = "Движение юнита";
			second = "Unit movement";
		},
		{
			first = "Движущиеся спрайты";
			second = "Moving sprites";
		},
		{
			first = "Деактивировать источники";
			second = "Deactivate origins";
		},
		{
			first = "Деактивировать объект по метке";
			second = "deactivate object on label";
		},
		{
			first = "Деинсталлировать здание";
			second = "Deinstall building";
		},
		{
			first = "Действие";
			second = "Action";
		},
		{
			first = "Декорация большое здание";
			second = "Decoration Large Building";
		},
		{
			first = "Декорация дерево";
			second = "Tree decoration";
		},
		{
			first = "Декорация забор";
			second = "Fence decoration";
		},
		{
			first = "Декорация здание";
			second = "Building decoration";
		},
		{
			first = "Декорация камень";
			second = "Rock decoration";
		},
		{
			first = "Декорация куст";
			second = "Bush decoration";
		},
		{
			first = "Декорация мост";
			second = "Bridge decoration";
		},
		{
			first = "Декорация неразрушаемое строение";
			second = "Undestructible building decoration";
		},
		{
			first = "Декорация неразрушаемый забор";
			second = "Decoration inpenetrable fence";
		},
		{
			first = "Декорация сарай";
			second = "Barn decoration";
		},
		{
			first = "Дельта поверхности в месте установки";
			second = "Landscape Delta in the placing spot";
		},
		{
			first = "Демонтаж (продажа) здания";
			second = "Building disassembling";
		},
		{
			first = "Демонтированный";
			second = "Disassembled";
		},
		{
			first = "Демонтировать";
			second = "Disassemble";
		},
		{
			first = "Деньги";
			second = "Money";
		},
		{
			first = "Дерево";
			second = "Tree";
		},
		{
			first = "Деревья";
			second = "Trees";
		},
		{
			first = "Деталь";
			second = "Detail";
		},
		{
			first = "Детектор";
			second = "Detector";
		},
		{
			first = "Диггер";
			second = "Digger";
		},
		{
			first = "Дизинтегратор";
			second = "Disintegrator";
		},
		{
			first = "Длина полоски";
			second = "Stripe lenght";
		},
		{
			first = "Длинна волны";
			second = "Wave length";
		},
		{
			first = "Длительность";
			second = "Duration";
		},
		{
			first = "Длительность, секунды";
			second = "Length, seconds";
		},
		{
			first = "Дневной";
			second = "Day-time";
		},
		{
			first = "Добавить в список";
			second = "Add to list";
		},
		{
			first = "Добавить источник";
			second = "Add source";
		},
		{
			first = "Добавка к именам файлов";
			second = "Addition to file names";
		},
		{
			first = "Добывать ресурс";
			second = "Extract ersource";
		},
		{
			first = "Дождь";
			second = "Rain";
		},
		{
			first = "Домутировать при числе";
			second = "Mutate with number";
		},
		{
			first = "Дорога";
			second = "Road";
		},
		{
			first = "Доступность оружия";
			second = "Weapon availability";
		},
		{
			first = "Доступность параметра";
			second = "Parameter availability";
		},
		{
			first = "Доступность юнита или здания";
			second = "Unit or building availability";
		},
		{
			first = "Доступные языки";
			second = "Available languages";
		},
		{
			first = "Другой";
			second = "Another";
		},
		{
			first = "Емкости ресурсодобытчика в порядке цепочек анимации";
			second = "Resource gatherer's capacities in the animational chain order";
		},
		{
			first = "Емкость для ресурса";
			second = "Resource capacity";
		},
		{
			first = "Емкость ресурсов игрока";
			second = "Player's recourse capacity";
		},
		{
			first = "Емкость ресурсодобытчика";
			second = "Resource gatherer capacity";
		},
		{
			first = "Ждать пока дойдет хотя бы один юнит";
			second = "Wait for arrival of at least one unit";
		},
		{
			first = "Ждать пока дойдут все юниты";
			second = "Wait for arrival of all units";
		},
		{
			first = "Желтый";
			second = "Yellow";
		},
		{
			first = "Жесткая формация";
			second = "Rigid formation";
		},
		{
			first = "Забор";
			second = "Hedge";
		},
		{
			first = "Завод офицеров";
			second = "Officer Plant";
		},
		{
			first = "Завод по производству Офицеров";
			second = "Officer generating plant";
		},
		{
			first = "Завод по производству Солдат";
			second = "Soldier generating plant";
		},
		{
			first = "Завод по производству Техников";
			second = "Technician generating plant";
		},
		{
			first = "Завод солдат";
			second = "Soldier Plant";
		},
		{
			first = "Завод техников";
			second = "Technician plant";
		},
		{
			first = "Загужаться в транспорт";
			second = "Load into the transport";
		},
		{
			first = "Зад";
			second = "Behind";
		},
		{
			first = "Задача";
			second = "Task";
		},
		{
			first = "Задача выполнена";
			second = "Task completed";
		},
		{
			first = "Задача добавлена";
			second = "Task added";
		},
		{
			first = "Задача провалена";
			second = "Task failed";
		},
		{
			first = "Задержка АИ";
			second = "AI delay";
		},
		{
			first = "Задержка апгрейда юнита в здание";
			second = "Delay of upgrade unit into a building";
		},
		{
			first = "Задержка времени";
			second = "time delay";
		},
		{
			first = "Задержка для обычных контектсных условий";
			second = "Delay for Normal Context Conditions";
		},
		{
			first = "Задержка для событийных контектсных условий";
			second = "Delay for Event-dependent Context Conditions";
		},
		{
			first = "Задержка появления";
			second = "Appearance delay";
		},
		{
			first = "Задержка производства параметров";
			second = "Delay of parameter production";
		},
		{
			first = "Задержка производства юнитов";
			second = "Delay of unit production";
		},
		{
			first = "Задержка строительства зданий";
			second = "Delay of building construction";
		},
		{
			first = "Задержка, секунды";
			second = "Delay, seconds";
		},
		{
			first = "Заказ в первый слот бригадира или прораба";
			second = "Order in the first Brigadier-Buildmaster slot";
		},
		{
			first = "Заказ в пятый слот бригадира или прораба";
			second = "Order in the fifth Brigadier-Buildmaster slot";
		},
		{
			first = "Заказ в третий слот бригадира или прораба";
			second = "Order in the third Brigadier-Buildmaster slot";
		},
		{
			first = "Заказ в четвертый слот бригадира или прораба";
			second = "Order in the fourth Brigadier-Buildmaster slot";
		},
		{
			first = "Заказ во второй слот бригадира или прораба";
			second = "Order in the second Brigadier-Buildmaster slot";
		},
		{
			first = "Заказ оффицера";
			second = "Order the Officer";
		},
		{
			first = "Заказ солдата";
			second = "Order the soldier";
		},
		{
			first = "Заказ техника";
			second = "Order the technician";
		},
		{
			first = "Заказать здание";
			second = "Order building";
		},
		{
			first = "Заказать юнита в сквад";
			second = "Order unit into a squad";
		},
		{
			first = "Заказать юнитов на заводе";
			second = "Order unit on a fabric";
		},
		{
			first = "Закат";
			second = "Sunset";
		},
		{
			first = "Закрытый";
			second = "Closed";
		},
		{
			first = "Закрыть";
			second = "Close";
		},
		{
			first = "Закрыть для посадки";
			second = "Close for entry";
		},
		{
			first = "Замедлить игру";
			second = "Slower the game";
		},
		{
			first = "Замкнутый";
			second = "Closed";
		},
		{
			first = "Замораживать";
			second = "Freeze";
		},
		{
			first = "Заморозить производство на время атаки";
			second = "Freeze the production for attack period";
		},
		{
			first = "Заморозить производство юнита в сквад";
			second = "Pause unit production into the squad";
		},
		{
			first = "Заполненный слот";
			second = "Occupied slot";
		},
		{
			first = "Запретить/разрешить управление игрока";
			second = "Disable/enable player control";
		},
		{
			first = "Запускался";
			second = "Was launched";
		},
		{
			first = "Запускать только для АИ";
			second = "Launch only for AI";
		},
		{
			first = "Запустить миссию";
			second = "Start the mission";
		},
		{
			first = "Запустить миссию (глобальное)";
			second = "Launch mission (global)";
		},
		{
			first = "Зарядить";
			second = "Load";
		},
		{
			first = "Заряженный";
			second = "Loaded";
		},
		{
			first = "Захват";
			second = "Capture";
		},
		{
			first = "Захват зданий";
			second = "Buildings capture";
		},
		{
			first = "Захват здания";
			second = "Building capture";
		},
		{
			first = "Захвативший Игрок";
			second = "Winning Player";
		},
		{
			first = "Захватываемые здания";
			second = "Captured buildings";
		},
		{
			first = "Захватывать";
			second = "Capture";
		},
		{
			first = "Захваченный";
			second = "Captured";
		},
		{
			first = "Зациклен";
			second = "Looped";
		},
		{
			first = "Зацикленная";
			second = "Looped";
		},
		{
			first = "Зацикливать звук";
			second = "Loop sound";
		},
		{
			first = "Зациклить траекторию";
			second = "Ring trajectory";
		},
		{
			first = "Защита";
			second = "Defence";
		},
		{
			first = "Защита вычисленная";
			second = "Calculated defence";
		},
		{
			first = "Звук";
			second = "Sound";
		},
		{
			first = "Звук из библиотеки";
			second = "Sound from a library";
		},
		{
			first = "Звук на начало строительства здания";
			second = "Sound on start of building construction";
		},
		{
			first = "Звук при получении уровня";
			second = "Level-up sound";
		},
		{
			first = "Звук, когда здания нельзя установить";
			second = "Sound on impossible building placement";
		},
		{
			first = "Звуки";
			second = "Sounds";
		},
		{
			first = "Звуковые метки";
			second = "Sound labels";
		},
		{
			first = "Звуковые треки";
			second = "Music tracks";
		},
		{
			first = "Здание";
			second = "Building";
		},
		{
			first = "Здание ближе к врагу";
			second = "Building closer to enemy";
		},
		{
			first = "Здание ближе к штабу";
			second = "Building closer to headquarters";
		},
		{
			first = "Здание в любом месте";
			second = "Building anywhere";
		},
		{
			first = "Здание на линии огня";
			second = "Building on a firing line";
		},
		{
			first = "Здание на определенном расстоянии от здания";
			second = "Building at a distance from a building";
		},
		{
			first = "Здание отключено";
			second = "Building disabled";
		},
		{
			first = "Здание подключено: Я-Т посредством воздушных связей, остальные - через зеропласт";
			second = "Building is connected: A-Z via air links, others - via zeroplast";
		},
		{
			first = "Здание1";
			second = "Building1";
		},
		{
			first = "Здания";
			second = "Buildings";
		},
		{
			first = "Здания для складирования ресурсов";
			second = "warehousing buildings";
		},
		{
			first = "Здоровье";
			second = "Health";
		},
		{
			first = "Здоровье/защита";
			second = "Health/armor";
		},
		{
			first = "Зеленый";
			second = "Green";
		},
		{
			first = "Земля";
			second = "Earth";
		},
		{
			first = "Земля копаемая";
			second = "Digable earth";
		},
		{
			first = "Земля некопаемая";
			second = "Solid earth";
		},
		{
			first = "Значение";
			second = "Value";
		},
		{
			first = "Значение (X)";
			second = "Value (X)";
		},
		{
			first = "Значение общего параметра";
			second = "General parameter value";
		},
		{
			first = "Значение сигнальной переменной";
			second = "Value of a Flag Variable";
		},
		{
			first = "Значения параметров";
			second = "Parameter value";
		},
		{
			first = "Значок";
			second = "Sign";
		},
		{
			first = "Значок уровня";
			second = "Level sign";
		},
		{
			first = "Зона";
			second = "Zone";
		},
		{
			first = "Зона 1";
			second = "Zone 1";
		},
		{
			first = "Зона 2";
			second = "Zone 2";
		},
		{
			first = "Зона 3";
			second = "Zone 3";
		},
		{
			first = "Зона Воздействия";
			second = "Influence zone";
		},
		{
			first = "Зона Генерации";
			second = "Generation zone";
		},
		{
			first = "Зона воздействия";
			second = "Interaction zone";
		},
		{
			first = "Зона воздействия #%i";
			second = "Interaction zone #%i";
		},
		{
			first = "Зона генерации";
			second = "Generation zone";
		},
		{
			first = "Зона гоздействия";
			second = "Interaction zone";
		},
		{
			first = "Зона детализации 1";
			second = "Detalisation area 1";
		},
		{
			first = "Зона детализации по умолчанию";
			second = "Default detalization zone";
		},
		{
			first = "Зона на мире";
			second = "ZOne on the map";
		},
		{
			first = "Зона с молниями";
			second = "Lightning zone";
		},
		{
			first = "Зона спецэффектов %i";
			second = "Special effects zone %i";
		},
		{
			first = "Зона спецэффектов 0";
			second = "Special effects zone 0";
		},
		{
			first = "Зона спецэффектов 1";
			second = "Special effects zone 1";
		},
		{
			first = "Зона установки";
			second = "Installation zone";
		},
		{
			first = "Зоны";
			second = "Zones";
		},
		{
			first = "Зоны спецэффектов";
			second = "Special effects zones";
		},
		{
			first = "И";
			second = "AND";
		},
		{
			first = "И/ИЛИ";
			second = "AND/OR";
		},
		{
			first = "И/ИЛИ (может быть контекстн.)";
			second = "AND/OR (could be context)";
		},
		{
			first = "ИЛИ";
			second = "OR";
		},
		{
			first = "ИСБОРЩИК";
			second = "EGATHERER";
		},
		{
			first = "ИТРУП-SM";
			second = "ECORPSE-SM";
		},
		{
			first = "ИТРУП-SM1";
			second = "ECORPSE-SM1";
		},
		{
			first = "Игнорировать последнюю цель";
			second = "Ignore last target";
		},
		{
			first = "Игровые ресурсы";
			second = "game resources";
		},
		{
			first = "Игрок";
			second = "Player";
		},
		{
			first = "Игрок активный";
			second = "Active player";
		},
		{
			first = "Игрок1";
			second = "Player1";
		},
		{
			first = "Игрок2";
			second = "Player2";
		},
		{
			first = "Игроки";
			second = "Players";
		},
		{
			first = "Идентификатор задачи";
			second = "Task Identifier";
		},
		{
			first = "Идентификатор кнопки";
			second = "Button Identifier";
		},
		{
			first = "Идентификатор сообщения";
			second = "Message Identifier";
		},
		{
			first = "Идентификатор юнита";
			second = "Unit Identifier";
		},
		{
			first = "Идти";
			second = "Walk";
		},
		{
			first = "Идти (юниты - по параметру)";
			second = "Walk (units - according to parameter)";
		},
		{
			first = "Идти с полным ресурсом";
			second = "Walk with full resource";
		},
		{
			first = "Из библиотеки";
			second = "From a library";
		},
		{
			first = "Из интерфейса";
			second = "From interface";
		},
		{
			first = "Изменение радиуса со временем";
			second = "Radius alteration with the lapse of time";
		},
		{
			first = "Изменение типа поверхности";
			second = "Landscape type modification";
		},
		{
			first = "Изменяемый в Excel";
			second = "Editable via Excel";
		},
		{
			first = "Икстирпатор";
			second = "Extirpator";
		},
		{
			first = "Имена музыкальных треков";
			second = "Music track names";
		},
		{
			first = "Имена узлов для управления задними колесами";
			second = "Names of the nodes controlling back wheels";
		},
		{
			first = "Имена узлов для управления передними колесами";
			second = "Names of the nodes controlling front wheels";
		},
		{
			first = "Импульс";
			second = "Impulse";
		},
		{
			first = "Имя";
			second = "Name";
		},
		{
			first = "Имя видеофайла";
			second = "Videofile name";
		},
		{
			first = "Имя графической ноды";
			second = "Graphical node name";
		},
		{
			first = "Имя для сейва";
			second = "Save name";
		},
		{
			first = "Имя дока";
			second = "Doc name";
		},
		{
			first = "Имя звукового файла";
			second = "Sound file name";
		},
		{
			first = "Имя логического узла модели для привязки";
			second = "Logical node name for bound";
		},
		{
			first = "Имя логической ноды";
			second = "Logical node title";
		},
		{
			first = "Имя метки";
			second = "label";
		},
		{
			first = "Имя миссии";
			second = "Mission name";
		},
		{
			first = "Имя модели";
			second = "Model name";
		},
		{
			first = "Имя объекта";
			second = "Object name";
		},
		{
			first = "Имя переменной";
			second = "Variable name";
		},
		{
			first = "Имя пометки";
			second = "Mark title";
		},
		{
			first = "Имя сейва для загрузки";
			second = "Title of the save to load";
		},
		{
			first = "Имя сигнальной переменной";
			second = "Title of a Flag Variable";
		},
		{
			first = "Имя сигнальной переменной (нужно задавать для различения уникальных параметров)";
			second = "Title of the alerting variable";
		},
		{
			first = "Имя сплайна камеры";
			second = "Camera spline name";
		},
		{
			first = "Имя файла";
			second = "File name";
		},
		{
			first = "Имя юнита для интерфейса (Лок)";
			second = "Unit name for interface (Lock)";
		},
		{
			first = "Инвентарь";
			second = "Inventory";
		},
		{
			first = "Инвертировано";
			second = "Inverted";
		},
		{
			first = "Интенсивность";
			second = "Intensity";
		},
		{
			first = "Интенсивность (0-100)";
			second = "Intensity (0-100)";
		},
		{
			first = "Интенсивность выпадения";
			second = "Falling intensity";
		},
		{
			first = "Интенсивность генерации 1";
			second = "Generation intensity 1";
		},
		{
			first = "Интенсивность генерации 2";
			second = "Generation intensity 2";
		},
		{
			first = "Интенсивность свечения";
			second = "Glowing intensity";
		},
		{
			first = "Интенсивность теней";
			second = "Shadows intensity";
		},
		{
			first = "Интенсивность теней облаков (0-255)";
			second = "Intensity of clouds' shadows";
		},
		{
			first = "Интенсивность частиц";
			second = "Particle intensity";
		},
		{
			first = "Интервал";
			second = "Interval";
		},
		{
			first = "Интересующее состояние";
			second = "Desirable condition";
		},
		{
			first = "Интерфейс";
			second = "Interface";
		},
		{
			first = "Интерфейс - в списке выбрана строка";
			second = "Interface - row selected in the list";
		},
		{
			first = "Интерфейс - включено состояние кнопки";
			second = "Interface - button state is enabled";
		},
		{
			first = "Интерфейс - контекстная команда заселекченным юнитам";
			second = "Interface - contextual command to the selected units";
		},
		{
			first = "Интерфейс - присоединение к сетевой игре";
			second = "Interface - join a LAN game";
		},
		{
			first = "Интерфейс - создание сетевой игры";
			second = "Interface - create a LAN game";
		},
		{
			first = "Интерфейс - старт игры";
			second = "Interface - start the game";
		},
		{
			first = "Интерфейс - старт сетевой игры";
			second = "Interface - LAN game start";
		},
		{
			first = "Интерфейс включен";
			second = "Interface enabled";
		},
		{
			first = "Интерфейс\\Включить музыкальный трек";
			second = "Interface\\Enable musical track";
		},
		{
			first = "Интерфейс\\Включить прямое управление";
			second = "Interface\\Enable direct control";
		},
		{
			first = "Интерфейс\\Включить режим установки здания";
			second = "Interface\\Enable building placement mode";
		},
		{
			first = "Интерфейс\\Включить экран интерфейса";
			second = "Interface\\Enable Interface Screen";
		},
		{
			first = "Интерфейс\\Включить/Выключить паузу игры";
			second = "Interface\\Enable/disable game pause";
		},
		{
			first = "Интерфейс\\Включить/выключить интерфейс";
			second = "Interface\\Enable/Disable Interface";
		},
		{
			first = "Интерфейс\\Выключить музыкальный трек";
			second = "Interface\\Disable musical track";
		},
		{
			first = "Интерфейс\\Выключить экран интерфейса";
			second = "Interface\\Disable Interface Screen";
		},
		{
			first = "Интерфейс\\Завершить работу с сетью";
			second = "Interface\\Finish Work with Net";
		},
		{
			first = "Интерфейс\\Загрузить игру (автосейв)";
			second = "Interface\\Load game (autosave)";
		},
		{
			first = "Интерфейс\\Клик мыши (запрещен в мультиплеере)";
			second = "Interface\\Mouse click (disabled for multiplayer mode)";
		},
		{
			first = "Интерфейс\\Клик по клавиатуре (запрещен в мультиплеере)";
			second = "Interface\\Keyboard click (disabled for multiplayer mode)";
		},
		{
			first = "Интерфейс\\Клик по кнопке";
			second = "Interface\\Button Click";
		},
		{
			first = "Интерфейс\\Кнопка получила/потеряла фокус";
			second = "Interface\\Button got/lost focus";
		},
		{
			first = "Интерфейс\\Контекстная команда заселекченным юнитам";
			second = "Interface\\Context Command to Selected Units";
		},
		{
			first = "Интерфейс\\Мышь над кнопкой";
			second = "Interface\\Mouse over button";
		},
		{
			first = "Интерфейс\\Назначить горячую клавишу на кнопку";
			second = "Interface\\Define a Hot Key for the Button";
		},
		{
			first = "Интерфейс\\Переключить доступность кнопки";
			second = "Interface\\Switch Button's Availability";
		},
		{
			first = "Интерфейс\\Переключить состояние кнопки";
			second = "Interface\\Switch Button's State";
		},
		{
			first = "Интерфейс\\Последний статус работы с сетью";
			second = "Interface\\Last network working status";
		},
		{
			first = "Интерфейс\\Присоединение к сетевой игре";
			second = "Interface\\Join Game via LAN";
		},
		{
			first = "Интерфейс\\Профайл выбран";
			second = "Interface\\Profile selected";
		},
		{
			first = "Интерфейс\\Селект сквада";
			second = "Interface\\Squad select";
		},
		{
			first = "Интерфейс\\Селект юнита или здания";
			second = "Interface\\UNit or building select";
		},
		{
			first = "Интерфейс\\Создание сетевой игры";
			second = "Interface\\Create a LAN game";
		},
		{
			first = "Интерфейс\\Сохранить игру";
			second = "Interface\\Save game";
		},
		{
			first = "Интерфейс\\Сохранить игру (автосейв)";
			second = "Interface\\Save game (autosave)";
		},
		{
			first = "Интерфейс\\Список профайлов пуст";
			second = "Interface\\Profile List is Empty";
		},
		{
			first = "Интерфейс\\Спрятать кнопку жестко";
			second = "Interface\\Hide the Button Rigidly";
		},
		{
			first = "Интерфейс\\Спрятать кнопку мягко";
			second = "Interface\\Hide the Button Softly";
		},
		{
			first = "Интерфейс\\Старт игры";
			second = "Interface\\Start the Game";
		},
		{
			first = "Интерфейс\\Старт сетевой игры";
			second = "Interface\\Start a LAN Game";
		},
		{
			first = "Интерфейс\\Управление анимацией кнопки";
			second = "Interface\\Button animation control";
		},
		{
			first = "Интерфейс\\в списке выбрана строка";
			second = "Интерфейс\\a Line is Selected in the List";
		},
		{
			first = "Интерфейс\\включено состояние кнопки";
			second = "Интерфейс\\Button State is Enabled";
		},
		{
			first = "ИнтерфейсТВ";
			second = "Interface CS";
		},
		{
			first = "Информация для интерфейса";
			second = "Interface information";
		},
		{
			first = "Искать...";
			second = "Search...";
		},
		{
			first = "Использовать арифметику";
			second = "Use arithmetic";
		},
		{
			first = "Использовать внешнюю текстуру (не из модели)";
			second = "Use External Texture (not from the Model)";
		},
		{
			first = "Использовать мелкодетальную текстуру";
			second = "Use detailed texture";
		},
		{
			first = "Использовать словарик";
			second = "Use dictionary (translate to English)";
		},
		{
			first = "Истоник - стая на мире";
			second = "Source - a swarm on a map";
		},
		{
			first = "Источкики ветра";
			second = "Wind origins";
		},
		{
			first = "Источкики воды";
			second = "Water origins";
		},
		{
			first = "Источкики гео волн";
			second = "Geo waves origins";
		},
		{
			first = "Источкики пузырьков";
			second = "Bubbles origins";
		},
		{
			first = "Источкики света";
			second = "Light origins";
		},
		{
			first = "Источкики трещин";
			second = "Cracles origins";
		},
		{
			first = "Источник";
			second = "Source";
		},
		{
			first = "Источник - стая на мире";
			second = "Source - swarm on map";
		},
		{
			first = "Источник ветра";
			second = "Wind source";
		},
		{
			first = "Источник ветра #0";
			second = "Wind source #0";
		},
		{
			first = "Источник взрывной волны";
			second = "Blast wave source";
		},
		{
			first = "Источник воды";
			second = "Water source";
		},
		{
			first = "Источник воды #0";
			second = "Water source #0";
		},
		{
			first = "Источник волны на воде";
			second = "Water waves source";
		},
		{
			first = "Источник вспышки";
			second = "Flash source";
		},
		{
			first = "Источник гео волн";
			second = "Geo waves source";
		},
		{
			first = "Источник гео волн #0";
			second = "Geo waves source #0";
		},
		{
			first = "Источник заморозки";
			second = "Freezing source";
		},
		{
			first = "Источник защитного поля";
			second = "Defensive field source";
		},
		{
			first = "Источник импульса";
			second = "Impulse source";
		},
		{
			first = "Источник импульсов";
			second = "Impulse source";
		},
		{
			first = "Источник льда";
			second = "Ice source";
		},
		{
			first = "Источник молний";
			second = "Lightning source";
		},
		{
			first = "Источник обнаружения";
			second = "Detection source";
		},
		{
			first = "Источник оружия";
			second = "Weapon source";
		},
		{
			first = "Источник пузырьков";
			second = "Bubbles source";
		},
		{
			first = "Источник пузырьков #0";
			second = "Bubbles source #0";
		},
		{
			first = "Источник света";
			second = "Light source";
		},
		{
			first = "Источник света в интерфейсе";
			second = "Light source in interface";
		},
		{
			first = "Источник телепортатор";
			second = "Teleportation source";
		},
		{
			first = "Источник торнадо";
			second = "Tornado source";
		},
		{
			first = "Источник трещин";
			second = "Cracks source";
		},
		{
			first = "Источник трещин #0";
			second = "Cracks source #0";
		},
		{
			first = "Источник тряски камеры";
			second = "Camera shaking source";
		},
		{
			first = "Источник тулзеров";
			second = "Toolzers source";
		},
		{
			first = "Источник удаления травы";
			second = "Source of grass removal";
		},
		{
			first = "Источники";
			second = "Sources";
		},
		{
			first = "Источники, остающиеся после гибели";
			second = "Sources left after death";
		},
		{
			first = "Исходный";
			second = "Initial";
		},
		{
			first = "Исходящие связи";
			second = "Outgoing links";
		},
		{
			first = "Исчезает при удалении";
			second = "Disappears on withdraw";
		},
		{
			first = "Исчезает при удалении (диапазон)";
			second = "Disappears in distance (diapason)";
		},
		{
			first = "Исчезает при удалении (фактор)";
			second = "Disappears in distance (factor)";
		},
		{
			first = "Исчезать на берегу";
			second = "Disappear on shore";
		},
		{
			first = "Исчезать плавно";
			second = "Disappear smoothly";
		},
		{
			first = "Камень";
			second = "Stone";
		},
		{
			first = "Камера";
			second = "Camera";
		},
		{
			first = "Камера при старте";
			second = "Camera on Start";
		},
		{
			first = "Камера\\Ограничения камеры";
			second = "Camera\\Camera restrictions";
		},
		{
			first = "Камера\\Отключать камеру от объекта";
			second = "Camera\\Disconnect camera from an object";
		},
		{
			first = "Камера\\Тряска Камеры";
			second = "Camera\\Shaking camera";
		},
		{
			first = "Камера\\Установить камеру на объект";
			second = "Camera\\Link camera to an object";
		},
		{
			first = "Камера\\Установить камеру на сквад";
			second = "Camera\\Link camera to a squad";
		},
		{
			first = "Камера\\Установка Камеры";
			second = "Camera\\Camera setting";
		},
		{
			first = "Камеры";
			second = "Cameras";
		},
		{
			first = "Камни";
			second = "Stones";
		},
		{
			first = "Картинки для вставки в текст";
			second = "Pictures to include into text";
		},
		{
			first = "Качество освещения";
			second = "Illumination Quality";
		},
		{
			first = "Качество теней";
			second = "Shadows Quality";
		},
		{
			first = "Клавиши прямого управления";
			second = "Direct control keys";
		},
		{
			first = "Клан";
			second = "Clan";
		},
		{
			first = "Класс атакуемых юнитов";
			second = "Attackable animals class";
		},
		{
			first = "Класс объектов атакуют";
			second = "Clas of objects is under attack";
		},
		{
			first = "Класс объектов собираются атаковать";
			second = "Class of obkect is about to be attacked";
		},
		{
			first = "Клик мыши (запрещен в мультиплеере)";
			second = "Mouse Click (disabled in multiplayer)";
		},
		{
			first = "Клик по клавиатуре (запрещен в мультиплеере)";
			second = "keybord click (disabled in multiplayer)";
		},
		{
			first = "Клик по кнопке";
			second = "Key click";
		},
		{
			first = "Клик по миру";
			second = "Click on a Map";
		},
		{
			first = "Ключ";
			second = "Key";
		},
		{
			first = "Ключевая точка";
			second = "Key point";
		},
		{
			first = "Кнопка";
			second = "Button";
		},
		{
			first = "Кнопки";
			second = "Buttons";
		},
		{
			first = "Ковш";
			second = "Drone";
		},
		{
			first = "Ковши";
			second = "Drones";
		},
		{
			first = "Когда выводить";
			second = "When to show";
		},
		{
			first = "Когда показывать";
			second = "When to show";
		},
		{
			first = "Кодовая страница";
			second = "Code page";
		},
		{
			first = "Кол-во юнитов меньше/больше процента от разрешенного количества";
			second = "Amount of Units is Greater/Less then the Allowed Amount";
		},
		{
			first = "Колеса";
			second = "Wheels";
		},
		{
			first = "Количество";
			second = "Amount";
		},
		{
			first = "Количество заказываемых юнитов с шифтом";
			second = "Amount of Ordered Units with Shift";
		},
		{
			first = "Количество кликов";
			second = "Amount of clicks";
		},
		{
			first = "Количество объектов";
			second = "Amount of objects";
		},
		{
			first = "Количество особей";
			second = "Number of individuals";
		},
		{
			first = "Количество производных";
			second = "Amount of derivatives";
		},
		{
			first = "Количество сквадов меньше значения";
			second = "Squad number under value";
		},
		{
			first = "Количество циклов";
			second = "Amount of loops";
		},
		{
			first = "Количество юнитов";
			second = "Unit number";
		},
		{
			first = "Коллектор";
			second = "Collector";
		},
		{
			first = "Команда";
			second = "Command";
		},
		{
			first = "Командный центр";
			second = "Command Center";
		},
		{
			first = "Комментарий";
			second = "Comment";
		},
		{
			first = "Конечная глубина генерации";
			second = "Final generation depth";
		},
		{
			first = "Конечный размер";
			second = "Final size";
		},
		{
			first = "Контекстные действия\\АИ - атаковать всеми сквадами";
			second = "Context Actions\\AI - Attack with All Squads";
		},
		{
			first = "Контекстные действия\\АИ - послать команду";
			second = "Context Actions\\AI - Send a Command";
		},
		{
			first = "Контекстные действия\\Апгрейд юнита определенного типа";
			second = "Context actions\\Upgrade unit of the type";
		},
		{
			first = "Контекстные действия\\Апгрейд юнитов определенного типа";
			second = "Context Actions\\Upgrade Units of the Defined Type";
		},
		{
			first = "Контекстные действия\\Атаковать метку на мире";
			second = "Context actions\\Attack the label on map";
		},
		{
			first = "Контекстные действия\\Атаковать специальным оружием";
			second = "Context Actions\\Attack with Special Weapon";
		},
		{
			first = "Контекстные действия\\Атаковать юнитами";
			second = "Context actions\\Attack with the units";
		},
		{
			first = "Контекстные действия\\Атаковать юнитами своих юнитов";
			second = "Context actions\\Attack friendly units with own units";
		},
		{
			first = "Контекстные действия\\Включить режим атаки юнита";
			second = "Context actions\\Enable unit's attack mode";
		},
		{
			first = "Контекстные действия\\Добывать ресурс";
			second = "Context Actions\\Gather Resource";
		},
		{
			first = "Контекстные действия\\Достроить здания";
			second = "Context actions\\Finish building construction";
		},
		{
			first = "Контекстные действия\\Объединить сквады";
			second = "Context actions\\Unite squads";
		},
		{
			first = "Контекстные действия\\Освободить транспорт от юнитов";
			second = "Context actions\\De-transport units";
		},
		{
			first = "Контекстные действия\\Отменить все приказы данные юниту";
			second = "Context actions\\Cancel all orders given to unit";
		},
		{
			first = "Контекстные действия\\Отходить на базу";
			second = "Context actions\\Return to base";
		},
		{
			first = "Контекстные действия\\Отходить на сушу";
			second = "Context Actions\\Fall back on Land";
		},
		{
			first = "Контекстные действия\\Охранять юнита";
			second = "Context actions\\Guard unit";
		},
		{
			first = "Контекстные действия\\Послать команду";
			second = "Context actions\\Send command";
		},
		{
			first = "Контекстные действия\\Послать сквад к предмету";
			second = "Context actions\\Send squad to item";
		},
		{
			first = "Контекстные действия\\Продать здание";
			second = "Context actions\\Sell building";
		},
		{
			first = "Контекстные действия\\Разведать территорию";
			second = "Context Actions\\Explore Area";
		},
		{
			first = "Контекстные действия\\Садиться в транспорт";
			second = "Context actions\\Load into transport";
		},
		{
			first = "Контекстные действия\\Садиться в транспорт/здание";
			second = "Context Actions\\Get in Transport/Building";
		},
		{
			first = "Контекстные действия\\Сделать юнита невидимым";
			second = "Context actions\\Hide unit";
		},
		{
			first = "Контекстные действия\\Следовать за сквадом на расстоянии";
			second = "Context actions\\Follow squad on a distance";
		},
		{
			first = "Контекстные событийные условия\\Объект атакован (с НЕ не работает)";
			second = "Context event conditions\\Object is under attack (does not work wit NOT)";
		},
		{
			first = "Контекстные условия\\В скваде юнита определенного типа определенное количесство юнитов";
			second = "Context event conditions\\The defined amount of unit in the defined squad type";
		},
		{
			first = "Контекстные условия\\Возле якоря по метке находится мой юнит";
			second = "Context conditions\\My unit is located near anchor marked by the label";
		},
		{
			first = "Контекстные условия\\Враг атакует юнитами";
			second = "Context Actions\\Enemy Atacks with Units";
		},
		{
			first = "Контекстные условия\\Объект атакован";
			second = "Context Actions\\Object is under Attack";
		},
		{
			first = "Контекстные условия\\Объект атакован типом оружия";
			second = "Context Actions\\Object is under Attack with Weapon Type";
		},
		{
			first = "Контекстные условия\\Объект в воде";
			second = "Context Actions\\Object is in the Water";
		},
		{
			first = "Контекстные условия\\Объект на расстоянии меньшем от объектов";
			second = "Context event conditions\\Object is located on a smaller distance from objects";
		},
		{
			first = "Контекстные условия\\Объект никем не атакован";
			second = "Context event conditions\\Obect is nor attacked by anyone";
		},
		{
			first = "Контекстные условия\\Объект поврежден на X процентов";
			second = "Context event conditions\\Object received X percent damage";
		},
		{
			first = "Контекстные условия\\Объект собираются атаковать";
			second = "Context event conditions\\Object is going to attack";
		},
		{
			first = "Контекстные условия\\Пустое условие";
			second = "Context Actions\\Empty Condition";
		},
		{
			first = "Контекстные условия\\Уровень юнита";
			second = "Context event conditions\\Unit level";
		},
		{
			first = "Контекстные условия\\Юнит занят";
			second = "Context event conditions\\Unit is busy";
		},
		{
			first = "Контекстные условия\\Юнит определенного типа";
			second = "Context Actions\\Unit of the Defined Type";
		},
		{
			first = "Копать";
			second = "Dig";
		},
		{
			first = "Копать барханами";
			second = "Dig barchane-shaped";
		},
		{
			first = "Копать горой";
			second = "Dig mountain-shaped";
		},
		{
			first = "Копать сильно";
			second = "Dig far down";
		},
		{
			first = "Копать ущельем";
			second = "Dig chine-shaped";
		},
		{
			first = "Копать холмом";
			second = "Dig hill-shaped";
		},
		{
			first = "Копировать";
			second = "Copy";
		},
		{
			first = "Коридор";
			second = "Corridor";
		},
		{
			first = "Коридор Альфа";
			second = "Alpha Corridor";
		},
		{
			first = "Коридор Омега";
			second = "Omega Corridor";
		},
		{
			first = "Коэф. интенсивности";
			second = "Intensity coefficient";
		},
		{
			first = "Коэф. интенсивности от ветра";
			second = "Wind intensity coefficient";
		},
		{
			first = "Коэффициент";
			second = "Coefficient";
		},
		{
			first = "Коэффициент - локальный хаос";
			second = "Coefficient - local chaos";
		},
		{
			first = "Коэффициент - следование за лидером";
			second = "Coefficient - follow the lider";
		},
		{
			first = "Коэффициент - хаос стаи";
			second = "Coefficient - swarm chaos";
		},
		{
			first = "Коэффициент воздействия ветра";
			second = "Wind influence coefficient";
		},
		{
			first = "Коэффициент воздействия течения воды";
			second = "Water flow influence coefficient";
		},
		{
			first = "Коэффициент воздействия течения воды [0..100]";
			second = "Water flow effect coefficient [0..100]";
		},
		{
			first = "Коэффициент воздействия течения воды [0..1]";
			second = "Water flow affect coefficient [0..1]";
		},
		{
			first = "Коэффициент времени строительства на воде";
			second = "Coefficient of Construction on the Water";
		},
		{
			first = "Коэффициент для радиуса видимости ночью";
			second = "Nighttime visible radius coefficient";
		},
		{
			first = "Коэффициент затухания";
			second = "Fading coefficient";
		},
		{
			first = "Коэффициент мощности взрыва";
			second = "Power of explosion coefficient";
		},
		{
			first = "Коэффициент ночью";
			second = "Coefficient at night";
		},
		{
			first = "Коэффициент парамeтров за смерть";
			second = "Death parameter coefficient";
		},
		{
			first = "Коэффициент параметров за гибель";
			second = "Coefficient of death parameters";
		},
		{
			first = "Коэффициент производительности ресурсосборщиков (скорость сборки ресурса)";
			second = "Coefficient of Effectiveness for Resource Gatherers (Speed of Resource Gathering)";
		},
		{
			first = "Коэффициент растяжения значка";
			second = "Sign extension coefficient";
		},
		{
			first = "Коэффициент скорости быстрого движения для воды";
			second = "Coefficient of fast movement for water";
		},
		{
			first = "Коэффициент скорости движения в сторону";
			second = "Sideways movement coefficient";
		},
		{
			first = "Коэффициент скорости движения для воды";
			second = "Water movement speed coefficient";
		},
		{
			first = "Коэффициент скорости движения назад";
			second = "Backwards movement coefficient";
		},
		{
			first = "Коэффициент скорости движения при беге";
			second = "Running speed coefficient";
		},
		{
			first = "Коэффициент скорости движения с ресурсом";
			second = "Coefficient for speed of movement with resource";
		},
		{
			first = "Коэффициент скорости по ветру";
			second = "Coefficient of Speed by Wind";
		},
		{
			first = "Коэффициент триггера задержка";
			second = "Trigger delay coefficient";
		},
		{
			first = "Коэффициент увеличения стоимости строительства с увеличением числа строителей";
			second = "Coefficient for increasing of construction cost on increase of builders number";
		},
		{
			first = "Коэффициенты брони";
			second = "Armour coefficients";
		},
		{
			first = "Коэффициенты скорости движения для типов поверхности";
			second = "Movement speed coefficients for different terrain types";
		},
		{
			first = "Красный";
			second = "Red";
		},
		{
			first = "Кратер";
			second = "Crater";
		},
		{
			first = "Кратер 1";
			second = "Crater 1";
		},
		{
			first = "Кратер 2";
			second = "Crater 2";
		},
		{
			first = "Краткое описание для интерфейса (Лок)";
			second = "Short Description for Interface (Loc)";
		},
		{
			first = "Критерий завершения";
			second = "Completion condition";
		},
		{
			first = "Критерий сравнения";
			second = "Comparison rule";
		},
		{
			first = "Круг";
			second = "Circle";
		},
		{
			first = "Круги на воде";
			second = "Circles on the water";
		},
		{
			first = "Круглосуточный";
			second = "All day round";
		},
		{
			first = "Кружок максимального радиуса атаки";
			second = "Circle of the maximal attack radius";
		},
		{
			first = "Кружок минимального радиуса атаки";
			second = "Circle with minimal attack radius";
		},
		{
			first = "Кружок радиуса атаки";
			second = "Circle of the attack radius";
		},
		{
			first = "Кружок радиуса видимости";
			second = "Circle of the visibility radius";
		},
		{
			first = "Крупнота";
			second = "Largeness";
		},
		{
			first = "Крутить камеру мышью";
			second = "Rotate camera with the mouse";
		},
		{
			first = "Крутящийся ветер";
			second = "Rotating wind";
		},
		{
			first = "Курсор";
			second = "Cursor";
		},
		{
			first = "Курсор выбора";
			second = "Select cursor";
		},
		{
			first = "Курсоры";
			second = "Cursors";
		},
		{
			first = "Курсоры действий показывать если все в селекте могут";
			second = "Display action cursors in case all are able in select";
		},
		{
			first = "Курсоры\\Отменить установленный курсор";
			second = "Cursors\\Mark the defined cursor";
		},
		{
			first = "Курсоры\\Сменить курсор юнита";
			second = "Cursors\\Replace unit cursor";
		},
		{
			first = "Курсоры\\Сменить общий курсор";
			second = "Cursors\\\"Replace general cursor";
		},
		{
			first = "Курсоры\\Установить курсор";
			second = "Cursors\\Define cursor";
		},
		{
			first = "Куст";
			second = "Bush";
		},
		{
			first = "Лёд";
			second = "Ice";
		},
		{
			first = "ЛЕД НА ВОДЕ: Bump текстура";
			second = "ICE ON WATER: Bump texture";
		},
		{
			first = "ЛЕД НА ВОДЕ: Текстура снега";
			second = "ICE ON WATER: snow texture";
		},
		{
			first = "ЛЕД НА ВОДЕ: Текстура трещин";
			second = "ICE ON THE WATER: Crackles texture";
		},
		{
			first = "ЛЕД: Текстура бампа";
			second = "ICE: bump texture";
		},
		{
			first = "ЛЕД: Текстура снега";
			second = "ICE: snow texture";
		},
		{
			first = "Лаборатория Возвратникиков Уровень 1";
			second = "Harkback Laboratory Level 1";
		},
		{
			first = "Лаборатория Возвратникиков Уровень 2";
			second = "Harkback Laboratory Level 2";
		},
		{
			first = "Лаборатория Возвратникиков Уровень 3";
			second = "Harkback Laboratory Level 3";
		},
		{
			first = "Лаборатория Империи Уровень 1";
			second = "Empire Laboratory Level 1";
		},
		{
			first = "Лаборатория Империи Уровень 2";
			second = "Empire Laboratory Level 2";
		},
		{
			first = "Лаборатория Империи Уровень 3";
			second = "Empire Laboratory Level 3";
		},
		{
			first = "Лаборатория Исходников Уровень 1";
			second = "Exodus Laboratory Level 1";
		},
		{
			first = "Лаборатория Исходников Уровень 2";
			second = "Exodus Laboratory Level 2";
		},
		{
			first = "Лаборатория Исходников Уровень 3";
			second = "Exodus Laboratory Level 3";
		},
		{
			first = "Лаборатория бомбового оружия Уровень 1";
			second = "Bomb Laboratory Level 1";
		},
		{
			first = "Лаборатория бомбового оружия Уровень 2";
			second = "Bomb Laboratory Level 2";
		},
		{
			first = "Лаборатория бомбового оружия Уровень 3";
			second = "Bomb Laboratory Level 3";
		},
		{
			first = "Лаборатория возвратников";
			second = "Harkback Laboratory";
		},
		{
			first = "Лаборатория империи";
			second = "Empire Laboratory";
		},
		{
			first = "Лаборатория исходников";
			second = "Exodus Laboratory";
		},
		{
			first = "Лаборатория лазерного оружия Уровень 1";
			second = "Laser Laboratory Level 1";
		},
		{
			first = "Лаборатория лазерного оружия Уровень 2";
			second = "Laser Laboratory Level 2";
		},
		{
			first = "Лаборатория лазерного оружия Уровень 3";
			second = "Laser Laboratory Level 3";
		},
		{
			first = "Лаборатория летной технологии Уровень 1";
			second = "Antigravity Laboratory Level 1";
		},
		{
			first = "Лаборатория летной технологии Уровень 2";
			second = "Antigravity Laboratory Level 2";
		},
		{
			first = "Лаборатория подземной технологии Уровень 1";
			second = "Subterra Laboratory Level 1";
		},
		{
			first = "Лаборатория подземной технологии Уровень 2";
			second = "Subterra Laboratory Level 2";
		},
		{
			first = "Лаборатория ракетного оружия Уровень 1";
			second = "Rocket Laboratory Level 1";
		},
		{
			first = "Лаборатория ракетного оружия Уровень 2";
			second = "Rocket Laboratory Level 2";
		},
		{
			first = "Лаборатория ракетного оружия Уровень 3";
			second = "Rocket Laboratory Level 3";
		},
		{
			first = "Лава";
			second = "Lava";
		},
		{
			first = "Лава: Текстура";
			second = "Lava: Texture";
		},
		{
			first = "Лазерная лаборатория";
			second = "Laser Laboratory";
		},
		{
			first = "Лазерная пушка";
			second = "Laser Turret";
		},
		{
			first = "Легионер";
			second = "Legionary";
		},
		{
			first = "Легкие";
			second = "Light";
		},
		{
			first = "Легкий";
			second = "Light";
		},
		{
			first = "Лед";
			second = "Ice";
		},
		{
			first = "Лед на всей карте";
			second = "Ice Across the whole Map";
		},
		{
			first = "Летный тип";
			second = "Flying type";
		},
		{
			first = "Лимит количества юнитов";
			second = "Unit Number Limit";
		},
		{
			first = "Лимо";
			second = "Leamo";
		},
		{
			first = "Линейный ветер";
			second = "Linear wind";
		},
		{
			first = "Личные (начальные) параметры юнита";
			second = "(default) individial unit parameters";
		},
		{
			first = "Личные параметры (дальность, время выстрела, время перезарядки)";
			second = "Individial unit parameters (range, shot time, recharge time)";
		},
		{
			first = "Личные параметры (дальность, время выстрела, время перезарядки, точность)";
			second = "Individual parameters (range, shot period, recharge period, accuracy)";
		},
		{
			first = "Личные параметры юнита";
			second = "Individual unit parameters";
		},
		{
			first = "Логический";
			second = "Logical";
		},
		{
			first = "Логический радиус";
			second = "Logical radius";
		},
		{
			first = "Локализация";
			second = "Localization";
		},
		{
			first = "Луч света";
			second = "Ray of light";
		},
		{
			first = "Любая строка выбрана";
			second = "Any line is selected";
		},
		{
			first = "Любой";
			second = "Any";
		},
		{
			first = "Любой тип";
			second = "Any type";
		},
		{
			first = "ММММММММММММММММММММММММММММММММММММММММММММММММММММММММММММММММ";
			second = "ММММММММММММММММММММММММММММММММММММММММММММММММММММММММММММММММ";
		},
		{
			first = "Максимальная амплитуда";
			second = "Maximum amplitude";
		},
		{
			first = "Максимальная высота";
			second = "Maimum height";
		},
		{
			first = "Максимальная глубина";
			second = "Maximum depth";
		},
		{
			first = "Максимальная дистанция до транспорта";
			second = "Maximum distance to transport";
		},
		{
			first = "Максимальная длина очереди";
			second = "Maximum queue length";
		},
		{
			first = "Максимальная длительность строительства";
			second = "Maximum construction period";
		},
		{
			first = "Максимальная производительность";
			second = "Maximum productivity";
		},
		{
			first = "Максимальная скорость вращения";
			second = "Maximum rotation speed";
		},
		{
			first = "Максимальная ширина";
			second = "Maximum width";
		},
		{
			first = "Максимальное время";
			second = "Maximum time";
		},
		{
			first = "Максимальное время жизни";
			second = "Maximum lifetime";
		},
		{
			first = "Максимальное время, которое недостроенное здание ожидает строителя, секунды";
			second = "Maximum Time Period, during which an Unfinished Building is Waiting for a Builder, sec";
		},
		{
			first = "Максимальное значение";
			second = "Maximum value";
		},
		{
			first = "Максимальное количество игроков";
			second = "Maximum number of payers";
		},
		{
			first = "Максимальное количество произведенных юнитов или параметров";
			second = "Maximum amount of producted units or parameters";
		},
		{
			first = "Максимальное количество юнитов";
			second = "Unit Cap";
		},
		{
			first = "Максимальное количество юнитов в селекте";
			second = "Maximum unit amount in a select";
		},
		{
			first = "Максимальное количество юнитов по типам";
			second = "Maximum unit number pro type";
		},
		{
			first = "Максимальное отклонение, градусы";
			second = "Maximum declination, degrees";
		},
		{
			first = "Максимальное расстояние";
			second = "Maximum distance";
		},
		{
			first = "Максимальное растояние до охраняемого юнита";
			second = "Maximum distance to guarded unit";
		},
		{
			first = "Максимальные параметры";
			second = "Maximum parameters";
		},
		{
			first = "Максимальные параметры юнита";
			second = "Maximum unit parameters";
		},
		{
			first = "Максимальный Радиус";
			second = "Maximum Radius";
		},
		{
			first = "Максимальный радиус объеденения сквадов";
			second = "Maximum radius for squad combination";
		},
		{
			first = "Максимальный размер";
			second = "Maximum size";
		},
		{
			first = "Максимум";
			second = "Maximum";
		},
		{
			first = "Максимум мин";
			second = "Maximum min";
		},
		{
			first = "Масса";
			second = "Mass";
		},
		{
			first = "Масса камня";
			second = "Weight of stone";
		},
		{
			first = "Масштаб";
			second = "Scale";
		},
		{
			first = "Масштаб времени";
			second = "Time scale";
		},
		{
			first = "Масштаб времени (днем)";
			second = "Time scale (day)";
		},
		{
			first = "Масштаб времени (ночью)";
			second = "Time scale (night)";
		},
		{
			first = "Масштаб мелкодетальной текстуры";
			second = "Scale of high-detailed texture";
		},
		{
			first = "Масштаб модели";
			second = "Model scale";
		},
		{
			first = "Масштаб параметров юнитов";
			second = "unit parameters scale";
		},
		{
			first = "Масштаб эффекта";
			second = "Effect scale";
		},
		{
			first = "Масштаб эффекта брызг на воде";
			second = "Scale of the water splashes effect";
		},
		{
			first = "Масштабирование";
			second = "Scaling";
		},
		{
			first = "Масштаб";
			second = "Scale";
		},
		{
			first = "Масштаб модели";
			second = "Model scale";
		},
		{
			first = "Масштаб спецэффекта";
			second = "Spacial effect scale";
		},
		{
			first = "Мгновенный (для снарядов - сразу исчезает)";
			second = "Instant (missiles disappear immediately)";
		},
		{
			first = "Мгновенный источник";
			second = "Instant source";
		},
		{
			first = "Мелкие декорации";
			second = "Small decorations";
		},
		{
			first = "Мелкодетальная текстура";
			second = "Detailed texture";
		},
		{
			first = "Меньше";
			second = "Less";
		},
		{
			first = "Меньше либо равно";
			second = "Equal or less";
		},
		{
			first = "Менять громкость звука";
			second = "Adjust the volume of sound";
		},
		{
			first = "Менять частоту звука";
			second = "Adjust the bandwidth of sound";
		},
		{
			first = "Метатель";
			second = "Thrower";
		},
		{
			first = "Метка";
			second = "Mark";
		},
		{
			first = "Метка объекта";
			second = "Object mark";
		},
		{
			first = "Метка(на якоре)";
			second = "Label (on anchor)";
		},
		{
			first = "Метод отрисовки";
			second = "Drawing method";
		},
		{
			first = "Метод создания";
			second = "Creation method";
		},
		{
			first = "Мигает";
			second = "Blinking";
		},
		{
			first = "Мин. расстояние от хозяина";
			second = "Minimal distance from the owner";
		},
		{
			first = "Минимальльная периодичность появления";
			second = "Minimum Appearance Periodicity";
		},
		{
			first = "Минимальная высота";
			second = "Minimal height";
		},
		{
			first = "Минимальная глубина";
			second = "Minimum depth";
		},
		{
			first = "Минимальная дальность стрельбы";
			second = "Minimum Shooting Range";
		},
		{
			first = "Минимальная интенсивность";
			second = "Minimum intensity";
		},
		{
			first = "Минимальное время жизни";
			second = "Minimum lifetime";
		},
		{
			first = "Минимальное значение";
			second = "Minimum value";
		},
		{
			first = "Минимальный размер";
			second = "Minimum size";
		},
		{
			first = "Минимум";
			second = "Minimum";
		},
		{
			first = "Мир";
			second = "World";
		},
		{
			first = "Мир для баттла";
			second = "Map for battle mode";
		},
		{
			first = "Миссии\\Активировать объект по метке";
			second = "Missions\\Activate object at label";
		},
		{
			first = "Миссии\\Вкл./выкл. анимацию объекта";
			second = "Missions\\Enable/disable object animation";
		},
		{
			first = "Миссии\\Включить анимацию головы";
			second = "Missions\\Enable head animation";
		},
		{
			first = "Миссии\\Деактивировать объект по метке";
			second = "Missions\\DEactivate object at label";
		},
		{
			first = "Миссии\\Задача";
			second = "Missions\\Objective";
		},
		{
			first = "Миссии\\Запретить/разрешить управление игрока";
			second = "Missions\\Allow/prohibit player control";
		},
		{
			first = "Миссии\\Звуковое сообщение";
			second = "Missions\\Sound message";
		},
		{
			first = "Миссии\\Послать сквад в точку объекта по метке";
			second = "Missions\\Send squad to the point at label";
		},
		{
			first = "Миссии\\Сброс селекта";
			second = "Missions\\Abort selection";
		},
		{
			first = "Миссии\\Селектировать юнита";
			second = "Missions\\Select unit";
		},
		{
			first = "Миссии\\Сообщение";
			second = "Missions\\Message";
		},
		{
			first = "Множество типов";
			second = "Set of types";
		},
		{
			first = "Модель";
			second = "Model";
		},
		{
			first = "Модель купола";
			second = "Dome model";
		},
		{
			first = "Модель неба";
			second = "Sky Model";
		},
		{
			first = "Модель солнца";
			second = "Sun model";
		},
		{
			first = "Может стрелять";
			second = "Can fire";
		},
		{
			first = "Можно атаковать непроходимую поверхность";
			second = "Allow attack of non-passable surface";
		},
		{
			first = "Можно поставить";
			second = "Can be placed";
		},
		{
			first = "Можно поставить (род поверхности)";
			second = "Can be placed (surface type)";
		},
		{
			first = "Можно прервать голос";
			second = "Voice may be interrupted";
		},
		{
			first = "Монохромный";
			second = "Monochrome";
		},
		{
			first = "Монтировать";
			second = "Build up";
		},
		{
			first = "Мортар";
			second = "Mortar";
		},
		{
			first = "Мост";
			second = "Bridge";
		},
		{
			first = "Мощность [100..300]";
			second = "Output [100..300]";
		},
		{
			first = "Мощность внутреннего взрыва";
			second = "Power of the internal explosion";
		},
		{
			first = "Музыкальная тема";
			second = "Musical theme";
		},
		{
			first = "Музыкальный трек";
			second = "Music track";
		},
		{
			first = "НЕ";
			second = "NOT";
		},
		{
			first = "На воде";
			second = "On the water";
		},
		{
			first = "На все оружие";
			second = "For all weapon types";
		},
		{
			first = "На выбранные типы оружия";
			second = "For selected weapon types";
		},
		{
			first = "На заданной высоте";
			second = "On the defined height";
		},
		{
			first = "На земле";
			second = "On the ground";
		},
		{
			first = "На любой поверхности";
			second = "On any surface";
		},
		{
			first = "На неглубокой воде";
			second = "On shallow water";
		},
		{
			first = "На объеты";
			second = "Over objects";
		},
		{
			first = "На оружие ближнего боя";
			second = "For melee weapons";
		},
		{
			first = "На оружие дальнего боя";
			second = "For ranged weapons";
		},
		{
			first = "На расстоянии";
			second = "At a distance";
		},
		{
			first = "На расстоянии от базы в сторону врага";
			second = "At a distance from base towards enemy";
		},
		{
			first = "На расстоянии от любого здания";
			second = "At a distance from any building";
		},
		{
			first = "На расстоянии от определенного строения";
			second = "At a distance from a defined building";
		},
		{
			first = "На расстоянии от юнита(помехи) (АНАЛОГИЧНО: На расстоянии от любого здания)";
			second = "At a distance from a unit (obstacle) (ANALOGIC: At a distance from a building)";
		},
		{
			first = "На что влиять";
			second = "Affect following objects";
		},
		{
			first = "Назад";
			second = "Back";
		},
		{
			first = "Название пресета";
			second = "Preset name";
		},
		{
			first = "Наземное животное";
			second = "Ground animal";
		},
		{
			first = "Назначать на модели";
			second = "Define for models";
		},
		{
			first = "Назначена";
			second = "Defined";
		},
		{
			first = "Налить";
			second = "Fill up";
		},
		{
			first = "Наносимые повреждения";
			second = "Damage";
		},
		{
			first = "Настройки режимов атаки";
			second = "Setup attack modes";
		},
		{
			first = "Насыпать";
			second = "Mound";
		},
		{
			first = "Насыпать барханами";
			second = "Mound barchane-shaped";
		},
		{
			first = "Насыпать горой";
			second = "Mound mountain-shaped";
		},
		{
			first = "Насыпать сильно";
			second = "Mound high";
		},
		{
			first = "Насыпать ущельем";
			second = "Mound chine-shaped";
		},
		{
			first = "Насыпать холмом";
			second = "Mound hill-shaped";
		},
		{
			first = "Начальная высота";
			second = "Initial height";
		},
		{
			first = "Начальная глубина генерации";
			second = "Initial generation depth";
		},
		{
			first = "Начальное количество";
			second = "Initial amount";
		},
		{
			first = "Начальные параметры";
			second = "Initial parameters";
		},
		{
			first = "Начальные ресурсы";
			second = "Initial resources";
		},
		{
			first = "Начальные установки режимов атаки";
			second = "Default settings for attack modes";
		},
		{
			first = "Начальный радиус";
			second = "Initial radius";
		},
		{
			first = "Начальный радиус затухания";
			second = "Initial fading radius";
		},
		{
			first = "Начальный размер";
			second = "Initial size";
		},
		{
			first = "Не выполняется никогда (для выключения триггеров)";
			second = "Do not implement ever (for triggers disabling)";
		},
		{
			first = "Не готов стрелять";
			second = "Is not ready to fire";
		},
		{
			first = "Не ждать";
			second = "Do not wait";
		},
		{
			first = "Не могу запустить редактор эффектов (исполняемый файл не найден)";
			second = "Cannot launch special effects editor (executable file not found)";
		},
		{
			first = "Не останавливатся и не атаковать";
			second = "Do not stop and do not attack";
		},
		{
			first = "Не равно";
			second = "Not equal";
		},
		{
			first = "Не устанавливать на некопаемости";
			second = "Do not place on the";
		},
		{
			first = "Невидим для редактирования";
			second = "Invisible to edit";
		},
		{
			first = "Невидим для редактора войск";
			second = "Invisible to Unit Editor";
		},
		{
			first = "Невидимка";
			second = "Invisible";
		},
		{
			first = "Невидимость";
			second = "Invisibility";
		},
		{
			first = "Недостаточно ресурсов для стельбы";
			second = "Not Enough Resources for Shooting";
		},
		{
			first = "Недостаточно ресурсов для строительства";
			second = "Not Enough Resources for Construction";
		},
		{
			first = "Независимая тертекстура";
			second = "Independent tertexture";
		},
		{
			first = "Некопаемость";
			second = "Non-digging zone";
		},
		{
			first = "Немедленно";
			second = "Instantly";
		},
		{
			first = "Необходимое количество слотов для размещения в транспорте";
			second = "Required number of slots for placing into transport";
		},
		{
			first = "Необходимы строители";
			second = "Builders are required";
		},
		{
			first = "Необходимые личные параметры";
			second = "Necessary Individual Parameters";
		},
		{
			first = "Необходимые общие параметры";
			second = "Required general parameters";
		},
		{
			first = "Необходимые параметры";
			second = "Required parameters";
		},
		{
			first = "Необходимые параметры для производства";
			second = "Parameters required for production";
		},
		{
			first = "Необходимые параметры для производства и апгрейда";
			second = "Required parameters for production and upgrade";
		},
		{
			first = "Необходимые строения для производства";
			second = "Buildings required for production";
		},
		{
			first = "Необходимые строения для производства и апгрейда";
			second = "Required constructions for production and upgrade";
		},
		{
			first = "Необходимый для движения";
			second = "Required for movement";
		},
		{
			first = "Неостанавливатся и атаковать";
			second = "Do not stop and attack";
		},
		{
			first = "Неостанавливатся и неатаковать";
			second = "Do not stop and do not attack";
		},
		{
			first = "Непрерывная линия";
			second = "Constant line";
		},
		{
			first = "Непроходимость";
			second = "Unpassable";
		},
		{
			first = "Неразрушаемое здание";
			second = "Impenetrable building";
		},
		{
			first = "Неразрушаемое строение";
			second = "Invulnerable construction";
		},
		{
			first = "Неразрушаемость";
			second = "Invulnerable";
		},
		{
			first = "Неразрушаемый забор";
			second = "Inpenetrable fence";
		},
		{
			first = "Нет зоны";
			second = "No zone";
		},
		{
			first = "Нет осадков";
			second = "No rainfall";
		},
		{
			first = "Нет производства";
			second = "No Production";
		},
		{
			first = "Нефть";
			second = "Oil";
		},
		{
			first = "Ни на какое оружие не влияет";
			second = "Does not affect any type of weapon";
		},
		{
			first = "Никогда неразрушаемое здание";
			second = "Inpenetrable building";
		},
		{
			first = "Никто";
			second = "Nobody";
		},
		{
			first = "Ничего не выбрано";
			second = "No selected objects";
		},
		{
			first = "Новый источник";
			second = "New source";
		},
		{
			first = "Номер апгрейда";
			second = "Ugrade number";
		},
		{
			first = "Номер закладки";
			second = "Bookmark number";
		},
		{
			first = "Номер параметра";
			second = "Parameter number";
		},
		{
			first = "Номер цепочки анимации";
			second = "Animational cycle number";
		},
		{
			first = "Номер цепочки триггера";
			second = "Number of the trigger chain";
		},
		{
			first = "Нормальная скорость игры";
			second = "Normal game speed";
		},
		{
			first = "Нормальный";
			second = "Normal";
		},
		{
			first = "Ночная цепочка";
			second = "Nigth-time Chain";
		},
		{
			first = "Ночной";
			second = "Night-time";
		},
		{
			first = "Область действия переменной";
			second = "Variable Purview";
		},
		{
			first = "Обозначение на миникарте";
			second = "Symbol on the minimap";
		},
		{
			first = "Обрывать за предeлaми макс. радиуса";
			second = "Terminate beyond maximum radius";
		},
		{
			first = "Обрывать при окончании";
			second = "Halt on finish";
		},
		{
			first = "Общее включения поля";
			second = "General field on";
		},
		{
			first = "Общее выключение поля";
			second = "General field off";
		},
		{
			first = "Общие (игрока)";
			second = "General (player's)";
		},
		{
			first = "Общие параметры";
			second = "General parameters";
		},
		{
			first = "Общие триггера";
			second = "General triggers";
		},
		{
			first = "Общий";
			second = "Common";
		},
		{
			first = "Общий враг";
			second = "Common Enemy";
		},
		{
			first = "Общий союзник";
			second = "Common Ally";
		},
		{
			first = "Объединение сквадов";
			second = "Combine squads";
		},
		{
			first = "Объект";
			second = "Object";
		},
		{
			first = "Объект атакован (контекстное)";
			second = "Object under attack (context)";
		},
		{
			first = "Объект атакован типом оружия (контекстное)";
			second = "Object under attack by type of unit (context)";
		},
		{
			first = "Объект атакован(контекстн.)";
			second = "Object is under attack (context)";
		},
		{
			first = "Объект атакуют";
			second = "Object under attack";
		},
		{
			first = "Объект в воде (контекстное)";
			second = "Object in water (context)";
		},
		{
			first = "Объект в воде(контекстн.)";
			second = "Object is in the water (context)";
		},
		{
			first = "Объект возле объекта";
			second = "Object next to the object";
		},
		{
			first = "Объект для оружия - захвата";
			second = "Object for weapon - capture";
		},
		{
			first = "Объект на определенном расстоянии от объекта";
			second = "Object is on a defined distance from an object";
		},
		{
			first = "Объект по метке существует";
			second = "Object under label exsists";
		},
		{
			first = "Объект по метке уничтожен";
			second = "Object under label destroyed";
		},
		{
			first = "Объект по метке\\Возле объекта по метке находится объект указанного типа";
			second = "Object at label\\Object of the defined type is located near object at te label";
		},
		{
			first = "Объект по метке\\Возле якоря по метке находится объект указанного типа";
			second = "Object at label\\Object of the defined type is located near anchor at label";
		},
		{
			first = "Объект по метке\\Объект по метке существует";
			second = "Object at label\\Object at label exists";
		},
		{
			first = "Объект по метке\\Объект по метке уничтожен";
			second = "Object at label\\Object at label is destroyed";
		},
		{
			first = "Объект собираются атаковать";
			second = "Object will be under attack";
		},
		{
			first = "Объект создан";
			second = "Object created";
		},
		{
			first = "Объект существует";
			second = "Object exists";
		},
		{
			first = "Объект уничтожен";
			second = "Object destroyed";
		},
		{
			first = "Объект1";
			second = "Object 1";
		},
		{
			first = "Объект2";
			second = "Object 2";
		},
		{
			first = "ОбъектЫ существуют";
			second = "Objects exist";
		},
		{
			first = "Объекта для водяного шлейфа";
			second = "Object for water train";
		},
		{
			first = "Объекты";
			second = "Objects";
		},
		{
			first = "Объекты для водяного шлейфа";
			second = "Objects for the water trace";
		},
		{
			first = "Объекты для привязки следов";
			second = "Object for traces link";
		},
		{
			first = "Объекты на мир";
			second = "World Object";
		},
		{
			first = "Объекты существуют";
			second = "Objects exist";
		},
		{
			first = "Обычное здание";
			second = "Common building";
		},
		{
			first = "Обычный игрок";
			second = "Normal Player";
		},
		{
			first = "Ограничения камеры";
			second = "Camera limitation";
		},
		{
			first = "Ограничивать время жизни";
			second = "Limit lifetime";
		},
		{
			first = "Однократно";
			second = "Single";
		},
		{
			first = "Ожидает пассажира";
			second = "Waiting for a passenger";
		},
		{
			first = "Ожидание реакции";
			second = "Waiting for reaction";
		},
		{
			first = "Ожидать в очереди";
			second = "Wait in Line";
		},
		{
			first = "Окружающая среда";
			second = "Environment";
		},
		{
			first = "Окружение";
			second = "Environment";
		},
		{
			first = "Окружность";
			second = "Circle";
		},
		{
			first = "Омега портал";
			second = "Omega portal";
		},
		{
			first = "Операция сравнения";
			second = "Collation Operation";
		},
		{
			first = "Описание миссии";
			second = "Mission description";
		},
		{
			first = "Описание миссии (лок)";
			second = "Mission Description (Loc)";
		},
		{
			first = "Описание параметров строительства (Лок)";
			second = "Construction parameters description (Lock)";
		},
		{
			first = "Ореол";
			second = "Aureola";
		},
		{
			first = "Ориентация";
			second = "Orientation";
		},
		{
			first = "Оружие";
			second = "Weapon";
		},
		{
			first = "Осадки";
			second = "Fall-out";
		},
		{
			first = "Освещен";
			second = "Spotlighted";
		},
		{
			first = "Освободить транспорт от юнитов";
			second = "Get all Units out of the Transport";
		},
		{
			first = "Основные повреждения";
			second = "General damage";
		},
		{
			first = "Особое здание на мире";
			second = "Special construction on the world";
		},
		{
			first = "Оставить где положили";
			second = "Leave at the pick-up point";
		},
		{
			first = "Оставляемые предметы";
			second = "Items to leave behind";
		},
		{
			first = "Оставляемый предмет";
			second = "Leaved object";
		},
		{
			first = "Оставлять осколки на мире";
			second = "Leave debris on the world";
		},
		{
			first = "Оставлять след";
			second = "Leave traces";
		},
		{
			first = "Оставлять след на траве";
			second = "Leave trace on grass";
		},
		{
			first = "Осталось времени меньше, чем указано";
			second = "Less time left then defined";
		},
		{
			first = "Остался только мой клан";
			second = "Only my clan is left";
		},
		{
			first = "Останавливатся и атаковать";
			second = "Stop and attack";
		},
		{
			first = "Останавливать при Upgrade-е";
			second = "Stop whe upgrading";
		},
		{
			first = "Останавливать при атаке";
			second = "Stop when attacking";
		},
		{
			first = "Останавливать при смерти";
			second = "Stop on death";
		},
		{
			first = "Остановить производство";
			second = "Halt production";
		},
		{
			first = "Остановлено строительство";
			second = "Construction is Paused";
		},
		{
			first = "Осушить";
			second = "Drain";
		},
		{
			first = "Отдавать ресурс";
			second = "Give away resource";
		},
		{
			first = "Отдавать ресурс (предметы и сборщики)";
			second = "Give resource away (items and gatherers)";
		},
		{
			first = "Открытый";
			second = "Opened";
		},
		{
			first = "Открыть";
			second = "Open";
		},
		{
			first = "Открыть для посадки";
			second = "Open for entry";
		},
		{
			first = "Отладка";
			second = "Debug";
		},
		{
			first = "Отмена производства юнитов";
			second = "Abort unit production";
		},
		{
			first = "Отменить установленный курсор";
			second = "Abort selected cursor";
		},
		{
			first = "Относительно";
			second = "Relatively";
		},
		{
			first = "Относительно инвертируя";
			second = "Inverting relatively";
		},
		{
			first = "Относительно копая";
			second = "Corresponding to digging";
		},
		{
			first = "Относительно насыпая";
			second = "Corresponding to raising";
		},
		{
			first = "Относительный радиус окружности";
			second = "Relative radius";
		},
		{
			first = "Относительный уровень глубокой воды";
			second = "Relative deep water level";
		},
		{
			first = "Отображать обычный туман (в редакторе)";
			second = "Display common fog (in editor)";
		},
		{
			first = "Отображать туман войны";
			second = "Show fog of war";
		},
		{
			first = "Отображать туман войны (в редакторе)";
			second = "Display fog of war (in editor)";
		},
		{
			first = "Отображение радиуса источника";
			second = "Display source's radius";
		},
		{
			first = "Отодвинуть камеру";
			second = "Move camera";
		},
		{
			first = "Отходить на базу сквадами определенного типа";
			second = "Retreat to base by defined squad types";
		},
		{
			first = "Отходить на радиус";
			second = "Retreat on the radius";
		},
		{
			first = "Отходить на сушу(контекстн.)";
			second = "Retreat to land (context)";
		},
		{
			first = "Офицеров при базовой";
			second = "Officers with basic";
		},
		{
			first = "Офицеры";
			second = "Officers";
		},
		{
			first = "Ошибка операции";
			second = "Operation error";
		},
		{
			first = "Падает и исчезает";
			second = "Falls and disappears";
		},
		{
			first = "Падает и лежит или плавает";
			second = "Falls and lies or swims";
		},
		{
			first = "Падает и лежит на земле";
			second = "Falls and lies on the ground";
		},
		{
			first = "Падает, исчезает и вырастает заново";
			second = "Fall, disappears and grows back";
		},
		{
			first = "Падать";
			second = "Fall";
		},
		{
			first = "Падающие листья";
			second = "Falling leaves";
		},
		{
			first = "Падение от кинетического удара";
			second = "Collapse from kinetik strike";
		},
		{
			first = "Паковать текстуры в DDS(требуется перезапуск)";
			second = "Compress textures in DDS (requires restart)";
		},
		{
			first = "Папки зданий";
			second = "Building folders";
		},
		{
			first = "Папки сквадов";
			second = "quad folders";
		},
		{
			first = "Параметер высыхания";
			second = "Exsiccation Parameter";
		},
		{
			first = "Параметр";
			second = "Parameter";
		},
		{
			first = "Параметры";
			second = "Parameters";
		},
		{
			first = "Параметры атаки";
			second = "Attack parameters";
		},
		{
			first = "Параметры визуализации изменения";
			second = "Parameters for Visualization of Changes";
		},
		{
			first = "Параметры движения";
			second = "Motion attributes";
		},
		{
			first = "Параметры за гибель";
			second = "Death parameter";
		},
		{
			first = "Параметры интерфейса";
			second = "Interface Parameters";
		},
		{
			first = "Параметры карты";
			second = "Map Parameters";
		},
		{
			first = "Параметры логики стаи";
			second = "Swarm logic parameters";
		},
		{
			first = "Параметры оружия";
			second = "Weapon parameters";
		},
		{
			first = "Параметры отображения";
			second = "Video options";
		},
		{
			first = "Параметры юнита";
			second = "Unit parameters";
		},
		{
			first = "Параметры, добавляемые транспорту";
			second = "Parameters added for transport";
		},
		{
			first = "Параметры\\Все параметры произведены";
			second = "Parameters\\All parameters have been produced";
		},
		{
			first = "Параметры\\Добывается ресурса в секунду";
			second = "Parameters\\Recourse output per second";
		},
		{
			first = "Параметры\\Значение общего параметра";
			second = "Parameters\\General parameter value";
		},
		{
			first = "Параметры\\Параметр произведен";
			second = "Parameters\\Parameter is produced";
		},
		{
			first = "Патрулировать";
			second = "Patrol";
		},
		{
			first = "Патрулировать с остановками";
			second = "Patrol with stops";
		},
		{
			first = "Паттерн";
			second = "Pattern";
		},
		{
			first = "Пауза";
			second = "Pause";
		},
		{
			first = "Пауза между сообщениями, секунды";
			second = "Pause between messages, seconds";
		},
		{
			first = "Первоначальная емкость";
			second = "Initial capacity";
		},
		{
			first = "Первоначальный набор юнитов";
			second = "Initial set of units";
		},
		{
			first = "Первоначальный ресурс";
			second = "Initial resource";
		},
		{
			first = "Перед";
			second = "Before";
		},
		{
			first = "Передаваемые параметры";
			second = "transmitting parameters";
		},
		{
			first = "Переднее колесо";
			second = "Front wheel";
		},
		{
			first = "Перейти на бег";
			second = "Switch to run";
		},
		{
			first = "Перейти на ходьбу";
			second = "Switch to walk";
		},
		{
			first = "Переключить доступность кнопки";
			second = "Switch a button's availability";
		},
		{
			first = "Переключить состояние кнопки";
			second = "Switch a button's state";
		},
		{
			first = "Перекрестье";
			second = "Crossroad";
		},
		{
			first = "Переменная профиля текущего игрока (сохраняется между миссиями, записывается)";
			second = "Variable of Current Player's Profile (Persists Between the Missions, is Saved)";
		},
		{
			first = "Переменная текущего игрока (существует в течении миссии, записывается в игровой сейв)";
			second = "Current Player's Variable (Exists During Missions, is Saved in Saved Games)";
		},
		{
			first = "Перемещаться";
			second = "Move";
		},
		{
			first = "Переносимые сквады";
			second = "Transferred squads";
		},
		{
			first = "Переход бежать -> идти";
			second = "Transition  run -> walk";
		},
		{
			first = "Переход в состояние";
			second = "Transition to state";
		},
		{
			first = "Переход идти -> бежать";
			second = "Transition walk -> run";
		},
		{
			first = "Переход идти -> стоять";
			second = "Transition walk -> stand";
		},
		{
			first = "Переход на бег";
			second = "Switch to run";
		},
		{
			first = "Переход на другой тип поверхности";
			second = "Transition over to another type of surface";
		},
		{
			first = "Переход от lod1 к lod2";
			second = "Switch from lod1 to lod2";
		},
		{
			first = "Переход от lod2 к lod3";
			second = "Cross-over from lod2 to lod3";
		},
		{
			first = "Переход с бега на ходьбу";
			second = "Cross-over from run to walk";
		},
		{
			first = "Переход с плаванья на ходьбу";
			second = "Cross-over from swimming to walking";
		},
		{
			first = "Переход с ходьбы на плавание";
			second = "Cross-over from walking to swimming";
		},
		{
			first = "Переход стоять -> идти";
			second = "Transition stand -> walk";
		},
		{
			first = "Переходы на другую поверхность";
			second = "Transitions to another type of surface";
		},
		{
			first = "Период";
			second = "Period";
		},
		{
			first = "Период анимации (для просмотра), mS";
			second = "Animation period (for viewing), mS)";
		},
		{
			first = "Период анимации (для просмотра), секунды";
			second = "Animation periods (fro viewing), seconds";
		},
		{
			first = "Период блуждания";
			second = "Wandering period";
		},
		{
			first = "Период, миллисекунды";
			second = "Period, milliseconds";
		},
		{
			first = "Периодичность";
			second = "Periodicity";
		},
		{
			first = "Песок";
			second = "Sand";
		},
		{
			first = "Пирсер";
			second = "Piercer";
		},
		{
			first = "Плавный переход";
			second = "Smooth change-over";
		},
		{
			first = "Плоский";
			second = "Flat";
		},
		{
			first = "Плохое";
			second = "Low";
		},
		{
			first = "Плыть";
			second = "Swim";
		},
		{
			first = "Плыть (юниты - по параметру)";
			second = "Swim (units - according to parameter)";
		},
		{
			first = "Плыть быстро";
			second = "Swim fast";
		},
		{
			first = "Плыть быстро (юниты - по параметру)";
			second = "Swim fast (units - according to parameter)";
		},
		{
			first = "Плыть быстро влево (Прямое управление)";
			second = "Swim to the left fast (Direct control)";
		},
		{
			first = "Плыть быстро вправо (Прямое управление)";
			second = "Swim to the right fast (Direct control)";
		},
		{
			first = "Плыть быстро назад (Прямое управление)";
			second = "Swim back fast (Direct control)";
		},
		{
			first = "Плыть влево (Прямое управление)";
			second = "Swim to the left (Direct control)";
		},
		{
			first = "Плыть вправо (Прямое управление)";
			second = "Swim to the right (Direct control)";
		},
		{
			first = "Плыть назад (Прямое управление)";
			second = "Swim back (Direct control)";
		},
		{
			first = "Победа";
			second = "Victory";
		},
		{
			first = "Поверхность";
			second = "Surface";
		},
		{
			first = "Поверхность 1 рода";
			second = "First type surface";
		},
		{
			first = "Поверхность 2 рода";
			second = "Second type surface";
		},
		{
			first = "Поверхность 3 рода";
			second = "Third type surface";
		},
		{
			first = "Поверхность 4 рода";
			second = "Fourth type surface";
		},
		{
			first = "Поворачивать к цели при атаке";
			second = "Aim on the target on atack";
		},
		{
			first = "Поворачивать фронт";
			second = "Rotate front";
		},
		{
			first = "Поворот в воде на месте налево";
			second = "Turning in the water to the left";
		},
		{
			first = "Поворот в воде на месте направо";
			second = "Turning in the water to the right";
		},
		{
			first = "Поворот на месте";
			second = "Rotation";
		},
		{
			first = "Поворот на месте налево";
			second = "Turning to the left";
		},
		{
			first = "Поворот на месте направо";
			second = "Turning to the  right";
		},
		{
			first = "Повреждения";
			second = "Damage";
		},
		{
			first = "Повреждения оружия";
			second = "Weapon Damage";
		},
		{
			first = "Повреждения от воды";
			second = "Water damage";
		},
		{
			first = "Повреждения от земли";
			second = "Damege from the Ground";
		},
		{
			first = "Повреждения от лавы";
			second = "Damage from lava";
		},
		{
			first = "Повреждения от льда";
			second = "Damage from ice";
		},
		{
			first = "Повреждения от окружающей среды";
			second = "Environmental Damage";
		},
		{
			first = "Погибает вместе с транспортом";
			second = "Dies when transport is destroyed";
		},
		{
			first = "Погибать";
			second = "Die";
		},
		{
			first = "Погода\\Активировать источники";
			second = "Weather\\Activate sources";
		},
		{
			first = "Погода\\Деактивировать источники";
			second = "Weather\\Deactivate sources";
		},
		{
			first = "Погода\\Установить время суток";
			second = "Weather\\Set time of day";
		},
		{
			first = "Погода\\Установить день (выключить фонари)";
			second = "Weather\\Set daytime (turn off lamps)";
		},
		{
			first = "Погода\\Установить направление ветра";
			second = "Weather\\Set wind direction";
		},
		{
			first = "Погода\\Установить параметры осадков";
			second = "Weather\\Set rainfall parameters";
		},
		{
			first = "Погода\\Установить туман";
			second = "Weather\\Set fog";
		},
		{
			first = "Погода\\Установить уровень воды";
			second = "Weather\\Set water level";
		},
		{
			first = "Погода\\Установить цвет воды";
			second = "Weather\\Set water color";
		},
		{
			first = "Погрешность: текущий < максимальный - погрешность";
			second = "Error : current ( maximum - error";
		},
		{
			first = "Под управлением AI";
			second = "AI controlled";
		},
		{
			first = "Подбираемые предметы";
			second = "Picked up objects";
		},
		{
			first = "Подводный";
			second = "Underwater";
		},
		{
			first = "Подводный эффект";
			second = "Underwater effect";
		},
		{
			first = "Подземная лаборатория";
			second = "Subterra Laboratory";
		},
		{
			first = "Подземные";
			second = "Underground";
		},
		{
			first = "Подземный";
			second = "Underground";
		},
		{
			first = "Подземпушка";
			second = "Subchaser Gun";
		},
		{
			first = "Подниматься на высоту";
			second = "Ascend to the Height";
		},
		{
			first = "Позиционировать камеру на юнита";
			second = "Focus camera on the unit";
		},
		{
			first = "Позиция";
			second = "Position";
		},
		{
			first = "Показ изменения параметров взлетающим текстом";
			second = "Display Changes of Parameters via Pop-up Text";
		},
		{
			first = "Показать ролик";
			second = "Show video";
		},
		{
			first = "Показывать взлетающий текст";
			second = "Display Pop-up Text";
		},
		{
			first = "Показывать движущиеся спрайты";
			second = "Show moving sprites";
		},
		{
			first = "Показывать ограничение камеры на мире";
			second = "Display camera limitations on map";
		},
		{
			first = "Показывать ореол";
			second = "Display aureola";
		},
		{
			first = "Показывать простые спрайты";
			second = "Show simple sprites";
		},
		{
			first = "Показывать путь";
			second = "Show path";
		},
		{
			first = "Показывать снаряд на оружии";
			second = "Display Missiles on Weaponry";
		},
		{
			first = "Показывать таймер";
			second = "Show timer";
		},
		{
			first = "Показывать тень";
			second = "Show shadow";
		},
		{
			first = "Полное описание для интерфейса (Лок)";
			second = "Full Description for Interface (Loc)";
		},
		{
			first = "Положение";
			second = "Position";
		},
		{
			first = "Получает повреждения от воды";
			second = "Receives damage from water";
		},
		{
			first = "Получает повреждения от лавы";
			second = "Receives damage from lava";
		},
		{
			first = "Получает энергию, не выводится иконка отсутствия энергии";
			second = "Receives Energy, 'Lack of Energy' Icon isn't Displayed";
		},
		{
			first = "Пометка над юнитом при AI";
			second = "Lable over unit in case of AI";
		},
		{
			first = "Пометка над юнитом при режиме бега";
			second = "LAbel over unit in running mode";
		},
		{
			first = "Пометка управления AI";
			second = "AI Control Mark";
		},
		{
			first = "Помеха при апгрейде";
			second = "Obstacle on upgrade";
		},
		{
			first = "Помещать в список бездействующих юнитов";
			second = "Add to the list of idle units";
		},
		{
			first = "Поражение";
			second = "Damage";
		},
		{
			first = "Порог воздействия ветра";
			second = "Wind effect limit";
		},
		{
			first = "Посадка в транспорт закрыть";
			second = "Entry into transport - close";
		},
		{
			first = "Посадка в транспорт открыть";
			second = "Entry into transport - open";
		},
		{
			first = "Послать сквад в точку объекта по метке";
			second = "Send squad to the object's point by mark";
		},
		{
			first = "Постоянный эффект";
			second = "Temporary effect";
		},
		{
			first = "Постоянный эффект уровня";
			second = "Permanent level effect";
		},
		{
			first = "Построенные";
			second = "Constructed";
		},
		{
			first = "Построенные или недостроенные";
			second = "Constructed or almost constructed";
		},
		{
			first = "Построенных и еще строящихся";
			second = "Constructed and in construction";
		},
		{
			first = "Построенных или недостроенный";
			second = "Constructed or almost constructed";
		},
		{
			first = "Построено";
			second = "Constructed";
		},
		{
			first = "Предмет";
			second = "Item";
		},
		{
			first = "Предмет-инвентарь";
			second = "Item-inventory";
		},
		{
			first = "Предмет-ресурс";
			second = "Item-resource";
		},
		{
			first = "Предметы";
			second = "Items";
		},
		{
			first = "Прерываемая";
			second = "Interrupted";
		},
		{
			first = "Прерываемое";
			second = "Interrupted";
		},
		{
			first = "Прерывание игры";
			second = "Game interruption";
		},
		{
			first = "Прерывать производство";
			second = "Interrupt production";
		},
		{
			first = "Пресеты";
			second = "Presets";
		},
		{
			first = "При селекте";
			second = "On select";
		},
		{
			first = "Приблизить камеру";
			second = "Zoom camera in";
		},
		{
			first = "Прибрежные спрайты";
			second = "Coastal sprites";
		},
		{
			first = "Приоритет";
			second = "Priority";
		},
		{
			first = "Приоритет (0 - самый высокий)";
			second = "Priority (0 is the highest)";
		},
		{
			first = "Приоритет (0 - самый низкий)";
			second = "Priority (0 - lowest priority)";
		},
		{
			first = "Приоритет в списке селекта";
			second = "Priority in the selection list";
		},
		{
			first = "Приоритет строительства";
			second = "Construction Priority";
		},
		{
			first = "Причина нехватки";
			second = "Lack reason";
		},
		{
			first = "Провалена";
			second = "Failed";
		},
		{
			first = "Проверка расы";
			second = "Race check";
		},
		{
			first = "Проверка целочисленной переменной";
			second = "Verification of an numeric variable";
		},
		{
			first = "Проверяет входные связи";
			second = "Checking incoming connections";
		},
		{
			first = "Проверяет условия";
			second = "Checking conditions";
		},
		{
			first = "Прогресс мутации сквада 1";
			second = "Mutation progress of Squad 1";
		},
		{
			first = "Прогресс мутации сквада 2";
			second = "Mutation progress of Squad 2";
		},
		{
			first = "Прогресс мутации сквада 3";
			second = "Mutation progress of Squad 3";
		},
		{
			first = "Прогресс мутации сквада 4";
			second = "Mutation progress of Squad 4";
		},
		{
			first = "Прогресс мутации сквада 5";
			second = "Mutation progress of Squad 5";
		},
		{
			first = "Прогресс энергии";
			second = "Energy progress";
		},
		{
			first = "Продолжительность в секундах";
			second = "Duration in seconds";
		},
		{
			first = "Продолжить производство юнита в сквад";
			second = "Contnue unit production into squad";
		},
		{
			first = "Прозрачность воды на разной глубине";
			second = "Water transparency on different depth";
		},
		{
			first = "Прозрачность разведанного";
			second = "Transparency of Explored Areas";
		},
		{
			first = "Прозрачность тумана войны на миникарте";
			second = "Fog of war transparensy on minimap";
		},
		{
			first = "Проигрывать в обратную сторону";
			second = "Reverse";
		},
		{
			first = "Произвести апгрейд";
			second = "Upgrade";
		},
		{
			first = "Произвести бригадира";
			second = "Create Brigadier";
		},
		{
			first = "Производимые действия";
			second = "Performed actions";
		},
		{
			first = "Производимые параметры";
			second = "Production parameters";
		},
		{
			first = "Производимые юниты";
			second = "Prduced units";
		},
		{
			first = "Производит что-то";
			second = "Producing something";
		},
		{
			first = "Производительность в секунду";
			second = "Productivity per second";
		},
		{
			first = "Производительность захвата в секунду";
			second = "Capture productivity per second";
		},
		{
			first = "Производить";
			second = "Produce";
		},
		{
			first = "Производить автоматически";
			second = "Produce automatically";
		},
		{
			first = "Производить везде";
			second = "Produce anywhere";
		},
		{
			first = "Производить на воде";
			second = "Produce in water";
		},
		{
			first = "Производить на земле";
			second = "Produce on the ground";
		},
		{
			first = "Производные";
			second = "Derivatives";
		},
		{
			first = "Производство";
			second = "Production";
		},
		{
			first = "Производство параметра";
			second = "Parameter production";
		},
		{
			first = "Производство параметров";
			second = "Parameter production";
		},
		{
			first = "Производство ресурса";
			second = "Resource Production";
		},
		{
			first = "Производство юнита";
			second = "Unit Production";
		},
		{
			first = "Производство юнитов";
			second = "Unit production";
		},
		{
			first = "Прокрутить камеру вверх";
			second = "Scroll camera up";
		},
		{
			first = "Прокрутить камеру влево";
			second = "Scroll camera left";
		},
		{
			first = "Прокрутить камеру вниз";
			second = "Scroll camera down";
		},
		{
			first = "Прокрутить камеру вправо";
			second = "Scroll camera right";
		},
		{
			first = "Прораб";
			second = "Buildmaster";
		},
		{
			first = "Простая размывка";
			second = "Simple blur";
		},
		{
			first = "Простой кратер";
			second = "Simple crater";
		},
		{
			first = "Простой предмет";
			second = "Simple object";
		},
		{
			first = "Прохождение";
			second = "Walk Through";
		},
		{
			first = "Процент";
			second = "Percentage";
		},
		{
			first = "Процент зарядки";
			second = "Charge level";
		},
		{
			first = "Процент зарядки спирали";
			second = "Spiral charge level";
		},
		{
			first = "Процент объектов";
			second = "Leftovers percentage";
		},
		{
			first = "Процент скрытых предметов на мире";
			second = "Percentage of hidden item on the map";
		},
		{
			first = "Процент существующих на мире объектов";
			second = "Percantage of objects existing on the map";
		},
		{
			first = "Процент увеличения стоимости захвата с увеличением числа захватчиков";
			second = "Coefficient for capture cost increase on increasing number of invaders";
		},
		{
			first = "Процент увеличения стоимости строительства с увеличением числа строителей";
			second = "Coefficient for construction cost increase on increasing number of builders";
		},
		{
			first = "Процент урона";
			second = "Damage level";
		},
		{
			first = "Прочая";
			second = "Other";
		},
		{
			first = "Прочий";
			second = "Other";
		},
		{
			first = "Прямая волна";
			second = "Direct wave";
		},
		{
			first = "Прямое управление";
			second = "Direct control";
		},
		{
			first = "Прямое управление - влево";
			second = "Direct control - left";
		},
		{
			first = "Прямое управление - вперед";
			second = "Direct control - forward";
		},
		{
			first = "Прямое управление - вправо";
			second = "Direct control - right";
		},
		{
			first = "Прямое управление - назад";
			second = "Direct control - back";
		},
		{
			first = "Прямое управление - стрейф влево";
			second = "Direct control - strafe left";
		},
		{
			first = "Прямое управление - стрейф вправо";
			second = "Direct control - strafe right";
		},
		{
			first = "Прямое управление имени Карла";
			second = "Carl's Direct control";
		},
		{
			first = "Прямоугольник";
			second = "Square";
		},
		{
			first = "Птицы";
			second = "Birds";
		},
		{
			first = "Пузырьки";
			second = "Bubbles";
		},
		{
			first = "Пузырьки исчезают на поверхности";
			second = "Bubbles dissappear on the surface";
		},
		{
			first = "Пустое действие";
			second = "Empty action";
		},
		{
			first = "Пустое условие (контекстное)";
			second = "Empty condition (context)";
		},
		{
			first = "Пустое условие(контекстн.)";
			second = "Empty condition (context)";
		},
		{
			first = "Пустой слот";
			second = "Emty slot";
		},
		{
			first = "Р-Проектор";
			second = "R-Projector";
		},
		{
			first = "Равно";
			second = "Equal";
		},
		{
			first = "Равномерно по зоне";
			second = "Equal across a zone";
		},
		{
			first = "Равномерно по окружности";
			second = "Regular full-circle";
		},
		{
			first = "Радиус";
			second = "Radius";
		},
		{
			first = "Радиус 1";
			second = "Radius 1";
		},
		{
			first = "Радиус 2";
			second = "Radius 2";
		},
		{
			first = "Радиус атаки";
			second = "Attack radius";
		},
		{
			first = "Радиус видимости";
			second = "Sight";
		},
		{
			first = "Радиус движения для режимов атаки";
			second = "Movement Radius for Attack Modes";
		},
		{
			first = "Радиус действия блуждающего эффекта";
			second = "Range of action for the wandering efect";
		},
		{
			first = "Радиус для точного анализа поверхности";
			second = "Radius for exact surface analyse";
		},
		{
			first = "Радиус облета цели для летных юнитов";
			second = "Radius of flying around a target for ar units";
		},
		{
			first = "Радиус патрулирования";
			second = "Patrol radius";
		},
		{
			first = "Радиус подбора для летных юнитов";
			second = "Picking up radius for air units";
		},
		{
			first = "Радиус разведки";
			second = "Exploring Radius";
		},
		{
			first = "Радиус создаваемой зоны";
			second = "Created zone's radius";
		},
		{
			first = "Радиус стаи";
			second = "Swarm radius";
		},
		{
			first = "Радиус тени (коэффициент от радиуса объекта)";
			second = "Shadow radius (coefficient of object radius)";
		},
		{
			first = "Разброс позиции появления";
			second = "Dispersion of appearance positions";
		},
		{
			first = "Разброс стрельбы";
			second = "Shooting Dispersion";
		},
		{
			first = "Разворачивать на месте";
			second = "Facing";
		},
		{
			first = "Разложено";
			second = "Decomposed";
		},
		{
			first = "Размер";
			second = "Size";
		},
		{
			first = "Размер луны";
			second = "Moon size";
		},
		{
			first = "Размер солнца";
			second = "Sun size";
		},
		{
			first = "Размещение по зоне";
			second = "Dustribution around the area";
		},
		{
			first = "Размывка гауссом";
			second = "Gaussian blur";
		},
		{
			first = "Разница высоты";
			second = "Height difference";
		},
		{
			first = "Разница температуры";
			second = "Temperature difference";
		},
		{
			first = "Разное";
			second = "Various";
		},
		{
			first = "Разобрать на базовые юниты";
			second = "Transform to basic units";
		},
		{
			first = "Разрешена";
			second = "Allowed";
		},
		{
			first = "Разрешение мелкодетальной текстуры";
			second = "Resolution of the low-detailed texture";
		},
		{
			first = "Разрешено деревом развития";
			second = "Is Allowed by Tech Tree";
		},
		{
			first = "Разрешить";
			second = "Allow";
		},
		{
			first = "Разрешить объединение сквадов";
			second = "Allow squads union";
		},
		{
			first = "Разрушаемое здание";
			second = "Destroyed building";
		},
		{
			first = "Разрушает зерослой";
			second = "Destroys zero-layer";
		},
		{
			first = "Разрушается в воде";
			second = "Is destroyed in wtaer";
		},
		{
			first = "Разрушается при любом воздействии";
			second = "Is destroyed on any intercourse";
		},
		{
			first = "Разрушать при воздействии ветра";
			second = "Destroy by wind";
		},
		{
			first = "Разрушение объектов окружения";
			second = "Environmental objects destruction";
		},
		{
			first = "Разрядить";
			second = "Discharge";
		},
		{
			first = "Разряженный";
			second = "Discharged";
		},
		{
			first = "Ракетная лаборатория";
			second = "Rocket Laboratory";
		},
		{
			first = "Ракетная пушка";
			second = "Rocket-Gun";
		},
		{
			first = "Рамка выделения: Внутреняя текстура";
			second = "Select border: inner texture";
		},
		{
			first = "Рамка выделения: Текстура";
			second = "Select border: Texture";
		},
		{
			first = "Рамка выделения: Текстура верхнего левого угла";
			second = "Select border: Texture of the upper left corner";
		},
		{
			first = "Рамка выделения: Текстура внутри";
			second = "Select border: Texture inside";
		},
		{
			first = "Рамка выделения: Цвет";
			second = "Select border: colour";
		},
		{
			first = "Раса";
			second = "Race";
		},
		{
			first = "Рассвет";
			second = "Dawn";
		},
		{
			first = "Расстояние";
			second = "Distance";
		},
		{
			first = "Расстояние до зданий(я)";
			second = "Distance to building(s)";
		},
		{
			first = "Расстояние исчезновения";
			second = "Distance for Disappearance";
		},
		{
			first = "Расстояние сканирования";
			second = "Scanning range";
		},
		{
			first = "Расход на бег";
			second = "Cost of Running";
		},
		{
			first = "Расы";
			second = "Races";
		},
		{
			first = "Реагировать на все виды юнитов";
			second = "Respond to all unit types";
		},
		{
			first = "Реагировать только на летающих";
			second = "Respond to ait units only";
		},
		{
			first = "Реагировать только на наземных";
			second = "Respond to ground units only";
		},
		{
			first = "Реальный юнит";
			second = "Real unit";
		},
		{
			first = "Редактировать общие свойства";
			second = "Edit general properties";
		},
		{
			first = "Режим";
			second = "Mode";
		},
		{
			first = "Режим автоматического выбора целей";
			second = "Choose targets automatically mode";
		},
		{
			first = "Режим атаки";
			second = "Attack mode";
		},
		{
			first = "Режим атаки без указания цели";
			second = "Attack without target definitionmode";
		},
		{
			first = "Режим атаки при движении";
			second = "Non-stop attack mode";
		},
		{
			first = "Режим видимости при тумане войны";
			second = "Visibility mode in fog of war";
		},
		{
			first = "Режим движения";
			second = "Movement mode";
		},
		{
			first = "Режим движения при патрулировании";
			second = "Movement mode in patrol mode";
		},
		{
			first = "Режим загрузки";
			second = "Loading mode";
		},
		{
			first = "Режим оружия";
			second = "Weapon mode";
		},
		{
			first = "Режим работы";
			second = "Working mode";
		},
		{
			first = "Режим селекта:";
			second = "Selection mode";
		},
		{
			first = "Режими атаки без указания цели";
			second = "Attack modes without set target";
		},
		{
			first = "Режими атаки при движении";
			second = "Attack modes on movement";
		},
		{
			first = "Режими оружия";
			second = "Weapon modes";
		},
		{
			first = "Резерв энергии";
			second = "Energy reserve";
		},
		{
			first = "Результат (при X = 0): %f";
			second = "Result (when X = 0): %f";
		},
		{
			first = "Рельеф";
			second = "Terrain";
		},
		{
			first = "Рельеф объектами";
			second = "Object-based terrain";
		},
		{
			first = "Ресурсодобытчик - максимальная производительность";
			second = "Resource gatherer - maximum producivity";
		},
		{
			first = "Ресурсодобытчик - производительность в секунду";
			second = "Resource gatherer - producivity per second";
		},
		{
			first = "Ресурсодобыча";
			second = "Resource gathering";
		},
		{
			first = "Рождение";
			second = "Birth";
		},
		{
			first = "Рокер";
			second = "Rocker";
		},
		{
			first = "Ролик";
			second = "Video";
		},
		{
			first = "Рыба";
			second = "Fish";
		},
		{
			first = "С фейдом";
			second = "With fade";
		},
		{
			first = "СОБИРАТЕЛИ";
			second = "GATHERES";
		},
		{
			first = "Садится в транспорт";
			second = "Loading into transport";
		},
		{
			first = "Самозатенение поверхности";
			second = "Selfdimming surface";
		},
		{
			first = "Саморазрушение недостроенного здания, в секунду";
			second = "Unfinished building self-destruction per second";
		},
		{
			first = "Сарай";
			second = "Barn";
		},
		{
			first = "Сборщик ресурсов";
			second = "Resource gatherer";
		},
		{
			first = "Сброс селекта";
			second = "Cancel select";
		},
		{
			first = "Сверху";
			second = "From top";
		},
		{
			first = "Свет";
			second = "Light";
		},
		{
			first = "Свечение";
			second = "Glow";
		},
		{
			first = "Свойства";
			second = "Properties";
		},
		{
			first = "Свойства вычисленные";
			second = "Calculated Properties";
		},
		{
			first = "Сдвинуть камеру вверх";
			second = "Move camera up";
		},
		{
			first = "Сдвинуть камеру влево";
			second = "Move camera left";
		},
		{
			first = "Сдвинуть камеру вниз";
			second = "Move camera down";
		},
		{
			first = "Сдвинуть камеру вправо";
			second = "Move camera right";
		},
		{
			first = "Сделать неактивными все стрелки триггера";
			second = "Deactivate All Trigger Arrows";
		},
		{
			first = "Себя не телепортировать (для оружия)";
			second = "Do not teleport self (for weapon)";
		},
		{
			first = "Селект определённого типа здания";
			second = "Select type of building";
		},
		{
			first = "Селект определённого типа юнита";
			second = "Select type of units";
		},
		{
			first = "Селект сквада";
			second = "Select Squad";
		},
		{
			first = "Селект юнита или здания";
			second = "Unit or building selection";
		},
		{
			first = "Селект: Длина линии";
			second = "Select: line length";
		},
		{
			first = "Селект: Имя текстуры";
			second = "Select: Texture name";
		},
		{
			first = "Селект: Цвет";
			second = "Select: colour";
		},
		{
			first = "Селект: Ширина линии";
			second = "Select: line width";
		},
		{
			first = "Селектировать юнита";
			second = "Select unit";
		},
		{
			first = "Сетка";
			second = "Grid";
		},
		{
			first = "Сидеть в транспорте";
			second = "Sit in the transport";
		},
		{
			first = "Сила ветра";
			second = "Strength of wind";
		},
		{
			first = "Сила воздействия при контакте";
			second = "Influence power on contact";
		},
		{
			first = "Сила тряски камеры";
			second = "Strength of camera shaking";
		},
		{
			first = "Синий";
			second = "Blue";
		},
		{
			first = "Синхронизировать по звуку";
			second = "Synchronize on sound";
		},
		{
			first = "Синхронизировать со звуком";
			second = "Synchronize with sound";
		},
		{
			first = "Скала";
			second = "Cliff";
		},
		{
			first = "Скамер";
			second = "Scumer";
		},
		{
			first = "Скаморазрушитель";
			second = "Scum Splitter";
		},
		{
			first = "Сквад";
			second = "Squad";
		},
		{
			first = "Сквад, за которым следовать";
			second = "Squad that should be followed";
		},
		{
			first = "Скверна воздушная";
			second = "Air Scourge";
		},
		{
			first = "Скверна наземная";
			second = "Ground Scourge";
		},
		{
			first = "Скверна подземная";
			second = "Underground Scourge";
		},
		{
			first = "Скорость";
			second = "Speed";
		},
		{
			first = "Скорость [100..300]";
			second = "Speed [100..300]";
		},
		{
			first = "Скорость Движения";
			second = "Movement speed";
		},
		{
			first = "Скорость активации (сек.)";
			second = "Animation speed (sec)";
		},
		{
			first = "Скорость ветра";
			second = "Wind speed";
		},
		{
			first = "Скорость волны";
			second = "Speed of wave";
		},
		{
			first = "Скорость генерации пузырьков";
			second = "Bubbles generation speed";
		},
		{
			first = "Скорость движения";
			second = "Movement speed";
		},
		{
			first = "Скорость искажения";
			second = "Distortion speed";
		},
		{
			first = "Скорость квантов";
			second = "Quant speed";
		},
		{
			first = "Скорость на траектории";
			second = "Speed on a trajectory";
		},
		{
			first = "Скорость полета";
			second = "Speed of Flyight";
		},
		{
			first = "Скорость пузырьков по умолчанию";
			second = "Default bubbles speed";
		},
		{
			first = "Скорость пузытьков по умолчанию";
			second = "DefaultInitial Bubbles speed";
		},
		{
			first = "Скорость разворота на месте";
			second = "Facing speed";
		},
		{
			first = "Скорость разворота на месте при плавании";
			second = "Turning in the water speed";
		},
		{
			first = "Скорость течения";
			second = "Speed of flow";
		},
		{
			first = "Скрывать под зданием";
			second = "Hiden under buildings";
		},
		{
			first = "Скрывать эффекты при удалении";
			second = "Hide effects in distance";
		},
		{
			first = "Слева";
			second = "On the left";
		},
		{
			first = "След 1";
			second = "Trace 1";
		},
		{
			first = "След тектурный";
			second = "Texture trace";
		},
		{
			first = "Следовать до упора";
			second = "Follow chock-a-block";
		},
		{
			first = "Следовать до упора и возвращаться на позицию";
			second = "Follow and return back to initial position";
		},
		{
			first = "Следовать за сквадом на расстоянии";
			second = "Follow squad on a distance";
		},
		{
			first = "Следовать за сквадом на расстоянии (0 - выключено)";
			second = "Follow squad on distance (0 - off)";
		},
		{
			first = "Следовать по траектории";
			second = "Follow trajectory";
		},
		{
			first = "Сложность";
			second = "Difficulty";
		},
		{
			first = "Сложный";
			second = "Difficult";
		},
		{
			first = "Слоты";
			second = "Slots";
		},
		{
			first = "Служебная";
			second = "Classified";
		},
		{
			first = "Служебные условия\\И/ИЛИ";
			second = "Service conditions\\AND/OR";
		},
		{
			first = "Служебные условия\\Не выполняется никогда (для выключения триггеров)";
			second = "Service conditions\\Is not executed ever (for disabling triggers)";
		},
		{
			first = "Случайно по зоне";
			second = "Random by area";
		},
		{
			first = "Случайно по сфере";
			second = "Random by sphere";
		},
		{
			first = "Случайно по шару";
			second = "Random by ball";
		},
		{
			first = "Случайный выбор трека";
			second = "Random trace choice";
		},
		{
			first = "Сменить время суток";
			second = "Change time";
		},
		{
			first = "Сменить курсор юнита";
			second = "Change unit cursor";
		},
		{
			first = "Сменить общий курсор";
			second = "Change general cursor";
		},
		{
			first = "Сменить режим автоматического выбора целей";
			second = "Replace target auto-definition mode";
		},
		{
			first = "Сменить режим атаки";
			second = "Switch attack mode";
		},
		{
			first = "Сменить режим движения";
			second = "Switch movement mode";
		},
		{
			first = "Сменить режим оружия";
			second = "Switch weapon mode";
		},
		{
			first = "Смерть";
			second = "Death";
		},
		{
			first = "Смерч";
			second = "Twister";
		},
		{
			first = "Смещение";
			second = "Shift";
		},
		{
			first = "Смещение значка";
			second = "Sign shift";
		},
		{
			first = "Смонтированный";
			second = "Preassembled";
		},
		{
			first = "Снайпер";
			second = "Sniper";
		},
		{
			first = "Снаряд";
			second = "Missile";
		},
		{
			first = "Снаряды";
			second = "Missiles";
		},
		{
			first = "Снег";
			second = "Snow";
		},
		{
			first = "Сносится ветром";
			second = "Carried by wind";
		},
		{
			first = "Сносится водой";
			second = "Carried by water";
		},
		{
			first = "Собираемый ресурс";
			second = "Extracted resource";
		},
		{
			first = "Собирает ресурс";
			second = "Gathers resource";
		},
		{
			first = "Собирать ресурс";
			second = "Gather resource";
		},
		{
			first = "Собственные настройки режимов атаки";
			second = "Custom settings for attack modes";
		},
		{
			first = "Событийные условия\\Апгрейд завершен";
			second = "Event conditions\\Upgrade complete";
		},
		{
			first = "Событийные условия\\Апгрейд здания начат";
			second = "Event conditions\\Building upgrade started";
		},
		{
			first = "Событийные условия\\Здание продано";
			second = "Event conditions\\Building sold";
		},
		{
			first = "Событийные условия\\Источник создан";
			second = "Event conditions\\Source created";
		},
		{
			first = "Событийные условия\\Нехватка ресурса";
			second = "Event conditions\\Lack of resource";
		},
		{
			first = "Событийные условия\\Объект создан";
			second = "Event conditions\\Object created";
		},
		{
			first = "Событийные условия\\Объект уничтожен";
			second = "Event conditions\\Object destroyed";
		},
		{
			first = "Событийные условия\\Параметер произведен";
			second = "Event conditions\\Parameter produced";
		},
		{
			first = "Событийные условия\\Производство юнита начато";
			second = "Event conditions\\Unit production started";
		},
		{
			first = "Событийные условия\\Произошел селект юнита или здания";
			second = "Event conditions\\Unit or building has been selected";
		},
		{
			first = "Событийные условия\\Скваду отдана команда атаковать";
			second = "Event conditions\\Squad has received atack order";
		},
		{
			first = "Событийные условия\\Скваду отдана команда двигаться";
			second = "Event conditions\\Squad has received move order";
		},
		{
			first = "Событийные условия\\Строительство здания завершилось";
			second = "Event conditions\\Building construction complete";
		},
		{
			first = "Событийные условия\\Строительство здания началось";
			second = "Event conditions\\Building construction started";
		},
		{
			first = "Событийные условия\\Юнит захвачен";
			second = "Event conditions\\Unit captured";
		},
		{
			first = "Событийные условия\\Юниту отдана команда атаковать";
			second = "Event conditions\\Unit received attack command";
		},
		{
			first = "Событийные условия\\Юниту отдана команда двигаться";
			second = "Event conditions\\Unit received move command";
		},
		{
			first = "Создаваемая зона";
			second = "Created zone";
		},
		{
			first = "Создаваемые здания";
			second = "Constructed buildings";
		},
		{
			first = "Создавать достроенные здания";
			second = "Create finished buildings";
		},
		{
			first = "Создание зоны непроходимости";
			second = "Creation of a non-movement zone";
		},
		{
			first = "Создание льда";
			second = "Ice creation";
		},
		{
			first = "Создать источник";
			second = "Create source";
		},
		{
			first = "Создать некопаемую зону";
			second = "Create non-digging zone";
		},
		{
			first = "Солдатов при базовой";
			second = "Soldiers with basic";
		},
		{
			first = "Солдаты";
			second = "Soldiers";
		},
		{
			first = "Сообщение";
			second = "Message";
		},
		{
			first = "Сообщения";
			second = "Message";
		},
		{
			first = "Сопутствующий эффект";
			second = "Corresponding effect";
		},
		{
			first = "Соска";
			second = "Leech";
		},
		{
			first = "Состояние";
			second = "State";
		},
		{
			first = "Сохранить игру";
			second = "Save game";
		},
		{
			first = "Сохранить экран";
			second = "Save screen";
		},
		{
			first = "Спайс";
			second = "Spice";
		},
		{
			first = "Спецоружие";
			second = "Special weapon";
		},
		{
			first = "Спецоружия";
			second = "Special weapons";
		},
		{
			first = "Спецэффект";
			second = "Special effects";
		},
		{
			first = "Спецэффект %i";
			second = "Special effect %i";
		},
		{
			first = "Спецэффект 0";
			second = "Special effect 0";
		},
		{
			first = "Спецэффект взрыва";
			second = "Explousion special effect";
		},
		{
			first = "Спецэффекты";
			second = "Special effects";
		},
		{
			first = "Список";
			second = "List";
		},
		{
			first = "Список арифметики";
			second = "Arithmetics list";
		},
		{
			first = "Список для выбора";
			second = "List for choice";
		},
		{
			first = "Сплаш-дамадж";
			second = "Splash damage";
		},
		{
			first = "Сплаш-радиус";
			second = "Splash radius";
		},
		{
			first = "Сплиттер";
			second = "Splitter";
		},
		{
			first = "Сплэш";
			second = "Splash";
		},
		{
			first = "Способ установки";
			second = "Placement method";
		},
		{
			first = "Справа";
			second = "On the right";
		},
		{
			first = "Спрайт";
			second = "Sprite";
		},
		{
			first = "Спрайты";
			second = "Sprites";
		},
		{
			first = "Спрайты для очереди";
			second = "Sprites fo queue";
		},
		{
			first = "Спрятать кнопку";
			second = "Hide button";
		},
		{
			first = "Спрятать кнопку жестко";
			second = "Hide button rigidly";
		},
		{
			first = "Спрятать кнопку мягко";
			second = "Hide button softly";
		},
		{
			first = "Спускаться с высоты";
			second = "Descent from Height";
		},
		{
			first = "Сражения";
			second = "Battle";
		},
		{
			first = "Средние";
			second = "Medium";
		},
		{
			first = "Средние декорации";
			second = "Medium decorations";
		},
		{
			first = "Средний";
			second = "Medium";
		},
		{
			first = "Ставить на воду";
			second = "Place on the water";
		},
		{
			first = "Ставить на землю";
			second = "Place on the ground";
		},
		{
			first = "Стадность";
			second = "Herd";
		},
		{
			first = "Становится прозрачным";
			second = "Becomes transparent";
		},
		{
			first = "Становится прозрачным если позади юнит";
			second = "Becomes transparent in a unit is behind it";
		},
		{
			first = "Старая модель освещения";
			second = "Ols lighting model";
		},
		{
			first = "Стартовая точка";
			second = "Start Point";
		},
		{
			first = "Статус";
			second = "Status";
		},
		{
			first = "Стационарная гаубица";
			second = "Stationery Howitzer gun";
		},
		{
			first = "Стационарная лазерная пушка";
			second = "Stationery Lazer gun";
		},
		{
			first = "Стационарная ракетная пушка";
			second = "Stationery Rocket gun";
		},
		{
			first = "Стационарная установка для вызова скверны в заданной точке";
			second = "Stationery unit, summoning Scourge in preset spot";
		},
		{
			first = "Стационарная установка для запуска баллистической ракеты";
			second = "Stationery ballistic missile launcher";
		},
		{
			first = "Стационарная установка против подземных юнитов";
			second = "Stationery underground turret";
		},
		{
			first = "Стая";
			second = "Swarm";
		},
		{
			first = "Стерка";
			second = "Eraser";
		},
		{
			first = "Стоимость";
			second = "Cost";
		},
		{
			first = "Стоимость апгрейда";
			second = "Upgrade cost";
		},
		{
			first = "Стоимость в секунду";
			second = "Cost per second";
		},
		{
			first = "Стоимость захвата в секунду";
			second = "Capture cost per second";
		},
		{
			first = "Стоимость начального заказа";
			second = "Initial order cost";
		},
		{
			first = "Стоимость начального заказа здания";
			second = "Initial building order cost";
		},
		{
			first = "Стоимость производства";
			second = "Production cost";
		},
		{
			first = "Стоимость производства (Лок)";
			second = "Production cost (Lock)";
		},
		{
			first = "Стоимость строительства";
			second = "Construction cost";
		},
		{
			first = "Сторона";
			second = "Side";
		},
		{
			first = "Стоять";
			second = "Stand";
		},
		{
			first = "Стоять (здания, предметы - по параметру)";
			second = "Stand (buildings, items - according to parameter)";
		},
		{
			first = "Стоять в неглубокой воде (здания, предметы - по параметру)";
			second = "Stand in shallow water (buildings, items - according to parameter)";
		},
		{
			first = "Стоять и атаковать";
			second = "Stand and attack";
		},
		{
			first = "Стоять и атаковать военные цели";
			second = "Stand and attack military trgets";
		},
		{
			first = "Стоять и атаковать здания";
			second = "Stand and attack buildings";
		},
		{
			first = "Стоять и не атаковать";
			second = "Stand and do not attack";
		},
		{
			first = "Стоять при плавании (юниты - по параметру)";
			second = "Stand when swimming (units - according to parameter)";
		},
		{
			first = "Стоять с полным ресурсом";
			second = "Stand with full resource";
		},
		{
			first = "Стоящие спрайты";
			second = "Standing sprites";
		},
		{
			first = "Стратегия зарядки";
			second = "Charge strategy";
		},
		{
			first = "Стратегия установки";
			second = "Assembling strategy";
		},
		{
			first = "Стрейфер";
			second = "Strafer";
		},
		{
			first = "Стрельба оружием";
			second = "Shooting";
		},
		{
			first = "Стрелять";
			second = "Fire";
		},
		{
			first = "Стрелять на бегу";
			second = "Fire running";
		},
		{
			first = "Стрелять на ходу";
			second = "Fire walking";
		},
		{
			first = "Стрелять пока нажата кнопка";
			second = "Fire while button is pressed";
		},
		{
			first = "Строение-бомба";
			second = "Structure - Bomb";
		},
		{
			first = "Строитель";
			second = "Builder";
		},
		{
			first = "Строительство зданий";
			second = "Building construction";
		},
		{
			first = "Строительство здания";
			second = "Building construction";
		},
		{
			first = "Строится сам";
			second = "Builds itself";
		},
		{
			first = "Строить (для юнитов)";
			second = "Build (for units)";
		},
		{
			first = "Строить(ся)";
			second = "Build";
		},
		{
			first = "Строить(ся) (здания - по параметру)";
			second = "Build (buildings - according to parameter)";
		},
		{
			first = "Строиться (для зданий)";
			second = "Build (for buildings)";
		},
		{
			first = "Строящиеся";
			second = "Building";
		},
		{
			first = "Сценарий игры";
			second = "Game Scenario";
		},
		{
			first = "Сценарий карты";
			second = "Map Scenario";
		},
		{
			first = "ТВ атаковать";
			second = "CS attack";
		},
		{
			first = "ТВ бриг-прораб во фрейм";
			second = "CS Briadier-Buildmaster back to Frame";
		},
		{
			first = "ТВ бриг-прораб замена";
			second = "CS Briadier-Buildmaster exchange";
		},
		{
			first = "ТВ вернуться на базу";
			second = "CS back to base";
		},
		{
			first = "ТВ включить здание";
			second = "CS building on";
		},
		{
			first = "ТВ всем во фрейм";
			second = "CS everybody back to frame";
		},
		{
			first = "ТВ выключить здание";
			second = "CS Building off";
		},
		{
			first = "ТВ двигаться";
			second = "CS move";
		},
		{
			first = "ТВ зарядка";
			second = "CS charge";
		},
		{
			first = "ТВ инсталлировать-деинсталлировать фрейм";
			second = "CS install-deinstall frame";
		},
		{
			first = "ТВ кнопка телепортатации фрейма";
			second = "CS frame teleportation Button";
		},
		{
			first = "ТВ оффенс-дефенс";
			second = "CS offence-defense";
		},
		{
			first = "ТВ патрулировать";
			second = "CS patrol";
		},
		{
			first = "ТВ поле";
			second = "CS field";
		},
		{
			first = "ТВ продать";
			second = "CS sell";
		},
		{
			first = "ТВ стоп";
			second = "CS stop";
		},
		{
			first = "ТВ стоп спец. пушек";
			second = "CS stop special guns";
		},
		{
			first = "ТВ чинить";
			second = "CS repair";
		},
		{
			first = "Тварь";
			second = "Creature";
		},
		{
			first = "Твистер";
			second = "Twister";
		},
		{
			first = "Текстура";
			second = "Texture";
		},
		{
			first = "Текстура 1";
			second = "Texture 1";
		},
		{
			first = "Текстура 2";
			second = "Texture 2";
		},
		{
			first = "Текстура Cолнца";
			second = "Sun texture";
		},
		{
			first = "Текстура Дождя";
			second = "Rain texture";
		},
		{
			first = "Текстура Луны";
			second = "Moon texture";
		},
		{
			first = "Текстура для движущихся спрайтов";
			second = "Moving sprites texture";
		},
		{
			first = "Текстура для искажения";
			second = "Distortion texture";
		},
		{
			first = "Текстура для стоящих спрайтов";
			second = "Standing sprites texture";
		},
		{
			first = "Текстура листьев (для всех моделей)";
			second = "Leaves texture (for all models)";
		},
		{
			first = "Текстура окружающей земли";
			second = "Surrounding surface texture";
		},
		{
			first = "Текстура пузырьков от источников воды";
			second = "Bubbles texture from water sources";
		},
		{
			first = "Текстура пузырьков от свободных источников";
			second = "Bubbles texture from free sources";
		},
		{
			first = "Текстура снега";
			second = "Snow texture";
		},
		{
			first = "Текстура теней облаков";
			second = "Cloud's shadows texture";
		},
		{
			first = "Текстура травы - 1";
			second = "Grass Texture - 1";
		},
		{
			first = "Текстура травы - 2";
			second = "Grass Texture - 2";
		},
		{
			first = "Текстура травы - 3";
			second = "Grass Texture - 3";
		},
		{
			first = "Текстура травы - 4";
			second = "Grass Texture - 4";
		},
		{
			first = "Текстура травы - 5";
			second = "Grass Texture - 5";
		},
		{
			first = "Текстура травы - 6";
			second = "Grass Texture - 6";
		},
		{
			first = "Текстура травы - 7";
			second = "Grass Texture - 7";
		},
		{
			first = "Текстуры";
			second = "Textures";
		},
		{
			first = "Тектура";
			second = "Texture";
		},
		{
			first = "Текущее состояние";
			second = "Current condition";
		},
		{
			first = "Текущие настройки";
			second = "Current settings";
		},
		{
			first = "Текущие параметры";
			second = "Current parameters";
		},
		{
			first = "Телепорт";
			second = "Teleport";
		},
		{
			first = "Телепортация";
			second = "Teleportation";
		},
		{
			first = "Телепортируемые юниты";
			second = "Teleporting Units";
		},
		{
			first = "Телепортируется";
			second = "Teleports";
		},
		{
			first = "ТерТулзеры";
			second = "TerToolzers";
		},
		{
			first = "Терять цель при выходе из радиуса видимости";
			second = "Discard target on exiting visible radius";
		},
		{
			first = "Техники";
			second = "Technicians";
		},
		{
			first = "Техников при базовой";
			second = "technicians with basic";
		},
		{
			first = "Тип";
			second = "Type";
		},
		{
			first = "Тип арифметики";
			second = "Arithmetic type";
		},
		{
			first = "Тип арифметики по созданию";
			second = "Arithmetic type on creation";
		},
		{
			first = "Тип ветра";
			second = "Wind type";
		},
		{
			first = "Тип взаимодействия";
			second = "Interaction type";
		},
		{
			first = "Тип взаимодействия дерева";
			second = "Type of interaction for tree";
		},
		{
			first = "Тип взаимодействия дерева (забора)";
			second = "Tree (fence) interaction type";
		},
		{
			first = "Тип взрыва";
			second = "Explosion type";
		},
		{
			first = "Тип внешней среды";
			second = "Environment type";
		},
		{
			first = "Тип воздействия";
			second = "Influence type";
		},
		{
			first = "Тип главного здания(й)";
			second = "Type of the main bilding(s)";
		},
		{
			first = "Тип движения";
			second = "Movement types";
		},
		{
			first = "Тип завершения";
			second = "Finishing type";
		},
		{
			first = "Тип здания";
			second = "Building type";
		},
		{
			first = "Тип здания_1";
			second = "Building_1 type";
		},
		{
			first = "Тип здания_2";
			second = "Building_2 type";
		},
		{
			first = "Тип значения";
			second = "Value type";
		},
		{
			first = "Тип игрока";
			second = "Player Type";
		},
		{
			first = "Тип источника";
			second = "Source type";
		},
		{
			first = "Тип курсора";
			second = "Cursor type";
		},
		{
			first = "Тип обозначения";
			second = "Definition type";
		},
		{
			first = "Тип оружия";
			second = "Weapon Type";
		},
		{
			first = "Тип осадков";
			second = "Fallout type";
		},
		{
			first = "Тип отключения";
			second = "Disconection type";
		},
		{
			first = "Тип охраняемого юнита";
			second = "Guarded unit type";
		},
		{
			first = "Тип параметра";
			second = "Parameter Type";
		},
		{
			first = "Тип поверхности";
			second = "Surface type";
		},
		{
			first = "Тип помещаемого юнита";
			second = "Handling Unit Type";
		},
		{
			first = "Тип предмета";
			second = "Object type";
		},
		{
			first = "Тип пушки";
			second = "Gun type";
		},
		{
			first = "Тип ресурса";
			second = "Resource type";
		},
		{
			first = "Тип сейва";
			second = "Save Type";
		},
		{
			first = "Тип сквада";
			second = "Squad type";
		},
		{
			first = "Тип смерти";
			second = "Death type";
		},
		{
			first = "Тип снаряда";
			second = "Missile type";
		},
		{
			first = "Тип строения";
			second = "Building type";
		},
		{
			first = "Тип телепорта";
			second = "Teleport type";
		},
		{
			first = "Тип тени";
			second = "Shadow type";
		},
		{
			first = "Тип транспорта";
			second = "Transport Type";
		},
		{
			first = "Тип транспорта/здания";
			second = "Transport/Building Type";
		},
		{
			first = "Тип фабрики";
			second = "Factory type";
		},
		{
			first = "Тип цели";
			second = "Target type";
		},
		{
			first = "Тип элемента";
			second = "Element type";
		},
		{
			first = "Тип юнита";
			second = "Unit type";
		},
		{
			first = "Тип юнита (после апгрейда)";
			second = "Unit type (after upgrade)";
		},
		{
			first = "Тип юнита в формации";
			second = "Unit type in formation";
		},
		{
			first = "Тип юнита в формации для задания максимального количества юнитов";
			second = "Unit type in formation for creation of a maximum amount of units";
		},
		{
			first = "Тип юнитов";
			second = "Unit type";
		},
		{
			first = "Тип юнитов ('никто' - базовые)";
			second = "Unit type ('nobody' - basic)";
		},
		{
			first = "Типы оружия";
			second = "Weapon types";
		},
		{
			first = "Типы параметров";
			second = "Parameter Type";
		},
		{
			first = "Типы поверхности для взаимодействия";
			second = "Ground type for collision";
		},
		{
			first = "Типы ресурсов";
			second = "Resource type";
		},
		{
			first = "Типы сквадов";
			second = "Squad types";
		},
		{
			first = "Типы снарядов";
			second = "Missile types";
		},
		{
			first = "Типы юнитов";
			second = "Unit types";
		},
		{
			first = "Типы юнитов в формациях";
			second = "Unit typesin formation";
		},
		{
			first = "Толстая";
			second = "Wide";
		},
		{
			first = "Только взявший";
			second = "Just picked up";
		},
		{
			first = "Только если объект достроен";
			second = "Only if the object is finished";
		},
		{
			first = "Только когда атакуют ядро";
			second = "Only if the Core is under attack";
		},
		{
			first = "Только один объект в селекте";
			second = "Only one object is selected";
		},
		{
			first = "Только по разрешенной";
			second = "Across allowed only";
		},
		{
			first = "Тонкая";
			second = "Thin";
		},
		{
			first = "Точки dummy";
			second = "Dummy points";
		},
		{
			first = "Трава";
			second = "Grass";
		},
		{
			first = "Транслятор";
			second = "Translator";
		},
		{
			first = "Трансмиттер";
			second = "Transmitter";
		},
		{
			first = "Транспорт";
			second = "Transport";
		},
		{
			first = "Транспортная вместимость";
			second = "Transport capacity";
		},
		{
			first = "Требования для производительности ресурса";
			second = "Resource productivity requirements";
		},
		{
			first = "Требуемые для работы строения";
			second = "Structures required for work";
		},
		{
			first = "Треугольники";
			second = "Triangles";
		},
		{
			first = "Трещины";
			second = "Crackles";
		},
		{
			first = "Триггера";
			second = "Triggers";
		},
		{
			first = "Триггера Player0";
			second = "Player0 triggers";
		},
		{
			first = "Триггера Player1";
			second = "Player1 triggers";
		},
		{
			first = "Триггера World";
			second = "World triggers";
		},
		{
			first = "Триггера для баттла на выбор";
			second = "Selection of triggers for the battle mode";
		},
		{
			first = "Триггера для сингла";
			second = "Selection of triggers for the single play mode";
		},
		{
			first = "Труп";
			second = "Corpse";
		},
		{
			first = "Тряска Камеры";
			second = "camera shaking";
		},
		{
			first = "Тулзер";
			second = "Toolser";
		},
		{
			first = "Тулзер выравнивания";
			second = "Flattening toolser";
		},
		{
			first = "Тулзер отмены ровняния и рвов";
			second = "Undo flattening and abyss toolser";
		},
		{
			first = "Тулзер рвов";
			second = "Abyss toolser";
		},
		{
			first = "Тулзера";
			second = "Toolsers";
		},
		{
			first = "Туман войны";
			second = "Fog of war";
		},
		{
			first = "Тяжелые";
			second = "Heavy";
		},
		{
			first = "Тяжелый";
			second = "Heavy";
		},
		{
			first = "Убей себя";
			second = "Kill yourself";
		},
		{
			first = "Убивать хозяина";
			second = "Kill the owner";
		},
		{
			first = "Убить выделенных юнитов";
			second = "Kill selected units";
		},
		{
			first = "Увеличение значения";
			second = "Increase value";
		},
		{
			first = "Угловая скорость ветра";
			second = "Angular speed of wind";
		},
		{
			first = "Угол направления ветра";
			second = "Wind direction angle";
		},
		{
			first = "Угол поворота";
			second = "Rotation angle";
		},
		{
			first = "Угол поворота ( 5 - минимальное значение для наземных )";
			second = "Rotation angle (5 is the minimal value for groung objects)";
		},
		{
			first = "Угол поворота миникарты";
			second = "Rotation angle for minimap";
		},
		{
			first = "Угол при котором разрушать здание";
			second = "Angle Triggering Destruction of a Building";
		},
		{
			first = "Угол разлета";
			second = "Splash angle";
		},
		{
			first = "Удаление зоны непроходимости";
			second = "Erase non-movement zone";
		},
		{
			first = "Удаление льда";
			second = "Erase ice";
		},
		{
			first = "Удалить";
			second = "Remove";
		},
		{
			first = "Удалить заказанного юнита из сквада";
			second = "Delete ordered unit from squad";
		},
		{
			first = "Удалить из списка";
			second = "Delete from the list";
		},
		{
			first = "Удалить некопаемую зону";
			second = "Delete non-digging zone";
		},
		{
			first = "Удалить снаряд";
			second = "Delete projectile";
		},
		{
			first = "Уже созданные";
			second = "Already created";
		},
		{
			first = "Уже созданные данного типа";
			second = "Already created of this type";
		},
		{
			first = "Узел привязки";
			second = "Binding node";
		},
		{
			first = "Указанный объект";
			second = "Specified object";
		},
		{
			first = "Уклоняться от удара";
			second = "Duck";
		},
		{
			first = "Уменьшение значения";
			second = "Decrease value";
		},
		{
			first = "Уничтожать объект после отработки тулзера";
			second = "Destroy object after toolser handling";
		},
		{
			first = "Управление";
			second = "Control";
		},
		{
			first = "Уровень";
			second = "Level";
		},
		{
			first = "Уровень воды";
			second = "Water Level";
		},
		{
			first = "Уровень сложности";
			second = "Difficulty level";
		},
		{
			first = "Уровень юнита";
			second = "Unit Level";
		},
		{
			first = "Уровень юнита больше либо равен";
			second = "Unit level equal or more";
		},
		{
			first = "Уровни развития";
			second = "Evlution levels";
		},
		{
			first = "Уровни сложности";
			second = "Levels of difficulty";
		},
		{
			first = "Усилитель";
			second = "Amplifier";
		},
		{
			first = "Ускорение анимации, %";
			second = "Animation acceration";
		},
		{
			first = "Ускорить игру";
			second = "Speed up the game";
		},
		{
			first = "Условие";
			second = "Condition";
		},
		{
			first = "Условие атаки";
			second = "Attack condition";
		},
		{
			first = "Условие на завершение миссии";
			second = "Mission finishing condition";
		},
		{
			first = "Условие продажи";
			second = "Selling requirement";
		},
		{
			first = "Условие сравнения";
			second = "Comparison condition";
		},
		{
			first = "Условия";
			second = "Conditions";
		},
		{
			first = "Успешное выполнение";
			second = "Completion successful";
		},
		{
			first = "Устанавливать на воду с определенной глубиной (и глубже)";
			second = "Place in the water to defined depth (and deeper)";
		},
		{
			first = "Устанавливать на поверхность";
			second = "Place ob the surface";
		},
		{
			first = "Устанавливать на поверхность или воду";
			second = "Place on the surface or in the water";
		},
		{
			first = "Устанавливать на поверхность с дельтой";
			second = "Place on the surface with delta";
		},
		{
			first = "Устанавливать на поверхность с дельтой на определенной высоте";
			second = "Place on the surface with delta on the defined height";
		},
		{
			first = "Устанавливать на поверхность с дельтой, здания остаются под водой";
			second = "Place on the Surface with Delta, Buildings Stay under Water";
		},
		{
			first = "Устанавливать на поверхность, можно под водой";
			second = "Place on the surface, possibly under water";
		},
		{
			first = "Устанавливать случайную фазу";
			second = "Define a random phase";
		},
		{
			first = "Установить время суток";
			second = "Define daytime";
		},
		{
			first = "Установить день (выключить фонари)";
			second = "Establish day (disable lamps)";
		},
		{
			first = "Установить камеру на объект";
			second = "Place camera on the object";
		},
		{
			first = "Установить камеру на сквад";
			second = "Focus camera on squad";
		},
		{
			first = "Установить курсор";
			second = "define cursor";
		},
		{
			first = "Установить направление ветра";
			second = "Define wind direction";
		},
		{
			first = "Установить параметры осадков";
			second = "Define fallout parameters";
		},
		{
			first = "Установить слежение";
			second = "set tracking";
		},
		{
			first = "Установить текущую миссию";
			second = "Define Current Mission";
		},
		{
			first = "Установить туман";
			second = "Define fog";
		},
		{
			first = "Установить уровень воды";
			second = "Define Water Level";
		},
		{
			first = "Установить формацию скваду";
			second = "Define squad formation";
		},
		{
			first = "Установить цвет воды";
			second = "DEfine water color";
		},
		{
			first = "Установка Камеры";
			second = "Define camera";
		},
		{
			first = "Установка здания";
			second = "Building placement";
		},
		{
			first = "Установка на поверхность";
			second = "Place on the surface";
		},
		{
			first = "Установка целочисленной переменной";
			second = "Definition of a numeric variable";
		},
		{
			first = "Фаза [0,1]";
			second = "Phase [0..1]";
		},
		{
			first = "Фаза(-90/0/+90)";
			second = "Phase (-90/0/+90)";
		},
		{
			first = "Фантом";
			second = "Fantom";
		},
		{
			first = "Физика";
			second = "Physics";
		},
		{
			first = "Флажок точки сбора производимых юнитов";
			second = "Flag for gathering spot of produceed units";
		},
		{
			first = "Формации";
			second = "Formations";
		},
		{
			first = "Формула";
			second = "Formula";
		},
		{
			first = "Формулы свойств юнитов";
			second = "Unit properties formula";
		},
		{
			first = "Фрейм";
			second = "Frame";
		},
		{
			first = "Фундамент здания";
			second = "Building foundation";
		},
		{
			first = "ХАОС: Bump текстура";
			second = "Chaos: Bump texture";
		},
		{
			first = "ХАОС: Текстура 1";
			second = "Chaos: Texture 1";
		},
		{
			first = "ХАОС: Текстура 2";
			second = "Chaos: Texture 2";
		},
		{
			first = "Хаос";
			second = "Chaos";
		},
		{
			first = "Хорошее";
			second = "High";
		},
		{
			first = "Хотя бы один";
			second = "At least one";
		},
		{
			first = "Цвет";
			second = "colour";
		},
		{
			first = "Цвет 1";
			second = "Color 1";
		},
		{
			first = "Цвет 2";
			second = "Color 2";
		},
		{
			first = "Цвет глубокой воды";
			second = "Deep water colour";
		},
		{
			first = "Цвет дождя";
			second = "Rain colour";
		},
		{
			first = "Цвет земли за границей мира";
			second = "Ground colour beyond world borders";
		},
		{
			first = "Цвет зеропласта";
			second = "Zero-layer colour";
		},
		{
			first = "Цвет купола";
			second = "Dome color";
		},
		{
			first = "Цвет неба";
			second = "Color of the sky";
		},
		{
			first = "Цвет неба (днем)";
			second = "Sky colour (daytime)";
		},
		{
			first = "Цвет неба (ночью)";
			second = "Sky colour (nighttime)";
		},
		{
			first = "Цвет неглубокой воды";
			second = "Shallow water colour";
		},
		{
			first = "Цвет окружности";
			second = "Circle color";
		},
		{
			first = "Цвет отраженного неба в воде";
			second = "Color of the sky reflection on the water";
		},
		{
			first = "Цвет отраженного неба в воде (днем)";
			second = "Color of the sky reflecting in the water (day)";
		},
		{
			first = "Цвет отраженного неба в воде (ночью)";
			second = "Color of the sky reflecting in the water (night)";
		},
		{
			first = "Цвет подводного эффекта";
			second = "Underwater effect's color";
		},
		{
			first = "Цвет подложки";
			second = "Substrate colour";
		},
		{
			first = "Цвет при максимуме";
			second = "Color on maximum";
		},
		{
			first = "Цвет при минимуме";
			second = "Color on minimum";
		},
		{
			first = "Цвет рамки";
			second = "Border color";
		},
		{
			first = "Цвет рамки выделения";
			second = "Select borer color";
		},
		{
			first = "Цвет рамки камеры на миникарте";
			second = "Camera border color on the minimap";
		},
		{
			first = "Цвет рамки камеры на мире";
			second = "Camera border color on the map";
		},
		{
			first = "Цвет силуэтов";
			second = "Silhouette color";
		},
		{
			first = "Цвет солнца";
			second = "Color of the sun";
		},
		{
			first = "Цвет солнца (днём)";
			second = "Sun colour (daytime)";
		},
		{
			first = "Цвет солнца (ночью)";
			second = "Sun colour (nighttime)";
		},
		{
			first = "Цвет текста";
			second = "Text Color";
		},
		{
			first = "Цвет текста задач";
			second = "Text colour for tasks";
		},
		{
			first = "Цвет теней облаков";
			second = "Cloud's shadows colour";
		},
		{
			first = "Цвет тумана";
			second = "Fog colour";
		},
		{
			first = "Цвет тумана войны";
			second = "Fog of War color";
		},
		{
			first = "Цвета";
			second = "coloures";
		},
		{
			first = "Цвета игроков";
			second = "Players colores";
		},
		{
			first = "Цвета игроков под водой";
			second = "Player colours under water";
		},
		{
			first = "Цвета силуэтов";
			second = "Silhouette color";
		},
		{
			first = "Целиться";
			second = "Aim";
		},
		{
			first = "Целиться на бегу";
			second = "Aim while running";
		},
		{
			first = "Целиться на ходу";
			second = "Aim while walking";
		},
		{
			first = "Цепочка триггера";
			second = "Trigger chain";
		},
		{
			first = "Цептор";
			second = "Ceptor";
		},
		{
			first = "Частота мерцания";
			second = "Blinking periodicity";
		},
		{
			first = "Человекоподобный юнит";
			second = "Human unit";
		},
		{
			first = "Число отскоков";
			second = "Number of Bounces";
		},
		{
			first = "Число, учитываемое в максимальном количестве юнитов";
			second = "Number, Considiered in the Unit Cap";
		},
		{
			first = "ШЛЕЙФ : Текстура кругов";
			second = "Train: circles texture";
		},
		{
			first = "ШЛЕЙФ : Текстура пены";
			second = "Train: foam texture";
		},
		{
			first = "Шевелиться";
			second = "Move";
		},
		{
			first = "Ширина";
			second = "Width";
		},
		{
			first = "Широта местности (0-экватор, 90-полюс)";
			second = "Width of area (0-equator, 90-pole)";
		},
		{
			first = "Шрифт";
			second = "Font";
		},
		{
			first = "Штаб";
			second = "Headquarters";
		},
		{
			first = "Штрих пунктир";
			second = "Dot-and-dash line";
		},
		{
			first = "Шум";
			second = "Noise";
		},
		{
			first = "Экран";
			second = "Screen";
		},
		{
			first = "Элементы неба";
			second = "Heaven elements";
		},
		{
			first = "Эмблема";
			second = "Logo";
		},
		{
			first = "Эмблемы игроков";
			second = "Players logos";
		},
		{
			first = "Энергетическая модель";
			second = "Energy model";
		},
		{
			first = "Энергия";
			second = "Energy";
		},
		{
			first = "Энергия на перемещение";
			second = "Energy for movement";
		},
		{
			first = "Энергия на производство";
			second = "Energy for production";
		},
		{
			first = "Эффект";
			second = "Effect";
		},
		{
			first = "Эффект брызг на воде";
			second = "water splash effect";
		},
		{
			first = "Эффект в режиме ожидания";
			second = "Effect in the standby mode";
		},
		{
			first = "Эффект для осколков";
			second = "Debris effect";
		},
		{
			first = "Эффект на трупе";
			second = "Effect on a corpse";
		},
		{
			first = "Эффект над юнитом при AI";
			second = "Effect over the unit in case of AI";
		},
		{
			first = "Эффект пены";
			second = "Foam effect";
		},
		{
			first = "Эффект при получении уровня";
			second = "Level-up effect";
		},
		{
			first = "Эффект при попадании в защитное поле";
			second = "Effect on hitting the defensive field";
		},
		{
			first = "Эффект свечения";
			second = "Glowing effect";
		},
		{
			first = "Эффект уровня";
			second = "Level effect";
		},
		{
			first = "Эффекты";
			second = "Effects";
		},
		{
			first = "Эффекты по умолчанию";
			second = "Default Effects";
		},
		{
			first = "Эффекты/Зоны";
			second = "Effects/Zones";
		},
		{
			first = "Юнит";
			second = "Unit";
		},
		{
			first = "Юнит может менять режим видимости";
			second = "Unit can change visibility mode";
		},
		{
			first = "Юнит на определенном расстоянии от здания";
			second = "Unit on a defined distance from a building";
		},
		{
			first = "Юнит невидим";
			second = "Unit is invisible";
		},
		{
			first = "Юнит определенного типа (контекстное)";
			second = "unit of the defined type (context)";
		},
		{
			first = "Юнит, получающий арифметику";
			second = "Unit receiving arithmetics";
		},
		{
			first = "Юниты";
			second = "Units";
		},
		{
			first = "Юниты всех типов";
			second = "Units of all types";
		},
		{
			first = "Юниты созданные или новые";
			second = "Created or new units";
		},
		{
			first = "Юниты того же типа, что и юнит, получающий арифметику";
			second = "Units of the same type as the receiving arithmetics unit";
		},
		{
			first = "Юниты, на которые влияет";
			second = "Affected units";
		},
		{
			first = "Юниты/Здания";
			second = "Units/Buildings";
		},
		{
			first = "Я";
			second = "I";
		},
		{
			first = "Ядра";
			second = "Cores";
		},
		{
			first = "Ядро";
			second = "Core";
		},
		{
			first = "Язык";
			second = "Language";
		},
		{
			first = "Якори";
			second = "Anchors";
		},
		{
			first = "Якорь";
			second = "Anchor";
		},
		{
			first = "автоматически выбирать цель";
			second = "auto-select target";
		},
		{
			first = "автоматически удалять источник после затухания";
			second = "automatically delete source after fading";
		},
		{
			first = "активно";
			second = "active";
		},
		{
			first = "амплитуда";
			second = "amplitude";
		},
		{
			first = "анизотропная фильтрация";
			second = "anisotropic filter";
		},
		{
			first = "анимационная цепочка";
			second = "anymational cycle";
		},
		{
			first = "анимация";
			second = "animation";
		},
		{
			first = "апгрейд выделенного юнита";
			second = "selected unit upgrade";
		},
		{
			first = "апгрейд до бомб. 2 уровня";
			second = "upgrade bomb lab to the 2 level";
		},
		{
			first = "апгрейд до бомб. 3 уровня";
			second = "upgrade bomb lab to the 3 level";
		},
		{
			first = "апгрейд до возврат. 2 уровня";
			second = "upgrade harkback lab to the 2 level";
		},
		{
			first = "апгрейд до возврат. 3 уровня";
			second = "upgrade harkback lab to the 3 level";
		},
		{
			first = "апгрейд до импер. 2 уровня";
			second = "upgrade empire lab to the 2 level";
		},
		{
			first = "апгрейд до импер. 3 уровня";
			second = "upgrade empire lab to the 3 level";
		},
		{
			first = "апгрейд до исход. 2 уровня";
			second = "upgrade exsodus lab to the 2 level";
		},
		{
			first = "апгрейд до исход. 3 уровня";
			second = "upgrade exsodus lab to the 3 level";
		},
		{
			first = "апгрейд до лазер. 2 уровня";
			second = "upgrade laser lab to the 2 level";
		},
		{
			first = "апгрейд до лазер. 3 уровня";
			second = "upgrade laser lab to the 3 level";
		},
		{
			first = "апгрейд до летной 2 уровня";
			second = "upgrade antigravity lab to the 2 level";
		},
		{
			first = "апгрейд до подзем. 2 уровня";
			second = "upgrade subterra lab to the 2 level";
		},
		{
			first = "апгрейд до ракет. 2 уровня";
			second = "upgrade rocket lab to the 2 level";
		},
		{
			first = "апгрейд до ракет. 3 уровня";
			second = "upgrade rocket lab to the 3 level";
		},
		{
			first = "апгрейд закончен";
			second = "upgrade complete";
		},
		{
			first = "апгрейд омеги";
			second = "omega upgrade";
		},
		{
			first = "апгрейды";
			second = "upgrades";
		},
		{
			first = "атака";
			second = "attack";
		},
		{
			first = "атака юнита";
			second = "unit attack";
		},
		{
			first = "атака юнита в зоне";
			second = "unit attack within area";
		},
		{
			first = "атаковать";
			second = "attack";
		},
		{
			first = "атаковать врага";
			second = "attack enemy";
		},
		{
			first = "атаковать отдельной молнией";
			second = "attack with a single lightning";
		},
		{
			first = "атаковать своего";
			second = "attack ally";
		},
		{
			first = "атаковать типом ('никто' - базовые)";
			second = "attack with type ('nobody' - basic)";
		},
		{
			first = "атакуемые классы юнитов";
			second = "attackable unit classes";
		},
		{
			first = "атакуемые цели";
			second = "attackable targets";
		},
		{
			first = "атакуемые юниты";
			second = "attackable units";
		},
		{
			first = "атакуемый класс юнитов";
			second = "attackable unit class";
		},
		{
			first = "атакующий класс юнитов";
			second = "attacking unit class";
		},
		{
			first = "библиотека эффектов";
			second = "effects library";
		},
		{
			first = "ближнего боя";
			second = "close combat";
		},
		{
			first = "ближняя граница подводного тумана";
			second = "close border of the underwater fog";
		},
		{
			first = "бордюр по бокам для скрола мышью (%)";
			second = "border on the sides for mouse scrolling (%)";
		},
		{
			first = "бордюр сверху для скрола мышью (%)";
			second = "border upwards for mouse scrolling (%)";
		},
		{
			first = "бордюр снизу для скрола мышью (%)";
			second = "border below for mouse scrolling (%)";
		},
		{
			first = "бьющее молнией оружие";
			second = "lighning weapon";
		},
		{
			first = "в воздухе";
			second = "in the air";
		},
		{
			first = "вдавливать по битмапу";
			second = "grind according to bitmap";
		},
		{
			first = "вертикальный угол";
			second = "vertical angle";
		},
		{
			first = "взрыв";
			second = "explosion";
		},
		{
			first = "визуализация точки прицеливания";
			second = "visualization of the point of aim";
		},
		{
			first = "включается в момент начала движения";
			second = "switches on when movement starts";
		},
		{
			first = "включается в момент остановки";
			second = "switches on when movement ends";
		},
		{
			first = "включается во время движения";
			second = "switches on with movement";
		},
		{
			first = "включать ночью";
			second = "acivate at night";
		},
		{
			first = "включать только на льду";
			second = "enable only on ice";
		},
		{
			first = "включено";
			second = "enabled";
		},
		{
			first = "включить бамп";
			second = "enable bump";
		},
		{
			first = "включить звуки";
			second = "enable sound";
		},
		{
			first = "включить звуковые сообщения";
			second = "enable sound messages";
		},
		{
			first = "включить музыку";
			second = "enable music";
		},
		{
			first = "включить ограничение камеры";
			second = "enable camera limitations";
		},
		{
			first = "включить силуэты";
			second = "enable silhouettes";
		},
		{
			first = "включить тени";
			second = "enabls shadows";
		},
		{
			first = "включить траву";
			second = "enable grass";
		},
		{
			first = "включить эффект свечения";
			second = "enable glowing effect";
		},
		{
			first = "вода";
			second = "water";
		},
		{
			first = "воздействие на цель";
			second = "target influence";
		},
		{
			first = "воздействие на цель при попадании";
			second = "target influence on hit";
		},
		{
			first = "воздействие на юниты";
			second = "unit influence";
		},
		{
			first = "воздействие от ветра за один квант";
			second = "wind influence per quant";
		},
		{
			first = "воздействие от воды";
			second = "water influence";
		},
		{
			first = "воздействие от земли";
			second = "ground effect";
		},
		{
			first = "воздействие от лавы";
			second = "lava influence";
		},
		{
			first = "воздействие от льда";
			second = "ice effect";
		},
		{
			first = "воздушные цели";
			second = "air targets";
		},
		{
			first = "вокруг себя";
			second = "around";
		},
		{
			first = "вокруг цели";
			second = "around target";
		},
		{
			first = "вращение карты";
			second = "map rotation";
		},
		{
			first = "вращение карты при прямом управлении";
			second = "map rotation by direct control";
		},
		{
			first = "время возвращения в исходное состояние";
			second = "relaxation time";
		},
		{
			first = "время генерации";
			second = "generation time";
		},
		{
			first = "время действия";
			second = "influence time";
		},
		{
			first = "время жизни в секундах";
			second = "lifetime in seconds";
		},
		{
			first = "время жизни на миникарте";
			second = "lifetime on the minimap";
		},
		{
			first = "время затухания";
			second = "fading time";
		},
		{
			first = "время одного выстрела";
			second = "time for one shot";
		},
		{
			first = "время перезарядки";
			second = "recharge time";
		},
		{
			first = "время показа";
			second = "period of display";
		},
		{
			first = "время распространения";
			second = "spreading duration";
		},
		{
			first = "время стрельбы";
			second = "firing time";
		},
		{
			first = "время фиксации наведения после стрельбы";
			second = "time for target locking after shooting";
		},
		{
			first = "всегда";
			second = "always";
		},
		{
			first = "вспучивать по битмапу";
			second = "inflate according to bitmap";
		},
		{
			first = "вторая стрелка регулятора";
			second = "regulator's second pointer";
		},
		{
			first = "выбор точки для перемещения";
			second = "movement point selection";
		},
		{
			first = "выбор цели для атаки";
			second = "attack target selection";
		},
		{
			first = "выйти из игры";
			second = "quit the game";
		},
		{
			first = "выключать в воде";
			second = "disable in the water";
		},
		{
			first = "выключать в лаве";
			second = "disable in lava";
		},
		{
			first = "выключать на льду";
			second = "disable on ice";
		},
		{
			first = "выключать постоянную молнию при входе врага";
			second = "disable constant lightning on enemy's coming";
		},
		{
			first = "выключать постоянный эффект молнии при атаке";
			second = "disable permanent lightning effect on attack";
		},
		{
			first = "выключать удары по зоне при входе врага";
			second = "disable area hits on enemy entrance";
		},
		{
			first = "выравнивание";
			second = "align";
		},
		{
			first = "выравнивание текста";
			second = "text alignment";
		},
		{
			first = "высота";
			second = "height";
		},
		{
			first = "высота камеры над землей по умолчанию";
			second = "default camera height over the map";
		},
		{
			first = "высота купола";
			second = "dome height";
		},
		{
			first = "высота образования";
			second = "formation height";
		},
		{
			first = "высота образования молний";
			second = "lightning formation height";
		},
		{
			first = "высота поднятия";
			second = "height of ascension";
		},
		{
			first = "высота появления";
			second = "height of appearance";
		},
		{
			first = "высота строки";
			second = "Line height";
		},
		{
			first = "высота юнита для вывода значений";
			second = "unit height for display of parametrs";
		},
		{
			first = "гамма";
			second = "gamma";
		},
		{
			first = "генерация объектов";
			second = "objects generation";
		},
		{
			first = "генерировать по радиусу";
			second = "generate round a radius";
		},
		{
			first = "гео-волна";
			second = "geo-wave";
		},
		{
			first = "гео-модель";
			second = "geo-model";
		},
		{
			first = "гео-трещина";
			second = "geo-cracle";
		},
		{
			first = "главное меню";
			second = "main menu";
		},
		{
			first = "глубина";
			second = "depth";
		},
		{
			first = "глубина цвета";
			second = "color depth";
		},
		{
			first = "голосовое сообщение";
			second = "voice message";
		},
		{
			first = "горение";
			second = "burning";
		},
		{
			first = "горизонтальный угол";
			second = "horizontal angle";
		},
		{
			first = "громкость";
			second = "sound volume";
		},
		{
			first = "громкость звуков";
			second = "sound volume";
		},
		{
			first = "громкость звуковых сообщений";
			second = "sound messages volume";
		},
		{
			first = "громкость музыки";
			second = "music level";
		},
		{
			first = "группа кнопок";
			second = "Group of buttons";
		},
		{
			first = "группа оружия";
			second = "weapon group";
		},
		{
			first = "да";
			second = "yes";
		},
		{
			first = "дальнего боя";
			second = "range combat";
		},
		{
			first = "дальность стрельбы";
			second = "attack range";
		},
		{
			first = "дальняя граница подводного тумана";
			second = "far border of the underwater fog";
		},
		{
			first = "двигать за объектом";
			second = "move with the object";
		},
		{
			first = "действующее на зону оружие";
			second = "weapon affecting the zone";
		},
		{
			first = "дет.текстура - Дорога";
			second = "detalized texture - Road";
		},
		{
			first = "дет.текстура - Земля";
			second = "detalized texture - Earth";
		},
		{
			first = "дет.текстура - Камни";
			second = "detalized texture - Stones";
		},
		{
			first = "дет.текстура - Кратер";
			second = "detalized texture - Crater";
		},
		{
			first = "дет.текстура - Песок";
			second = "detalized texture - Sand";
		},
		{
			first = "дет.текстура - Трава";
			second = "detalized texture - Grass";
		},
		{
			first = "дет.текстура - Трещины";
			second = "detalized texture - Crackles";
		},
		{
			first = "дет.текстура по умолчанию";
			second = "detalized texture on default";
		},
		{
			first = "детализированная текстура 0";
			second = "detalized texture 0";
		},
		{
			first = "детализированная текстура 1";
			second = "detalized texture 1";
		},
		{
			first = "детализированная текстура 2";
			second = "detalized texture 2";
		},
		{
			first = "детализированная текстура 3";
			second = "detalized texture 3";
		},
		{
			first = "детализированная текстура 4";
			second = "detalized texture 4";
		},
		{
			first = "детализированная текстура 5";
			second = "detalized texture 5";
		},
		{
			first = "детализированная текстура 6";
			second = "detalized texture 6";
		},
		{
			first = "детализированная текстура 7";
			second = "detalized texture 7";
		},
		{
			first = "детальность текстур";
			second = "texture detalization";
		},
		{
			first = "детонация";
			second = "detonation";
		},
		{
			first = "дискретные значения";
			second = "discrete values";
		},
		{
			first = "длина '";
			second = "length";
		},
		{
			first = "длина секции";
			second = "section length";
		},
		{
			first = "длина текстуры луча";
			second = "beam texture lenght";
		},
		{
			first = "длительность";
			second = "continuance";
		},
		{
			first = "длительность действия";
			second = "influence lasting";
		},
		{
			first = "добавка к именам файлов";
			second = "addition to file names";
		},
		{
			first = "другое";
			second = "other";
		},
		{
			first = "есть анимация";
			second = "animation available";
		},
		{
			first = "есть анимация для отключенного состояния (иначе просто останавливается текущая анимация)";
			second = "animation for unplugged condition exists (otherwise the current animation stops)";
		},
		{
			first = "ждите ответа";
			second = "please wait for the answer";
		},
		{
			first = "жесткость привязки к юниту";
			second = "rigidity of the bound to a unit";
		},
		{
			first = "зависит от расы";
			second = "depends on the race";
		},
		{
			first = "зависит от языка";
			second = "depends on the language";
		},
		{
			first = "задержка между взрывами";
			second = "delay between explosions";
		},
		{
			first = "задержка старта";
			second = "start delay";
		},
		{
			first = "запретить кнопку";
			second = "ban icon";
		},
		{
			first = "зациклен";
			second = "looped";
		},
		{
			first = "зацикливать";
			second = "loop";
		},
		{
			first = "звук";
			second = "sound";
		},
		{
			first = "звук взрыва при попадании в цель";
			second = "sound of explosion when hitting the target";
		},
		{
			first = "звук выстрела";
			second = "firing sound";
		},
		{
			first = "звуковые события";
			second = "sound events";
		},
		{
			first = "здание";
			second = "building";
		},
		{
			first = "здание построено";
			second = "building complete";
		},
		{
			first = "земля";
			second = "ground";
		},
		{
			first = "значение по умолчанию";
			second = "default value";
		},
		{
			first = "значения";
			second = "values";
		},
		{
			first = "зона включена";
			second = "zone enabled";
		},
		{
			first = "зона непроходимости";
			second = "unpassable zone";
		},
		{
			first = "зона проходимости";
			second = "passable zone";
		},
		{
			first = "зоны с отложенной активацией";
			second = "areas with shiftModifier activation";
		},
		{
			first = "зум в курсор";
			second = "zoom into the cursor";
		},
		{
			first = "идти";
			second = "walk";
		},
		{
			first = "изменение высоты";
			second = "heigth variation";
		},
		{
			first = "изменения поверхности";
			second = "landscape variation";
		},
		{
			first = "изображение";
			second = "picture";
		},
		{
			first = "имя модели";
			second = "model name";
		},
		{
			first = "имя файла";
			second = "file name";
		},
		{
			first = "имя экрана";
			second = "screen name";
		},
		{
			first = "индикатор прогресса";
			second = "progress indicator";
		},
		{
			first = "инерция зума";
			second = "zoom inertion";
		},
		{
			first = "инерция камеры при повороте";
			second = "camera intertion on rotation";
		},
		{
			first = "инерция сдвига камеры";
			second = "camera inertion on movement";
		},
		{
			first = "интервал появления";
			second = "appearance intespace";
		},
		{
			first = "интерфейс";
			second = "interface";
		},
		{
			first = "использовать мелкодетальную текстуру";
			second = "use high-detailed texture";
		},
		{
			first = "использовать собственный цвет символа";
			second = "use own symbol color";
		},
		{
			first = "использовать цепной эффект";
			second = "use chain effect";
		},
		{
			first = "источник";
			second = "source";
		},
		{
			first = "качество антиалиасинга";
			second = "quality of antialiancing";
		},
		{
			first = "качество освещения";
			second = "quality of light";
		},
		{
			first = "качество теней";
			second = "quality of shadows";
		},
		{
			first = "класс атаки юнита";
			second = "unit attack class";
		},
		{
			first = "класс атакуемых юнитов";
			second = "attackable units class";
		},
		{
			first = "класс юнита";
			second = "unit class";
		},
		{
			first = "кнопка";
			second = "button";
		},
		{
			first = "кнопка активирована";
			second = "button is activated";
		},
		{
			first = "кнопка видима";
			second = "button is visible";
		},
		{
			first = "кнопка запрещена";
			second = "button is banned";
		},
		{
			first = "кнопка подсвечена";
			second = "button is spotted";
		},
		{
			first = "кнопка разрешена";
			second = "button is allowed";
		},
		{
			first = "кнопки";
			second = "buttons";
		},
		{
			first = "когда нет наведения и не выбран";
			second = "when is not in focus or selection";
		},
		{
			first = "количество";
			second = "amount";
		},
		{
			first = "количество кадров";
			second = "frame amount";
		},
		{
			first = "количество кадров2";
			second = "frame rate2";
		},
		{
			first = "количество молний";
			second = "number of lightnings";
		},
		{
			first = "количество эффектов";
			second = "number of effects";
		},
		{
			first = "команды";
			second = "commands";
		},
		{
			first = "координаты";
			second = "coordinates";
		},
		{
			first = "координаты текста";
			second = "text coordinates";
		},
		{
			first = "кратер от взрыва";
			second = "craters after explosion";
		},
		{
			first = "кривая выпуклая интенсивности";
			second = "convex intensity curve";
		},
		{
			first = "круглая тень";
			second = "round shadow";
		},
		{
			first = "крутизна кривой интенсивности";
			second = "steepness of the intensity curve";
		},
		{
			first = "курсор";
			second = "cursor";
		},
		{
			first = "левая кнопка мыши зажата";
			second = "left mouse button pressed and hold";
		},
		{
			first = "лечение";
			second = "healing";
		},
		{
			first = "линейная";
			second = "linear";
		},
		{
			first = "логический";
			second = "logical";
		},
		{
			first = "лучевое оружие";
			second = "ray weapon";
		},
		{
			first = "макс. время пребывания в очереди (мс)";
			second = "maximum time in line (milliseconds)";
		},
		{
			first = "макс. количество одновременно слышимых звуков";
			second = "maximumum number of synchronously played sounds";
		},
		{
			first = "макс. коэфф. увеличения частоты";
			second = "maximum coefficient of frecuency increase";
		},
		{
			first = "макс. коэфф. уменьшения частоты";
			second = "max. coeeficient of frequency decrease";
		},
		{
			first = "максимальная высота камеры над землей";
			second = "maximum camera height over the ground";
		},
		{
			first = "максимальная глубина развилок";
			second = "maximum fork depth";
		},
		{
			first = "максимальная длина строки";
			second = "maximum line length";
		},
		{
			first = "максимально количество вторичных молний от юнита";
			second = "maximum number of secondary lightnings coming from a unit";
		},
		{
			first = "максимальное значение";
			second = "maximum value";
		},
		{
			first = "максимальное удаление от точки наблюдения";
			second = "maximum distance from the point of view";
		},
		{
			first = "максимальный радиус слышимости";
			second = "maxmum radius of audibility";
		},
		{
			first = "максимальный угол наклона камеры";
			second = "maximum camera inclination angle";
		},
		{
			first = "масштаб";
			second = "scale";
		},
		{
			first = "масштаб спецэффекта луча";
			second = "scale of radial special effect";
		},
		{
			first = "масштаб тертекстуры";
			second = "tertexure scale";
		},
		{
			first = "масштаб эффектов";
			second = "effects scale";
		},
		{
			first = "масштабирование";
			second = "scaling";
		},
		{
			first = "масштабировать по размеру объекта";
			second = "scale by the object size";
		},
		{
			first = "масштаб модели";
			second = "model scale";
		},
		{
			first = "масштабирование движения";
			second = "movement scale";
		},
		{
			first = "масштабировать по размеру объекта";
			second = "scale by type of object";
		},
		{
			first = "меня атакуют";
			second = "I'm under attack";
		},
		{
			first = "менять цвет текста";
			second = "alter text color";
		},
		{
			first = "место появления";
			second = "area of appearance";
		},
		{
			first = "место привязки постоянного эффекта";
			second = "point of the permanent effect connection";
		},
		{
			first = "метод";
			second = "method";
		},
		{
			first = "метод перемещения";
			second = "movement method";
		},
		{
			first = "минимальная высота камеры над землей";
			second = "minimum camera height over the ground";
		},
		{
			first = "минимальная громкость";
			second = "minimal sound volume";
		},
		{
			first = "минимальное значение";
			second = "minimum value";
		},
		{
			first = "минимальное удаление от точки наблюдения";
			second = "minimum distance from the point of view";
		},
		{
			first = "минимальный угол наклона камеры";
			second = "minimum camera inclination angle";
		},
		{
			first = "минирование";
			second = "mining";
		},
		{
			first = "модель";
			second = "model";
		},
		{
			first = "может стрелять когда стоит";
			second = "may fire when standing";
		},
		{
			first = "может стрелять на поверхности";
			second = "can fire on the surface";
		},
		{
			first = "может стрелять на ходу";
			second = "is able to fire while walking";
		},
		{
			first = "может стрелять под водой";
			second = "can fire under watre";
		},
		{
			first = "можно добыть ресурс";
			second = "resource gathering is permitted";
		},
		{
			first = "мой клан атакуют";
			second = "my clan is under attack";
		},
		{
			first = "мощность";
			second = "strength";
		},
		{
			first = "мощность атаки";
			second = "attack power";
		},
		{
			first = "на воде";
			second = "on the water";
		},
		{
			first = "на вражеских юнитов";
			second = "on enemy units";
		},
		{
			first = "на всех юнитов";
			second = "on all units";
		},
		{
			first = "на дне";
			second = "at the bottom";
		},
		{
			first = "на земле";
			second = "on the ground";
		},
		{
			first = "на кого действует";
			second = "effects following objects";
		},
		{
			first = "на любой поверхности";
			second = "on any surface";
		},
		{
			first = "на своих и союзных юнитов";
			second = "on allied and enemy units";
		},
		{
			first = "на союзных юнитов";
			second = "friendly ai";
		},
		{
			first = "название оружия";
			second = "weapon name";
		},
		{
			first = "наземные цели";
			second = "ground targets";
		},
		{
			first = "настройки цепной молнии";
			second = "chain lightning settings";
		},
		{
			first = "не воздействует на юнитов";
			second = "does not affect units";
		},
		{
			first = "не выключать до окончания времени действия";
			second = "do not disable until the end of the effect time";
		},
		{
			first = "не выключать до окончания времени действия источника";
			second = "do not disable until the end of source's activity period";
		},
		{
			first = "не выравнивать";
			second = "do not justify";
		},
		{
			first = "не менять";
			second = "do not change";
		},
		{
			first = "не может делить цель с другим оружием";
			second = "is not allowed to share the target with other weapon";
		},
		{
			first = "не отображать";
			second = "hide";
		},
		{
			first = "не показывать пустой";
			second = "do not show empty";
		},
		{
			first = "не стрелять";
			second = "do not shoot";
		},
		{
			first = "не установлен";
			second = "is not set";
		},
		{
			first = "нельзя атаковать";
			second = "do not attack";
		},
		{
			first = "нельзя идти";
			second = "do not walk";
		},
		{
			first = "необходимые параметры";
			second = "required parameters";
		},
		{
			first = "необходимые строения";
			second = "required buildings";
		},
		{
			first = "непрерывно";
			second = "constantly";
		},
		{
			first = "непрерывный след";
			second = "constant trace";
		},
		{
			first = "неровность";
			second = "roughness";
		},
		{
			first = "нет детализированной текстуры";
			second = "no detalixed texture";
		},
		{
			first = "нет тень";
			second = "no shadow";
		},
		{
			first = "никакого воздействия";
			second = "no effect";
		},
		{
			first = "ничего";
			second = "nothing";
		},
		{
			first = "номер состояния";
			second = "number of state";
		},
		{
			first = "номер цепочки анимации";
			second = "animation chain number";
		},
		{
			first = "номер цепочки анимации стрелять";
			second = "shooting animational cycle number";
		},
		{
			first = "номер цепочки анимации целиться";
			second = "targeting animational chain number";
		},
		{
			first = "обозначение на миникарте";
			second = "marking on the minimap";
		},
		{
			first = "общее время стрельбы";
			second = "general time of shooting";
		},
		{
			first = "объект врага";
			second = "enemy object";
		},
		{
			first = "объект игрока";
			second = "player object";
		},
		{
			first = "объект мира";
			second = "object of the world";
		},
		{
			first = "объект по умолчанию";
			second = "default object";
		},
		{
			first = "объект союзника";
			second = "ally object";
		},
		{
			first = "обычная кнопка";
			second = "regular button";
		},
		{
			first = "обычный режим";
			second = "regular regime";
		},
		{
			first = "ограничение выезда камеры за край мира сверху";
			second = "limitation of camera shift over the world's border upwards";
		},
		{
			first = "ограничение выезда камеры за край мира слева";
			second = "limitation of camera shift over the world's border left";
		},
		{
			first = "ограничение выезда камеры за край мира снизу";
			second = "limitation of camera shift over the world's border below";
		},
		{
			first = "ограничение выезда камеры за край мира справа";
			second = "limitation of camera shift over the world's border right";
		},
		{
			first = "ограничение выезда точки наблюдения за край при максимальном удалении";
			second = "limitation of camera shift over the world's border on the maximum distance";
		},
		{
			first = "ориентация";
			second = "orientation";
		},
		{
			first = "ориентировать по объекту";
			second = "direct by the object";
		},
		{
			first = "оружие - захват";
			second = "weapon - capture";
		},
		{
			first = "оружие ближнего боя";
			second = "melee weapon";
		},
		{
			first = "оружие дальнего боя";
			second = "range weapon";
		},
		{
			first = "отладочное окно";
			second = "debug window";
		},
		{
			first = "отмена команды выделенному юниту";
			second = "abort command for the selected unit";
		},
		{
			first = "отменить изменения";
			second = "discard changes";
		},
		{
			first = "относительная дельта шага";
			second = "relative delta of the step";
		},
		{
			first = "относительный масштаб для отметок на миникарте";
			second = "relative scale for minimap labels";
		},
		{
			first = "отображать туман войны";
			second = "display fog of war";
		},
		{
			first = "отравление";
			second = "poisoning";
		},
		{
			first = "отражения";
			second = "reflections";
		},
		{
			first = "параметр";
			second = "parameter";
		},
		{
			first = "параметры зоны";
			second = "zone parameters";
		},
		{
			first = "параметры источников";
			second = "source parameters";
		},
		{
			first = "параметры лучевого оружия";
			second = "beam weapon parameters";
		},
		{
			first = "параметры молнии для атаки";
			second = "lightning attack parameters";
		},
		{
			first = "параметры нарастания вспышки";
			second = "parameter of growing flash";
		},
		{
			first = "параметры оружия";
			second = "weapon parameters";
		},
		{
			first = "параметры повреждений, [0] - минимум, [1] - максимум";
			second = "damage parameters, [0] - minimum, [1] - maximum";
		},
		{
			first = "параметры постоянонй молнии";
			second = "constant lightning parameters";
		},
		{
			first = "параметры тулзера";
			second = "toolzer parameters";
		},
		{
			first = "параметры убывания вспышки";
			second = "parameter of fading flash";
		},
		{
			first = "патрулирование";
			second = "patrol";
		},
		{
			first = "пауза перед проигрыванием (мс)";
			second = "pause before replay (ms)";
		},
		{
			first = "первая стрелка регулятора";
			second = "regulator's first pointer";
		},
		{
			first = "перемещение";
			second = "movement";
		},
		{
			first = "перемещение по воде";
			second = "movement on the water";
		},
		{
			first = "период анимации (секунды)";
			second = "animation period";
		},
		{
			first = "период анимации луча";
			second = "beam animation period";
		},
		{
			first = "период мигания курсора";
			second = "cursor blinking period";
		},
		{
			first = "периодичность появления";
			second = "Periodicy of Appearance";
		},
		{
			first = "плавающие цели";
			second = "swimming targets";
		},
		{
			first = "плотность эффектов";
			second = "effects intensity";
		},
		{
			first = "по битмапу";
			second = "by bitmap";
		},
		{
			first = "по вертикали";
			second = "vertical";
		},
		{
			first = "по горизонтали";
			second = "horizontal";
		},
		{
			first = "по изменению позиции";
			second = "on position changing";
		},
		{
			first = "по команде из интерфейса";
			second = "on interface command";
		},
		{
			first = "по кругу";
			second = "circle";
		},
		{
			first = "по кругу по часовой стрелке";
			second = "circle-wise clockwise";
		},
		{
			first = "по кругу против часовой стрелки";
			second = "circle-wise anticlockwise";
		},
		{
			first = "по левому краю";
			second = "left";
		},
		{
			first = "по минимальной высоте";
			second = "by minimal height";
		},
		{
			first = "по правому краю";
			second = "right";
		},
		{
			first = "по средней высоте";
			second = "by average height";
		},
		{
			first = "по умолчанию";
			second = "on default";
		},
		{
			first = "по умолчанию для рассы";
			second = "on default for race";
		},
		{
			first = "по центру";
			second = "center";
		},
		{
			first = "по шагу";
			second = "by step";
		},
		{
			first = "поворачивать графический узел по осям логического";
			second = "rotate graphical node by logical axes";
		},
		{
			first = "поворачивать зону вместе с объектом";
			second = "rotate arear with object";
		},
		{
			first = "поворачивать камеру за юнитом";
			second = "rotate camera following the unit";
		},
		{
			first = "поворот";
			second = "turning";
		},
		{
			first = "повреждение (за секунду)";
			second = "damage (per second)";
		},
		{
			first = "повреждения";
			second = "damage";
		},
		{
			first = "повреждения в секунду";
			second = "damage per second";
		},
		{
			first = "повторный запуск запрещен до (мс)";
			second = "restart forbidden until (ms)";
		},
		{
			first = "позиционирование зоны";
			second = "zone positioning";
		},
		{
			first = "позиционирование источников";
			second = "source placwement";
		},
		{
			first = "показать кнопку";
			second = "show button";
		},
		{
			first = "показывать взлетающие изменения";
			second = "display raising changes";
		},
		{
			first = "показывать подсказки";
			second = "display tips";
		},
		{
			first = "показывать сообщения";
			second = "display messages";
		},
		{
			first = "поле ввода";
			second = "input field";
		},
		{
			first = "ползунок";
			second = "track bar";
		},
		{
			first = "ползунок регулятора";
			second = "regulator track bar";
		},
		{
			first = "полный экран";
			second = "full screen";
		},
		{
			first = "поражение лазером";
			second = "laser affection";
		},
		{
			first = "посадка в транспорт";
			second = "loading into transport";
		},
		{
			first = "постоянная молния в зоне";
			second = "permanent lightning in the area";
		},
		{
			first = "постоянный эффект";
			second = "permanent effect";
		},
		{
			first = "правая кнопка мыши зажата";
			second = "right mouse button pressed and hold";
		},
		{
			first = "предмет";
			second = "item";
		},
		{
			first = "предмет можно взять";
			second = "picking up the item is permitted";
		},
		{
			first = "прерываемая стральба";
			second = "intermissive fire";
		},
		{
			first = "прерываемая стрельба";
			second = "intermissive shooting";
		},
		{
			first = "при выборе";
			second = "on select";
		},
		{
			first = "при наведении";
			second = "by targeting";
		},
		{
			first = "при наведении или выборе";
			second = "on focusing or select";
		},
		{
			first = "при попадании в землю";
			second = "on hitting the ground";
		},
		{
			first = "при попадании в цель";
			second = "on hitting the target";
		},
		{
			first = "при увеличении параметра";
			second = "on parameter increase";
		},
		{
			first = "при уменьшении параметра";
			second = "on parameter discrease";
		},
		{
			first = "привязанный юнит внизу экрана";
			second = "unit bound on the bootom of the screen";
		},
		{
			first = "привязать к мыши";
			second = "bind to the mouse";
		},
		{
			first = "привязать камеру к юниту при прямом управлении";
			second = "bind camera to the unit by direct control";
		},
		{
			first = "применить настройки";
			second = "apply settings";
		},
		{
			first = "приоритет";
			second = "priority";
		},
		{
			first = "прогресс производства";
			second = "production progress";
		},
		{
			first = "производимые источники";
			second = "derived sources";
		},
		{
			first = "процент урона";
			second = "damage percent";
		},
		{
			first = "прямоугольник";
			second = "square";
		},
		{
			first = "прятать курсор во время прицеливания";
			second = "hide cursor when aiming";
		},
		{
			first = "пустая команда";
			second = "empty command";
		},
		{
			first = "радиус";
			second = "radius";
		},
		{
			first = "радиус видимости";
			second = "visivibility radius";
		},
		{
			first = "радиус воздействия";
			second = "influence radius";
		},
		{
			first = "радиус объекта";
			second = "object radius";
		},
		{
			first = "радиус отскока от юнита";
			second = "bounce radius around unit";
		},
		{
			first = "радиус цепного эффекта";
			second = "chain effect radius";
		},
		{
			first = "радиус эффектов";
			second = "effects radius";
		},
		{
			first = "разброс длительности действия";
			second = "influence length dispersion";
		},
		{
			first = "размер зоны";
			second = "area size";
		},
		{
			first = "размер модели";
			second = "model size";
		},
		{
			first = "размер экрана";
			second = "screen size";
		},
		{
			first = "размеры зоны";
			second = "zone size";
		},
		{
			first = "размещение по зоне";
			second = "disposal in the area";
		},
		{
			first = "разрешить кнопку";
			second = "allow button";
		},
		{
			first = "реальная тень";
			second = "realistic shadow";
		},
		{
			first = "регулятор";
			second = "regulator";
		},
		{
			first = "режим вывода на воде";
			second = "input on water mode";
		},
		{
			first = "режим стрельбы";
			second = "fire mode";
		},
		{
			first = "режим стрельбы в прямом управлении";
			second = "attack in direct control mode";
		},
		{
			first = "режимы отрисовки";
			second = "drawing regimes";
		},
		{
			first = "рельефная текстура";
			second = "embossed texture";
		},
		{
			first = "ремонт";
			second = "repair";
		},
		{
			first = "рисовать по битмапу";
			second = "draw according to bitmap";
		},
		{
			first = "рисовать по кругу";
			second = "draw circle-wise";
		},
		{
			first = "сбрасывать";
			second = "drop";
		},
		{
			first = "сбрасывать курсор после указания цели";
			second = "discard cursor after target definition";
		},
		{
			first = "сбрасывать неразрушаемость";
			second = "discard inpenetration";
		},
		{
			first = "сбрасывать цель во время перезарядки";
			second = "discard target during recharge";
		},
		{
			first = "сбрасывать цель после выстрела";
			second = "discard target after shot";
		},
		{
			first = "свои настройки гибели";
			second = "individual death settings";
		},
		{
			first = "сглаживание эффектов";
			second = "smoothing effects";
		},
		{
			first = "сектор действия зоны, в градусах";
			second = "section of area effect, degrees";
		},
		{
			first = "сжатые текстуры";
			second = "compressed textures";
		},
		{
			first = "синхронизировать с анимацией";
			second = "synchronize with animation";
		},
		{
			first = "синхронизировать эффект с анимацией модели";
			second = "synchronize effect with model animation";
		},
		{
			first = "скорость затухания";
			second = "speed of fading";
		},
		{
			first = "скорость поворота камеры клавиатурой";
			second = "speed of camera rotation via keyboard";
		},
		{
			first = "скорость поворота камеры мышью";
			second = "speed of camera rotation via mouse";
		},
		{
			first = "скорость поворота при прямом управлении, градус/сек";
			second = "rotation speed by direct control, degree/sec";
		},
		{
			first = "скорость поворота, градус/сек";
			second = "rotation speed, degree/sec";
		},
		{
			first = "скорость приближения камеры (зума)";
			second = "speed of camera zooming in";
		},
		{
			first = "скорость сдвига камеры";
			second = "speed of camera movement";
		},
		{
			first = "скорость сдвига камеры при смещении указателя за край";
			second = "speed of cameramovement on moving cursor over the world's border";
		},
		{
			first = "скорость спуска";
			second = "descent speed";
		},
		{
			first = "скролл карты вверх";
			second = "scroll map up";
		},
		{
			first = "скролл карты вверх-влево";
			second = "scroll map up-left";
		},
		{
			first = "скролл карты вверх-вправо";
			second = "scroll map up-right";
		},
		{
			first = "скролл карты влево";
			second = "scroll map left";
		},
		{
			first = "скролл карты вниз";
			second = "scroll map down";
		},
		{
			first = "скролл карты вниз-влево";
			second = "scroll map down-left";
		},
		{
			first = "скролл карты вниз-вправо";
			second = "scroll map down-right";
		},
		{
			first = "скролл карты вправо";
			second = "scroll map right";
		},
		{
			first = "след";
			second = "trace";
		},
		{
			first = "след от движения";
			second = "movement trace";
		},
		{
			first = "случайное изменение частоты";
			second = "random frequency alteration";
		},
		{
			first = "случайный поворот";
			second = "random rotation";
		},
		{
			first = "случайным образом в радиусе партулирования";
			second = "randomly within patrol radius";
		},
		{
			first = "сменить текущий экран";
			second = "change current screen";
		},
		{
			first = "смещение";
			second = "shift";
		},
		{
			first = "собственные настройки";
			second = "own settings";
		},
		{
			first = "собственные настройки камеры";
			second = "own camera settings";
		},
		{
			first = "создавать источники";
			second = "create sources";
		},
		{
			first = "создавать источники при любом столкновении";
			second = "create sources on any collision";
		},
		{
			first = "создавать источники при попадании в цель";
			second = "create sources when hitting a target";
		},
		{
			first = "создавать цепной эффект";
			second = "create a chain effect";
		},
		{
			first = "состояния";
			second = "states";
		},
		{
			first = "спецэффект";
			second = "special effect";
		},
		{
			first = "спецэффект взрыва при попадании в цель";
			second = "explosion special effect when hitting the target";
		},
		{
			first = "спецэффект выстрела";
			second = "shot effect";
		},
		{
			first = "спецэффект луча";
			second = "ray special effect";
		},
		{
			first = "спецэффект попадания в защитное поле";
			second = "special effect of hiting defensive field";
		},
		{
			first = "спецэффекты";
			second = "special effects";
		},
		{
			first = "список";
			second = "list";
		},
		{
			first = "список пресетов";
			second = "presets list";
		},
		{
			first = "спрятать кнопку";
			second = "hide button";
		},
		{
			first = "ссылка";
			second = "link";
		},
		{
			first = "ставить на дно";
			second = "place on the bottom";
		},
		{
			first = "ставить на поверхность воды";
			second = "place on water surface";
		},
		{
			first = "стационарная установка для запуска возмущений поверхности";
			second = "stationary turret for landscape disturbance launching";
		},
		{
			first = "стоимость стрельбы";
			second = "fire cost";
		},
		{
			first = "страницы";
			second = "pages";
		},
		{
			first = "стрелки";
			second = "pointers";
		},
		{
			first = "стреляет под туман войны";
			second = "shoots under the fog of war";
		},
		{
			first = "стреляет сквозь защитные поля";
			second = "fires through defensive fields";
		},
		{
			first = "стрелять куда указано";
			second = "shoot in the defined point";
		},
		{
			first = "стреляющее снарядами оружие";
			second = "projectile weapon";
		},
		{
			first = "строить/достраивать";
			second = "construct / finish construction";
		},
		{
			first = "строки";
			second = "lines";
		},
		{
			first = "стыковка";
			second = "connection";
		},
		{
			first = "таб";
			second = "tab";
		},
		{
			first = "текст";
			second = "text";
		},
		{
			first = "текстура";
			second = "texture";
		},
		{
			first = "текстура луча";
			second = "beam texture";
		},
		{
			first = "текстурные координаты";
			second = "texture coordinates";
		},
		{
			first = "телепортация";
			second = "teleportation";
		},
		{
			first = "тени";
			second = "shadows";
		},
		{
			first = "термодель";
			second = "termodel";
		},
		{
			first = "тертекстура";
			second = "tertexture";
		},
		{
			first = "тип";
			second = "type";
		},
		{
			first = "тип воздействия";
			second = "influence type";
		},
		{
			first = "тип кривой интенсивности";
			second = "type of the intensity curve";
		},
		{
			first = "тип линии";
			second = "line type";
		},
		{
			first = "тип не задан";
			second = "type not set";
		},
		{
			first = "тип оружия";
			second = "weapon type";
		},
		{
			first = "тип повреждений";
			second = "damage type";
		},
		{
			first = "тип пометки";
			second = "type of marking";
		},
		{
			first = "тип спота";
			second = "spot type";
		},
		{
			first = "тип ячейки снаряжения";
			second = "type of equipement slot";
		},
		{
			first = "толщина линии";
			second = "line width";
		},
		{
			first = "толщина луча";
			second = "beam width";
		},
		{
			first = "только на воде";
			second = "only on water";
		},
		{
			first = "только на земле";
			second = "only on ground";
		},
		{
			first = "только на льду";
			second = "only on ice";
		},
		{
			first = "только на своих юнитов";
			second = "only on allied units";
		},
		{
			first = "торпеда";
			second = "torpedo";
		},
		{
			first = "точка действия указанная на миникарте";
			second = "action target defined on the minimap";
		},
		{
			first = "точность наведения";
			second = "aiming accuracy";
		},
		{
			first = "трассировка поверхности";
			second = "landscape routing";
		},
		{
			first = "тулзер";
			second = "toolser";
		},
		{
			first = "угол наклона камеры по умолчанию";
			second = "default camera pitch angle";
		},
		{
			first = "удаление от точки наблюдения по умолчанию";
			second = "default distance from the measuring point";
		},
		{
			first = "уменьшать засветку при отдалении";
			second = "decrease light-striking from distance";
		},
		{
			first = "универсальное";
			second = "universal";
		},
		{
			first = "универсальное имя";
			second = "multipurpose name";
		},
		{
			first = "универсальное оружие";
			second = "universal weapon";
		},
		{
			first = "управление наведением";
			second = "aiming control";
		},
		{
			first = "уст. Dam";
			second = "define Dam";
		},
		{
			first = "уст. Geo";
			second = "define Geo";
		},
		{
			first = "уст. неразрушаемость";
			second = "define inpenetration";
		},
		{
			first = "устанавливать";
			second = "place";
		},
		{
			first = "учитывать защитное поле";
			second = "consider defensive field";
		},
		{
			first = "учитывать поверхность";
			second = "consider surface";
		},
		{
			first = "учитывать юнитов";
			second = "consider units";
		},
		{
			first = "фаза процесса";
			second = "process phase";
		},
		{
			first = "фазы";
			second = "phases";
		},
		{
			first = "файлы";
			second = "files";
		},
		{
			first = "фильтр на элементы, из которых берутся атомы для атаки";
			second = "filter on elements, which grant atoms for attack";
		},
		{
			first = "фильтр на элементы, которые будут гибнуть при успешном попадании";
			second = "filter on elements, which will die under successful hit";
		},
		{
			first = "форма";
			second = "shape";
		},
		{
			first = "хаос";
			second = "chaos";
		},
		{
			first = "цвет";
			second = "color";
		},
		{
			first = "цвет вспышки";
			second = "Flash color";
		},
		{
			first = "цвет оставшейся области";
			second = "colour of the leftover area";
		},
		{
			first = "цвет пройденной области";
			second = "colour of the passed area";
		},
		{
			first = "цвет текста";
			second = "text colour";
		},
		{
			first = "цвет юнита (ambient, diffuse, specular)";
			second = "unit colour (ambient, diffuse, specular)";
		},
		{
			first = "цели на дне";
			second = "targets at the bottom";
		},
		{
			first = "чувствительность зума мышью";
			second = "mouse zoom sensibility";
		},
		{
			first = "шаг";
			second = "step";
		},
		{
			first = "шаг изменения значения";
			second = "step of the value change";
		},
		{
			first = "шаг применения изменений поверхности";
			second = "step of changin surface effect";
		},
		{
			first = "ширина";
			second = "width";
		},
		{
			first = "ширина атаки";
			second = "attack width";
		},
		{
			first = "шрифт";
			second = "font";
		},
		{
			first = "штучка";
			second = "thingy";
		},
		{
			first = "экран";
			second = "screen";
		},
		{
			first = "экспонента";
			second = "Exponent";
		},
		{
			first = "элементы";
			second = "elements";
		},
		{
			first = "эффект";
			second = "effect";
		},
		{
			first = "эффект включен";
			second = "effect eenabled";
		},
		{
			first = "эффект и окружность";
			second = "effect and circle";
		},
		{
			first = "эффекты от воздействий";
			second = "influence effects";
		},
		{
			first = "юнит";
			second = "unit";
		},
		{
			first = "юнит построен";
			second = "unit ready";
		}
	};
};
