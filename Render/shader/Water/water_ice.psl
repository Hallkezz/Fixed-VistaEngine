struct PS_INPUT
{
    float2  talpha : TEXCOORD0;
    float2  tsnow : TEXCOORD1;
    float2  tbump : TEXCOORD2;
    float4  diffuse: COLOR0;
	float2 uv_lightmap:TEXCOORD3;
#ifndef PS11
	#ifdef MIRROR_LINEAR
		float4  mirror : TEXCOORD4;
	#else
		float3  mirror : TEXCOORD4;
	#endif
	float2 tcleft:TEXCOORD5;
#endif
};

sampler2D AlphaSampler:register(s0);
sampler2D SnowSampler:register(s1);
sampler2D BumpSampler:register(s2);
sampler2D LightMapSampler:register(s3);

#ifdef MIRROR_LINEAR
sampler2D CubeSampler:register(s4);
#else
samplerCUBE CubeSampler:register(s4);
#endif
sampler2D CleftSampler:register(s5);

float4 vFogOfWar:register(c3);
float4 vSnowColor;

float4 main(const PS_INPUT v):COLOR
{
	float tex0=tex2D(AlphaSampler,v.talpha).r;
	
	float4 ot;
	float aa=v.diffuse.r;
#ifdef PS11
	ot.a=tex0*aa;
	ot.a=(ot.a-0.5f)*2;
	ot.a=(ot.a+0.25f)*2;
#else
	float4 cleft=tex2D(CleftSampler,v.tcleft);
	ot.a=tex0*aa;
	ot.a=(ot.a-0.5)*4+0.5;
	ot.a=ot.a+(cleft.r-0.5)*2;
#endif

	float4 snow=tex2D(SnowSampler,v.tsnow);
	snow.rgb*=vSnowColor.rgb;
#ifdef PS11
	ot.rgb=snow;
#else	
	float4 bump=tex2D(BumpSampler,v.tbump);
	#ifdef MIRROR_LINEAR
		float4 cube_coord=v.mirror;
		//cube_coord.xy+=bump.xy*cube_coord.w*0.2;
		cube_coord.xy+=bump.xy*cube_coord.w*0.05;
		ot.rgb=tex2Dproj(CubeSampler,cube_coord);
	#else
		float3 cube_coord=v.mirror;
		cube_coord.xy+=bump.xy*0.2;
		ot.rgb=texCUBE(CubeSampler,cube_coord);
	#endif
	ot.rgb=lerp(ot,snow,snow.a);
#endif

#ifdef FOG_OF_WAR
	float4 lightmap=tex2D(LightMapSampler,v.uv_lightmap);
	ot.rgb=lerp(ot.rgb,vFogOfWar,lightmap.a);
#endif	
	return ot;
};
