struct PS_INPUT
{
	float2 uv0:TEXCOORD0;
	float2 uv1:TEXCOORD1;
	float4 color: COLOR0;
	float2 uv_lightmap:TEXCOORD2;
#ifdef FLOAT_ZBUFFER
	float4 zpos:TEXCOORD3;
#endif		
#ifdef ZREFLECTION
	float3  treflection: TEXCOORD5;
#endif 

};
sampler2D t0:register(s0);
sampler2D t1:register(s1);
sampler2D LightMapSampler:register(s2);
sampler2D ZbufferMap:register(s3);
sampler2D ReflectionZ:register(s5);

float4 tfactor;
float4 vFogOfWar:register(c3);

float4 main(const PS_INPUT v):COLOR
{
	float4 ot=tex2D(t0,v.uv0);
#ifdef TFACTOR
	ot*=tfactor;
#else
	ot*=v.color;
#endif

#ifdef COLOR_OPERATION
	if(COLOR_OPERATION==1)
		ot.rgb+=tex2D(t1,v.uv1);//add
	if(COLOR_OPERATION==2)
		ot.rgb*=tex2D(t1,v.uv1);//mod
	if(COLOR_OPERATION==3)
		ot.rgb*=tex2D(t1,v.uv1)*2;//mod2x
	if(COLOR_OPERATION==4)		
		ot.rgb*=tex2D(t1,v.uv1)*4;//mod4x
#endif
#ifdef FOG_OF_WAR
	float4 lightmap=tex2D(LightMapSampler,v.uv_lightmap);
	//ot.rgb=lerp(ot.rgb,vFogOfWar,lightmap.a);//Для непрозрачных объектов надо было бы делать так.
	
	//ot.a*=1-lightmap.a;
	//ot.a*=-(lightmap.a*2-1);
	
	//При такой записи он компилит в -t2_bx2.w
	float a2=2*(lightmap.a-0.5);ot.a*=-a2;
#endif
#ifdef FLOAT_ZBUFFER
	float zb = tex2Dproj(ZbufferMap,v.zpos).r;
	float res = (zb-v.zpos.z)*0.1f;
	ot.a *= saturate(res);
#endif
#ifdef ZREFLECTION
	float4 refz_raw=tex2D(ReflectionZ,v.treflection);
	float refz=refz_raw.w*256+refz_raw.x;
	clip(v.treflection.z-refz);
#endif

	return ot;
}
