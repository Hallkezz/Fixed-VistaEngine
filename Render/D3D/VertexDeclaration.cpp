#include "StdAfxRD.h"
#include "..\Render\VertexDeclarationMacro.h"

//int sVertexXYZ::fmt		=	D3DFVF_XYZ;
BEGIN_VERTEX_DECLARATION(sVertexXYZ)
	{ 0, 0, D3DDECLTYPE_FLOAT3, D3DDECLMETHOD_DEFAULT, D3DDECLUSAGE_POSITION, 0 }
END_VERTEX_DECLARATION(sVertexXYZ)

//int sVertexXYZD::fmt	=	D3DFVF_XYZ|D3DFVF_DIFFUSE;
BEGIN_VERTEX_DECLARATION(sVertexXYZD)
	{ 0, 0, D3DDECLTYPE_FLOAT3, D3DDECLMETHOD_DEFAULT, D3DDECLUSAGE_POSITION, 0 }, 
	{ 0, 12, D3DDECLTYPE_D3DCOLOR, D3DDECLMETHOD_DEFAULT, D3DDECLUSAGE_COLOR, 0 }
END_VERTEX_DECLARATION(sVertexXYZD)

//int sVertexXYZT1::fmt	=	D3DFVF_XYZ|D3DFVF_TEX1;
BEGIN_VERTEX_DECLARATION(sVertexXYZT1)
	{ 0, 0,  D3DDECLTYPE_FLOAT3, D3DDECLMETHOD_DEFAULT, D3DDECLUSAGE_POSITION, 0 }, 
	{ 0, 12, D3DDECLTYPE_FLOAT2, D3DDECLMETHOD_DEFAULT,      D3DDECLUSAGE_TEXCOORD, 0 }
END_VERTEX_DECLARATION(sVertexXYZT1)

//int sVertexXYZDS::fmt	=	D3DFVF_XYZ|D3DFVF_DIFFUSE|D3DFVF_SPECULAR;
BEGIN_VERTEX_DECLARATION(sVertexXYZDS)
	{ 0, 0,  D3DDECLTYPE_FLOAT3, D3DDECLMETHOD_DEFAULT,  D3DDECLUSAGE_POSITION, 0 }, 
	{ 0, 12, D3DDECLTYPE_D3DCOLOR, D3DDECLMETHOD_DEFAULT,  D3DDECLUSAGE_COLOR, 0 },
	{ 0, 16, D3DDECLTYPE_D3DCOLOR, D3DDECLMETHOD_DEFAULT,  D3DDECLUSAGE_COLOR, 1 }
END_VERTEX_DECLARATION(sVertexXYZDS)

//int sVertexXYZDST1::fmt	=	D3DFVF_XYZ|D3DFVF_DIFFUSE|D3DFVF_SPECULAR|D3DFVF_TEX1;
BEGIN_VERTEX_DECLARATION(sVertexXYZDST1)
	{ 0, 0,  D3DDECLTYPE_FLOAT3, D3DDECLMETHOD_DEFAULT, D3DDECLUSAGE_POSITION, 0 }, 
	{ 0, 12, D3DDECLTYPE_D3DCOLOR, D3DDECLMETHOD_DEFAULT, D3DDECLUSAGE_COLOR, 0 },
	{ 0, 16, D3DDECLTYPE_D3DCOLOR, D3DDECLMETHOD_DEFAULT, D3DDECLUSAGE_COLOR, 1 },
	{ 0, 20, D3DDECLTYPE_FLOAT2, D3DDECLMETHOD_DEFAULT,      D3DDECLUSAGE_TEXCOORD, 0 }
END_VERTEX_DECLARATION(sVertexXYZDST1)

//int sVertexXYZDST2::fmt	=	D3DFVF_XYZ|D3DFVF_DIFFUSE|D3DFVF_SPECULAR|D3DFVF_TEX2;
BEGIN_VERTEX_DECLARATION(sVertexXYZDST2)
	{ 0, 0,  D3DDECLTYPE_FLOAT3,   D3DDECLMETHOD_DEFAULT, D3DDECLUSAGE_POSITION, 0 }, 
	{ 0, 12, D3DDECLTYPE_D3DCOLOR, D3DDECLMETHOD_DEFAULT, D3DDECLUSAGE_COLOR, 0 },
	{ 0, 16, D3DDECLTYPE_D3DCOLOR, D3DDECLMETHOD_DEFAULT, D3DDECLUSAGE_COLOR, 1 },
	{ 0, 20, D3DDECLTYPE_FLOAT2,   D3DDECLMETHOD_DEFAULT, D3DDECLUSAGE_TEXCOORD, 0 },
	{ 0, 28, D3DDECLTYPE_FLOAT2,   D3DDECLMETHOD_DEFAULT, D3DDECLUSAGE_TEXCOORD, 1 }
END_VERTEX_DECLARATION(sVertexXYZDST2)

//int sVertexXYZDT1::fmt	=	D3DFVF_XYZ|D3DFVF_DIFFUSE|D3DFVF_TEX1;
BEGIN_VERTEX_DECLARATION(sVertexXYZDT1)
	{ 0, 0,  D3DDECLTYPE_FLOAT3,   D3DDECLMETHOD_DEFAULT, D3DDECLUSAGE_POSITION, 0 }, 
	{ 0, 12, D3DDECLTYPE_D3DCOLOR, D3DDECLMETHOD_DEFAULT, D3DDECLUSAGE_COLOR,    0 },
	{ 0, 16, D3DDECLTYPE_FLOAT2,   D3DDECLMETHOD_DEFAULT, D3DDECLUSAGE_TEXCOORD, 0 }
END_VERTEX_DECLARATION(sVertexXYZDT1)

//int sVertexXYZDT2::fmt	=	D3DFVF_XYZ|D3DFVF_DIFFUSE|D3DFVF_TEX2;
BEGIN_VERTEX_DECLARATION(sVertexXYZDT2)
	{ 0, 0,  D3DDECLTYPE_FLOAT3, D3DDECLMETHOD_DEFAULT, D3DDECLUSAGE_POSITION, 0 }, 
	{ 0, 12, D3DDECLTYPE_D3DCOLOR, D3DDECLMETHOD_DEFAULT, D3DDECLUSAGE_COLOR, 0 },
	{ 0, 16, D3DDECLTYPE_FLOAT2, D3DDECLMETHOD_DEFAULT,      D3DDECLUSAGE_TEXCOORD, 0 },
	{ 0, 24, D3DDECLTYPE_FLOAT2, D3DDECLMETHOD_DEFAULT,      D3DDECLUSAGE_TEXCOORD, 1 }
END_VERTEX_DECLARATION(sVertexXYZDT2)

//int sVertexXYZN::fmt	=	D3DFVF_XYZ|D3DFVF_NORMAL;
BEGIN_VERTEX_DECLARATION(sVertexXYZN)
	{ 0, 0,  D3DDECLTYPE_FLOAT3, D3DDECLMETHOD_DEFAULT, D3DDECLUSAGE_POSITION, 0 }, 
	{ 0, 12, D3DDECLTYPE_FLOAT3, D3DDECLMETHOD_DEFAULT, D3DDECLUSAGE_NORMAL, 0 }
END_VERTEX_DECLARATION(sVertexXYZN)

//int sVertexXYZND::fmt	=	D3DFVF_XYZ|D3DFVF_NORMAL|D3DFVF_DIFFUSE;
BEGIN_VERTEX_DECLARATION(sVertexXYZND)
	{ 0, 0,  D3DDECLTYPE_FLOAT3, D3DDECLMETHOD_DEFAULT, D3DDECLUSAGE_POSITION, 0 }, 
	{ 0, 12, D3DDECLTYPE_FLOAT3, D3DDECLMETHOD_DEFAULT, D3DDECLUSAGE_NORMAL, 0 },
	{ 0, 24, D3DDECLTYPE_D3DCOLOR, D3DDECLMETHOD_DEFAULT, D3DDECLUSAGE_COLOR, 0 }
END_VERTEX_DECLARATION(sVertexXYZND)

//int sVertexXYZNDS::fmt	=	D3DFVF_XYZ|D3DFVF_NORMAL|D3DFVF_DIFFUSE|D3DFVF_SPECULAR;
BEGIN_VERTEX_DECLARATION(sVertexXYZNDS)
	{ 0, 0,  D3DDECLTYPE_FLOAT3, D3DDECLMETHOD_DEFAULT, D3DDECLUSAGE_POSITION, 0 }, 
	{ 0, 12, D3DDECLTYPE_FLOAT3, D3DDECLMETHOD_DEFAULT, D3DDECLUSAGE_NORMAL, 0 },
	{ 0, 24, D3DDECLTYPE_D3DCOLOR, D3DDECLMETHOD_DEFAULT, D3DDECLUSAGE_COLOR, 0 },
	{ 0, 40, D3DDECLTYPE_D3DCOLOR, D3DDECLMETHOD_DEFAULT, D3DDECLUSAGE_COLOR, 1 }
END_VERTEX_DECLARATION(sVertexXYZNDS)

//int sVertexXYZNDST1::fmt=	D3DFVF_XYZ|D3DFVF_NORMAL|D3DFVF_DIFFUSE|D3DFVF_SPECULAR|D3DFVF_TEX1;
BEGIN_VERTEX_DECLARATION(sVertexXYZNDST1)
	{ 0, 0,  D3DDECLTYPE_FLOAT3, D3DDECLMETHOD_DEFAULT, D3DDECLUSAGE_POSITION, 0 }, 
	{ 0, 12, D3DDECLTYPE_FLOAT3, D3DDECLMETHOD_DEFAULT, D3DDECLUSAGE_NORMAL, 0 },
	{ 0, 24, D3DDECLTYPE_D3DCOLOR, D3DDECLMETHOD_DEFAULT, D3DDECLUSAGE_COLOR, 0 },
	{ 0, 28, D3DDECLTYPE_D3DCOLOR, D3DDECLMETHOD_DEFAULT, D3DDECLUSAGE_COLOR, 1 },
	{ 0, 32, D3DDECLTYPE_FLOAT2, D3DDECLMETHOD_DEFAULT,      D3DDECLUSAGE_TEXCOORD, 0 }
END_VERTEX_DECLARATION(sVertexXYZNDST1)

//int sVertexXYZNDST2::fmt=	D3DFVF_XYZ|D3DFVF_NORMAL|D3DFVF_DIFFUSE|D3DFVF_SPECULAR|D3DFVF_TEX2;
BEGIN_VERTEX_DECLARATION(sVertexXYZNDST2)
	{ 0, 0,  D3DDECLTYPE_FLOAT3, D3DDECLMETHOD_DEFAULT, D3DDECLUSAGE_POSITION, 0 }, 
	{ 0, 12, D3DDECLTYPE_FLOAT3, D3DDECLMETHOD_DEFAULT, D3DDECLUSAGE_NORMAL, 0 },
	{ 0, 24, D3DDECLTYPE_D3DCOLOR, D3DDECLMETHOD_DEFAULT, D3DDECLUSAGE_COLOR, 0 },
	{ 0, 28, D3DDECLTYPE_D3DCOLOR, D3DDECLMETHOD_DEFAULT, D3DDECLUSAGE_COLOR, 1 },
	{ 0, 32, D3DDECLTYPE_FLOAT2, D3DDECLMETHOD_DEFAULT,      D3DDECLUSAGE_TEXCOORD, 0 },
	{ 0, 40, D3DDECLTYPE_FLOAT2, D3DDECLMETHOD_DEFAULT,      D3DDECLUSAGE_TEXCOORD, 1 }
END_VERTEX_DECLARATION(sVertexXYZNDST2)

//int sVertexXYZNT1::fmt	=	D3DFVF_XYZ|D3DFVF_NORMAL|D3DFVF_TEX1;
BEGIN_VERTEX_DECLARATION(sVertexXYZNT1)
	{ 0, 0,  D3DDECLTYPE_FLOAT3, D3DDECLMETHOD_DEFAULT, D3DDECLUSAGE_POSITION, 0 }, 
	{ 0, 12, D3DDECLTYPE_FLOAT3, D3DDECLMETHOD_DEFAULT, D3DDECLUSAGE_NORMAL, 0 },
	{ 0, 24, D3DDECLTYPE_FLOAT2, D3DDECLMETHOD_DEFAULT,      D3DDECLUSAGE_TEXCOORD, 0 }
END_VERTEX_DECLARATION(sVertexXYZNT1)

//int sVertexXYZW::fmt	=	D3DFVF_XYZRHW;
BEGIN_VERTEX_DECLARATION(sVertexXYZW)
	{ 0, 0,  D3DDECLTYPE_FLOAT4, D3DDECLMETHOD_DEFAULT, D3DDECLUSAGE_POSITIONT, 0 }
END_VERTEX_DECLARATION(sVertexXYZW)

//int sVertexXYZWD::fmt	=	D3DFVF_XYZRHW|D3DFVF_DIFFUSE;
BEGIN_VERTEX_DECLARATION(sVertexXYZWD)
	{ 0, 0,  D3DDECLTYPE_FLOAT4, D3DDECLMETHOD_DEFAULT, D3DDECLUSAGE_POSITIONT, 0 },
	{ 0, 16, D3DDECLTYPE_D3DCOLOR, D3DDECLMETHOD_DEFAULT, D3DDECLUSAGE_COLOR, 0 }
END_VERTEX_DECLARATION(sVertexXYZWD)

//int sVertexXYZWT1::fmt	=	D3DFVF_XYZRHW|D3DFVF_TEX1;
BEGIN_VERTEX_DECLARATION(sVertexXYZWT1)
	{ 0, 0,  D3DDECLTYPE_FLOAT4, D3DDECLMETHOD_DEFAULT, D3DDECLUSAGE_POSITIONT, 0 },
	{ 0, 16, D3DDECLTYPE_FLOAT2, D3DDECLMETHOD_DEFAULT,      D3DDECLUSAGE_TEXCOORD, 0 }
END_VERTEX_DECLARATION(sVertexXYZWT1)

//int sVertexXYZWDT1::fmt	=	D3DFVF_XYZRHW|D3DFVF_DIFFUSE|D3DFVF_TEX1;
BEGIN_VERTEX_DECLARATION(sVertexXYZWDT1)
	{ 0, 0,  D3DDECLTYPE_FLOAT4, D3DDECLMETHOD_DEFAULT, D3DDECLUSAGE_POSITIONT, 0 },
	{ 0, 16, D3DDECLTYPE_D3DCOLOR, D3DDECLMETHOD_DEFAULT, D3DDECLUSAGE_COLOR, 0 },
	{ 0, 20, D3DDECLTYPE_FLOAT2, D3DDECLMETHOD_DEFAULT,      D3DDECLUSAGE_TEXCOORD, 0 }
END_VERTEX_DECLARATION(sVertexXYZWDT1)

//int sVertexXYZWDT2::fmt	=	D3DFVF_XYZRHW|D3DFVF_DIFFUSE|D3DFVF_TEX2;
BEGIN_VERTEX_DECLARATION(sVertexXYZWDT2)
{ 0, 0,  D3DDECLTYPE_FLOAT4, D3DDECLMETHOD_DEFAULT, D3DDECLUSAGE_POSITIONT, 0 },
{ 0, 16, D3DDECLTYPE_D3DCOLOR, D3DDECLMETHOD_DEFAULT, D3DDECLUSAGE_COLOR, 0 },
{ 0, 20, D3DDECLTYPE_FLOAT2, D3DDECLMETHOD_DEFAULT,      D3DDECLUSAGE_TEXCOORD, 0 },
{ 0, 28, D3DDECLTYPE_FLOAT2, D3DDECLMETHOD_DEFAULT,      D3DDECLUSAGE_TEXCOORD, 1 }
END_VERTEX_DECLARATION(sVertexXYZWDT2)
//int sVertexXYZWDT2::fmt	=	D3DFVF_XYZRHW|D3DFVF_DIFFUSE|D3DFVF_TEX3;
BEGIN_VERTEX_DECLARATION(sVertexXYZWDT3)
{ 0, 0,  D3DDECLTYPE_FLOAT4, D3DDECLMETHOD_DEFAULT, D3DDECLUSAGE_POSITIONT, 0 },
{ 0, 16, D3DDECLTYPE_D3DCOLOR, D3DDECLMETHOD_DEFAULT, D3DDECLUSAGE_COLOR, 0 },
{ 0, 20, D3DDECLTYPE_FLOAT2, D3DDECLMETHOD_DEFAULT,      D3DDECLUSAGE_TEXCOORD, 0 },
{ 0, 28, D3DDECLTYPE_FLOAT2, D3DDECLMETHOD_DEFAULT,      D3DDECLUSAGE_TEXCOORD, 1 },
{ 0, 36, D3DDECLTYPE_FLOAT2, D3DDECLMETHOD_DEFAULT,      D3DDECLUSAGE_TEXCOORD, 2 }
END_VERTEX_DECLARATION(sVertexXYZWDT3)

//int sVertexXYZINT1::fmt	=	D3DFVF_XYZ|D3DFVF_XYZB1|D3DFVF_LASTBETA_UBYTE4|D3DFVF_NORMAL|D3DFVF_TEX1;
BEGIN_VERTEX_DECLARATION(sVertexXYZINT1)
	{ 0, 0,  D3DDECLTYPE_FLOAT3, D3DDECLMETHOD_DEFAULT, D3DDECLUSAGE_POSITION, 0 },
	{ 0, 12, D3DDECLTYPE_D3DCOLOR, D3DDECLMETHOD_DEFAULT, D3DDECLUSAGE_BLENDINDICES, 0 },
	{ 0, 16, D3DDECLTYPE_FLOAT3, D3DDECLMETHOD_DEFAULT, D3DDECLUSAGE_NORMAL, 0 },
	{ 0, 28, D3DDECLTYPE_FLOAT2, D3DDECLMETHOD_DEFAULT,      D3DDECLUSAGE_TEXCOORD, 0 }
END_VERTEX_DECLARATION(sVertexXYZINT1)

//int sVertexXYZW4INT1::fmt	=	D3DFVF_XYZ|D3DFVF_XYZB5|D3DFVF_LASTBETA_UBYTE4|D3DFVF_NORMAL|D3DFVF_TEX1;

LPDIRECT3DVERTEXDECLARATION9 declaration_sVertexXYZW4INT1;

//int sVertexD::fmt	=	D3DFVF_DIFFUSE;
BEGIN_VERTEX_DECLARATION(sVertexD)
	{ 0, 0, D3DDECLTYPE_D3DCOLOR, D3DDECLMETHOD_DEFAULT, D3DDECLUSAGE_COLOR, 0 }
END_VERTEX_DECLARATION(sVertexD)

//D3DDTCAPS_DEC3N D3DDTCAPS_UDEC3 D3DDTCAPS_USHORT2N
BEGIN_VERTEX_DECLARATION(shortVertexXYZ)
	{ 0, 0,  D3DDECLTYPE_SHORT4, D3DDECLMETHOD_DEFAULT, D3DDECLUSAGE_POSITION, 0 }
END_VERTEX_DECLARATION(shortVertexXYZ)

BEGIN_VERTEX_DECLARATION(shortVertexXYZD)
{ 0, 0, D3DDECLTYPE_SHORT4, D3DDECLMETHOD_DEFAULT, D3DDECLUSAGE_POSITION, 0 },
{ 0, 8, D3DDECLTYPE_D3DCOLOR, D3DDECLMETHOD_DEFAULT, D3DDECLUSAGE_COLOR, 0 }
END_VERTEX_DECLARATION(shortVertexXYZD)

BEGIN_VERTEX_DECLARATION(shortVertexGrass)
{ 0, 0, D3DDECLTYPE_SHORT4, D3DDECLMETHOD_DEFAULT, D3DDECLUSAGE_POSITION, 0 },
{ 0, 8, D3DDECLTYPE_D3DCOLOR, D3DDECLMETHOD_DEFAULT, D3DDECLUSAGE_COLOR, 0 },
{ 0, 12, D3DDECLTYPE_D3DCOLOR, D3DDECLMETHOD_DEFAULT,   D3DDECLUSAGE_NORMAL, 0 },
{ 0, 16, D3DDECLTYPE_SHORT4, D3DDECLMETHOD_DEFAULT, D3DDECLUSAGE_TEXCOORD, 0 },
{ 0, 24, D3DDECLTYPE_FLOAT1, D3DDECLMETHOD_DEFAULT, D3DDECLUSAGE_TEXCOORD, 1 }
END_VERTEX_DECLARATION(shortVertexGrass)

//////////////////////////////cSkinVertex
BEGIN_VERTEX_DECLARATION(cSkinVertex)
	{ 0, 0,  D3DDECLTYPE_FLOAT3, D3DDECLMETHOD_DEFAULT, D3DDECLUSAGE_POSITION, 0 },
	{ 0, 3*4, D3DDECLTYPE_D3DCOLOR, D3DDECLMETHOD_DEFAULT, D3DDECLUSAGE_BLENDINDICES, 0 },
	{ 0, 4*4, D3DDECLTYPE_FLOAT3, D3DDECLMETHOD_DEFAULT, D3DDECLUSAGE_NORMAL, 0 },
	{ 0, 7*4, D3DDECLTYPE_FLOAT2, D3DDECLMETHOD_DEFAULT, D3DDECLUSAGE_TEXCOORD, 0 }
END_VERTEX_DECLARATION(cSkinVertex)

BEGIN_VERTEX_DECLARATION_EX(cSkinVertex,declaration_diffuse)
	{ 0, 0,  D3DDECLTYPE_FLOAT3, D3DDECLMETHOD_DEFAULT, D3DDECLUSAGE_POSITION, 0 },
	{ 0, 3*4,  D3DDECLTYPE_D3DCOLOR, D3DDECLMETHOD_DEFAULT, D3DDECLUSAGE_BLENDINDICES, 0 },
	{ 0, 4*4, D3DDECLTYPE_FLOAT3, D3DDECLMETHOD_DEFAULT, D3DDECLUSAGE_NORMAL, 0 },
	{ 0, 7*4, D3DDECLTYPE_D3DCOLOR, D3DDECLMETHOD_DEFAULT, D3DDECLUSAGE_COLOR, 0 },
	{ 0, 8*4, D3DDECLTYPE_FLOAT2, D3DDECLMETHOD_DEFAULT, D3DDECLUSAGE_TEXCOORD, 0 }
END_VERTEX_DECLARATION_EX(cSkinVertex,declaration_diffuse)

BEGIN_VERTEX_DECLARATION_EX(cSkinVertex,declaration_bump)
	{ 0, 0,  D3DDECLTYPE_FLOAT3, D3DDECLMETHOD_DEFAULT, D3DDECLUSAGE_POSITION, 0 },
	{ 0, 3*4,  D3DDECLTYPE_D3DCOLOR, D3DDECLMETHOD_DEFAULT, D3DDECLUSAGE_BLENDINDICES, 0 },
	{ 0, 4*4, D3DDECLTYPE_FLOAT3, D3DDECLMETHOD_DEFAULT, D3DDECLUSAGE_NORMAL, 0 },
	{ 0, 7*4, D3DDECLTYPE_FLOAT2, D3DDECLMETHOD_DEFAULT, D3DDECLUSAGE_TEXCOORD, 0 },
	{ 0, 9*4, D3DDECLTYPE_FLOAT3, D3DDECLMETHOD_DEFAULT, D3DDECLUSAGE_BINORMAL, 0 },
	{ 0, 12*4, D3DDECLTYPE_FLOAT3, D3DDECLMETHOD_DEFAULT, D3DDECLUSAGE_TANGENT, 0 }
END_VERTEX_DECLARATION_EX(cSkinVertex,declaration_bump)

BEGIN_VERTEX_DECLARATION_EX(cSkinVertex,declaration_diffuse_bump)
	{ 0, 0,  D3DDECLTYPE_FLOAT3, D3DDECLMETHOD_DEFAULT, D3DDECLUSAGE_POSITION, 0 },
	{ 0, 3*4,  D3DDECLTYPE_D3DCOLOR, D3DDECLMETHOD_DEFAULT, D3DDECLUSAGE_BLENDINDICES, 0 },
	{ 0, 4*4, D3DDECLTYPE_FLOAT3, D3DDECLMETHOD_DEFAULT, D3DDECLUSAGE_NORMAL, 0 },
	{ 0, 7*4, D3DDECLTYPE_D3DCOLOR, D3DDECLMETHOD_DEFAULT, D3DDECLUSAGE_COLOR, 0 },
	{ 0, 8*4, D3DDECLTYPE_FLOAT2, D3DDECLMETHOD_DEFAULT, D3DDECLUSAGE_TEXCOORD, 0 },
	{ 0, 10*4, D3DDECLTYPE_FLOAT3, D3DDECLMETHOD_DEFAULT, D3DDECLUSAGE_BINORMAL, 0 },
	{ 0, 13*4, D3DDECLTYPE_FLOAT3, D3DDECLMETHOD_DEFAULT, D3DDECLUSAGE_TANGENT, 0 }
END_VERTEX_DECLARATION_EX(cSkinVertex,declaration_diffuse_bump)

BEGIN_VERTEX_DECLARATION_EX(cSkinVertex,declaration_uv2)
	{ 0, 0,  D3DDECLTYPE_FLOAT3, D3DDECLMETHOD_DEFAULT, D3DDECLUSAGE_POSITION, 0 },
	{ 0, 3*4, D3DDECLTYPE_D3DCOLOR, D3DDECLMETHOD_DEFAULT, D3DDECLUSAGE_BLENDINDICES, 0 },
	{ 0, 4*4, D3DDECLTYPE_FLOAT3, D3DDECLMETHOD_DEFAULT, D3DDECLUSAGE_NORMAL, 0 },
	{ 0, 7*4, D3DDECLTYPE_FLOAT2, D3DDECLMETHOD_DEFAULT, D3DDECLUSAGE_TEXCOORD, 0 },
	{ 0, 9*4, D3DDECLTYPE_FLOAT2, D3DDECLMETHOD_DEFAULT, D3DDECLUSAGE_TEXCOORD, 1 }
END_VERTEX_DECLARATION_EX(cSkinVertex,declaration_uv2)

BEGIN_VERTEX_DECLARATION_EX(cSkinVertex,declaration_diffuse_uv2)
	{ 0, 0,  D3DDECLTYPE_FLOAT3, D3DDECLMETHOD_DEFAULT, D3DDECLUSAGE_POSITION, 0 },
	{ 0, 3*4,  D3DDECLTYPE_D3DCOLOR, D3DDECLMETHOD_DEFAULT, D3DDECLUSAGE_BLENDINDICES, 0 },
	{ 0, 4*4, D3DDECLTYPE_FLOAT3, D3DDECLMETHOD_DEFAULT, D3DDECLUSAGE_NORMAL, 0 },
	{ 0, 7*4, D3DDECLTYPE_D3DCOLOR, D3DDECLMETHOD_DEFAULT, D3DDECLUSAGE_COLOR, 0 },
	{ 0, 8*4, D3DDECLTYPE_FLOAT2, D3DDECLMETHOD_DEFAULT, D3DDECLUSAGE_TEXCOORD, 0 },
	{ 0, 10*4, D3DDECLTYPE_FLOAT2, D3DDECLMETHOD_DEFAULT, D3DDECLUSAGE_TEXCOORD, 1 }
END_VERTEX_DECLARATION_EX(cSkinVertex,declaration_diffuse_uv2)

BEGIN_VERTEX_DECLARATION_EX(cSkinVertex,declaration_bump_uv2)
	{ 0, 0,  D3DDECLTYPE_FLOAT3, D3DDECLMETHOD_DEFAULT, D3DDECLUSAGE_POSITION, 0 },
	{ 0, 3*4,  D3DDECLTYPE_D3DCOLOR, D3DDECLMETHOD_DEFAULT, D3DDECLUSAGE_BLENDINDICES, 0 },
	{ 0, 4*4, D3DDECLTYPE_FLOAT3, D3DDECLMETHOD_DEFAULT, D3DDECLUSAGE_NORMAL, 0 },
	{ 0, 7*4, D3DDECLTYPE_FLOAT2, D3DDECLMETHOD_DEFAULT, D3DDECLUSAGE_TEXCOORD, 0 },
	{ 0, 9*4, D3DDECLTYPE_FLOAT3, D3DDECLMETHOD_DEFAULT, D3DDECLUSAGE_BINORMAL, 0 },
	{ 0, 12*4, D3DDECLTYPE_FLOAT3, D3DDECLMETHOD_DEFAULT, D3DDECLUSAGE_TANGENT, 0 },
	{ 0, 15*4, D3DDECLTYPE_FLOAT2, D3DDECLMETHOD_DEFAULT, D3DDECLUSAGE_TEXCOORD, 1 }
END_VERTEX_DECLARATION_EX(cSkinVertex,declaration_bump_uv2)

BEGIN_VERTEX_DECLARATION_EX(cSkinVertex,declaration_diffuse_bump_uv2)
	{ 0, 0,  D3DDECLTYPE_FLOAT3, D3DDECLMETHOD_DEFAULT, D3DDECLUSAGE_POSITION, 0 },
	{ 0, 3*4,  D3DDECLTYPE_D3DCOLOR, D3DDECLMETHOD_DEFAULT, D3DDECLUSAGE_BLENDINDICES, 0 },
	{ 0, 4*4, D3DDECLTYPE_FLOAT3, D3DDECLMETHOD_DEFAULT, D3DDECLUSAGE_NORMAL, 0 },
	{ 0, 7*4, D3DDECLTYPE_D3DCOLOR, D3DDECLMETHOD_DEFAULT, D3DDECLUSAGE_COLOR, 0 },
	{ 0, 8*4, D3DDECLTYPE_FLOAT2, D3DDECLMETHOD_DEFAULT, D3DDECLUSAGE_TEXCOORD, 0 },
	{ 0, 10*4, D3DDECLTYPE_FLOAT3, D3DDECLMETHOD_DEFAULT, D3DDECLUSAGE_BINORMAL, 0 },
	{ 0, 13*4, D3DDECLTYPE_FLOAT3, D3DDECLMETHOD_DEFAULT, D3DDECLUSAGE_TANGENT, 0 },
	{ 0, 16*4, D3DDECLTYPE_FLOAT2, D3DDECLMETHOD_DEFAULT, D3DDECLUSAGE_TEXCOORD, 1 }
END_VERTEX_DECLARATION_EX(cSkinVertex,declaration_diffuse_bump_uv2)

BYTE& cSkinVertex::GetWeight(int idx)
{
	VISASSERT(num_weight>0);

	BYTE* b=(BYTE*)(7+cur);
	switch(idx)
	{
	case 0:
		return b[2];
	case 1:
		return b[1];
	case 2:
		return b[0];
	case 3:
		return b[3];
	}

	VISASSERT(0);
	return b[0];
}

IDirect3DVertexDeclaration9* cSkinVertex::GetDeclaration()
{
	if(num_weight==0)
	{
		if(bump)
			return uv2?declaration_bump_uv2:declaration_bump;
		else
			return uv2?declaration_uv2:declaration;
	} else
	{
		if(bump)
			return uv2?declaration_diffuse_bump_uv2:declaration_diffuse_bump;
		else
			return uv2?declaration_diffuse_uv2:declaration_diffuse;
	}
}

cSkinVertex::cSkinVertex(int num_weight_,bool bump_,bool uv2_)
:p(0),num_weight(num_weight_),vb_size(0),bump(bump_),uv2(uv2_)
{
	offset_texel=7+(num_weight?1:0);
	offset_bump_s=9+(num_weight?1:0);
	offset_bump_t=12+(num_weight?1:0);
	offset_texel2=9+(num_weight?1:0)+(bump?6:0);
}
