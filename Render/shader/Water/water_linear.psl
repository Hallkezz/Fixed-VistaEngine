struct PS_INPUT
{
	float2 uv_tex0:TEXCOORD0;
	float2 uv_tex1:TEXCOORD1;
	float4 uv_sky:TEXCOORD2;
    float4  diffuse: COLOR0;
    
	float2 uv_lightmap:TEXCOORD3;
	float3 point_pos:TEXCOORD4;
#ifdef FLOAT_ZBUFFER	
	float4 zpos:TEXCOORD5;
#endif
};

sampler2D Tex0Sampler:register(s0);
sampler2D Tex1Sampler:register(s1);
sampler2D SkySampler:register(s2);
sampler2D LightMapSampler:register(s3);
sampler2D ZBufferMap:register(s4);
float4 vFogOfWar:register(c3);

float3 vCameraPos;
float3 vLightDirection;
float3 vLightColor;
float4 vReflectionColor;
float fBrightnes;

float4 main(const PS_INPUT v):COLOR
{
//*
	float4 ot;
	float4 tex0=tex2D(Tex0Sampler,v.uv_tex0);
	float4 tex1=tex2D(Tex1Sampler,v.uv_tex1);
	float4 uv_sky=v.uv_sky;
	uv_sky.xy+=(tex0.xy+tex1.xy)*uv_sky.w*0.03;
	float4 sky=tex2Dproj(SkySampler,uv_sky);
	ot.rgb=sky.rgb*vReflectionColor.a+vReflectionColor.rgb;
	ot.rgb = saturate(ot.rgb*((1-sky.a)*fBrightnes+1));

	float3 n;
	n.xy=(tex0.xy+tex1.xy)*0.5;
	n.z=1;
	n=normalize(n);
	float3 Lmitrror=vLightDirection-2*dot(n,vLightDirection)*n;
	float3 eye=normalize(v.point_pos-vCameraPos);
	
	float light=smoothstep(0.97,1,-dot(Lmitrror,eye));
	ot.rgb+=light*vLightColor;
//	ot.a=v.diffuse.a*(1+light+saturate((tex0.x+tex1.x)));
	ot.a=v.diffuse.a*(1+light);//Потому как на Radeon x1600 баг.

#ifdef FOG_OF_WAR
	float4 lightmap=tex2D(LightMapSampler,v.uv_lightmap);
	ot.rgb=lerp(ot.rgb,vFogOfWar,lightmap.a);
#endif
#ifdef FLOAT_ZBUFFER
	float zb = tex2Dproj(ZBufferMap,v.zpos).r;
	float res = (zb-v.zpos.z)*0.1f;
	ot.a *= saturate(res);
#endif
/*/
	float4 ot=tex2Dproj(SkySampler,v.uv_sky);
	ot.a=v.diffuse.a;
/**/
	return ot;
}
